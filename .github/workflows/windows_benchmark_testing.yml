# This is a basic workflow to help you get started with Actions

name: testing_pipeline

# Controls when the action will run.
# Triggers the workflow on push or pull request
# events but only for the devel branch
on:
  pull_request_target:
    branches:
      - devel
      - main
    paths:
      - '**.yml'
      - '**.sh'
      - '**.j2'
      - '**.ps1'
      - '**.cfg'

# A workflow run is made up of one or more jobs
# that can run sequentially or in parallel
jobs:
  # This will create messages for first time contributers and direct them to the Discord server
  welcome:
      runs-on: ubuntu-latest

      steps:
          - uses: actions/first-interaction@main
            with:
                repo-token: ${{ secrets.GITHUB_TOKEN }}
                pr-message: |-
                  Congrats on opening your first pull request and thank you for taking the time to help improve Ansible-Lockdown! 
                  Please join in the conversation happening on the [Discord Server](https://discord.gg/ArDjfhY8) as well.
              
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Set the OS to test on here
    # Name matches the os_name.tfvars file
    # one of
    # - centos7
    # - rocky8
    # - ubuntu20
    # - ubuntu18
    # - windows

    env: 
      TEST_OS: windows
      ENABLE_DEBUG: false
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      WIN_USERNAME: ${{ secrets.WIN_USERNAME }}
      WIN_PASSWORD: ${{ secrets.WIN_PASSWORD }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, 
      # so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

# Sensitive data stored and passed to terraform
      - name: user details
        working-directory: .github/workflows
        run: echo "{\"username\":\"${WIN_USERNAME}\",\"password\":\"${WIN_PASSWORD}\"}" >> sensitive_info.json

### Build out the server
      - name: Terraform_Init
        working-directory: .github/workflows
        run: terraform init

      - name: Terraform_Validate
        working-directory: .github/workflows
        run: terraform validate

      - name: Terraform_Apply
        working-directory: .github/workflows
        run: terraform apply -var-file "${TEST_OS}.tfvars" --auto-approve

## Debug Section
      - name: DEBUG - Show Ansible hostfile
        if: env.ENABLE_DEBUG == 'true'
        working-directory: .github/workflows
        run: cat hosts.yml

# Run the ansible playbook
      - name: Run_Ansible_Playbook
        uses: arillso/action.playbook@master
        with:
          playbook: site.yml
          inventory: .github/workflows/hosts.yml
          galaxy_file: collections/requirements.yml
#          verbose: 3
        env:
          ANSIBLE_HOST_KEY_CHECKING: "false"
          ANSIBLE_DEPRECATION_WARNINGS: "false"

# Remove test system

      - name: Terraform_Destroy
        if: always() && env.ENABLE_DEBUG == 'false'
        working-directory: .github/workflows
        run: terraform destroy -var-file "${TEST_OS}.tfvars" -auto-approve
