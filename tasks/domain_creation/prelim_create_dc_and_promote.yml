---

- name: PRELIM | Domain Creation | Gather Facts For Windows Host
  ansible.windows.win_shell: Get-WindowsFeature | Where-Object { $_.Installed -eq $true } | Select-Object -ExpandProperty Name
  changed_when: false
  register: prelim_installed_features

- name: PRELIM | Domain Creation | Ensure 'AD-Domain-Services' Role Is Installed
  when: "'AD-Domain-Services' not in prelim_installed_features.stdout_lines"
  ansible.windows.win_feature:
    name: AD-Domain-Services
    state: present

- name: PRELIM | Domain Creation | Install Management Tools For AD DS
  ansible.windows.win_feature:
    name: RSAT-ADDS
    state: present

- name: PRELIM | Domain Creation | Install AD-Domain-Services Feature
  ansible.windows.win_feature:
    name: AD-Domain-Services
    include_management_tools: true
  register: prelim_ad_feature_installation

- name: PRELIM | Domain Creation | Check If The Server Is Already A Domain Controller
  ansible.windows.win_shell: |
    try {
      $dc = Get-ADDomainController
      Write-Output "Domain Controller exists: $($dc.HostName)"
    } catch {
      Write-Output "No Domain Controller"
    }
  changed_when: false
  register: prelim_domain_controller_check

- name: PRELIM | Domain Creation | Check If It Is A DC
  ansible.builtin.debug:
    msg: "{{ prelim_domain_controller_check }}"

- name: PRELIM | Domain Creation | Promote To Primary Domain Controller
  when:
    - "'No Domain Controller' in prelim_domain_controller_check.stdout"
    - prelim_ad_feature_installation.changed or "'No Domain Controller' in prelim_domain_controller_check.stdout"
  ansible.windows.win_shell: |
    Install-ADDSForest `
      -DomainName "{{ win19cis_domain }}" `
      -ForestMode "WinThreshold" `
      -DomainMode "WinThreshold" `
      -SafeModeAdministratorPassword (ConvertTo-SecureString '{{ win19cis_safe_mode_administrator_password }}' -AsPlainText -Force) `
      -InstallDNS `
      -Force
  register: prelim_promote_result

- name: PRELIM | Domain Creation | Reboot After Promotion If Required
  when: prelim_promote_result is changed and prelim_promote_result.rc == 0
  ansible.windows.win_reboot:
    msg: "Rebooting to complete AD DS promotion to primary domain controller."

- name: PRELIM | Domain Creation | Wait For 360 Seconds After Reboot
  when: prelim_promote_result is changed and prelim_promote_result.rc == 0
  ansible.builtin.pause:
    seconds: 360

- name: PRELIM | Domain Creation | Verify the Domain Is Created And Server Is Promoted As Primary DC
  failed_when: "'No Primary Domain Controller found.' in prelim_dc_check_result.stdout"
  ansible.windows.win_shell: |
      $domain = Get-ADDomain -ErrorAction Stop
      $dc = Get-ADDomainController -DomainName $domain.DNSRoot -Discover -Service "PrimaryDC"
      if ($dc -ne $null) {
        Write-Output "Primary Domain Controller is: $($dc.HostName)"
      } else {
        Write-Output "No Primary Domain Controller found."
      }
  changed_when: false
  register: prelim_dc_check_result

- name: PRELIM | Domain Creation | Output Domain Controller Verification Result
  ansible.builtin.debug:
    msg: "{{ prelim_dc_check_result.stdout }}"

- name: PRELIM | Domain Creation | Get The Domain Name Of The Windows Machine
  ansible.windows.win_shell: |
    (Get-WmiObject Win32_ComputerSystem).Domain
  register: prelim_discovered_domain_name_result_dc_creation
  changed_when: false

- name: PRELIM | Domain Creation | Set A Variable With The Domain Name
  ansible.builtin.set_fact:
    prelim_discovered_domain_name_dc_creation: "{{ prelim_discovered_domain_name_result_dc_creation.stdout_lines[0] | regex_replace('\r\n', '') }}"

- name: PRELIM | Domain Creation | Display The Domain Name Variable
  ansible.builtin.debug:
    msg: "The Domain Name Is: {{ prelim_discovered_domain_name_dc_creation }}"
