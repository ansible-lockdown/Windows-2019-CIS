---

- name: "2.2.1 | GPO | Ensure Access Credential Manager as a trusted caller is set to No One."
  when:
    - win19cis_rule_2_2_1
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.1
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeTrustedCredManAccessPrivilege =.*$"
    line: "SeTrustedCredManAccessPrivilege = "
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.2 | GPO | Ensure Access this computer from the network is set to Administrators, Authenticated Users, & ENTERPRISE DOMAIN CONTROLLERS DC only | Domain Controller."
  when:
    - win19cis_rule_2_2_2
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - rule_2.2.2
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeNetworkLogonRight =.*$"
    line: "SeNetworkLogonRight = Administrators, Authenticated Users, ENTERPRISE DOMAIN CONTROLLERS"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.3 | GPO | Ensure Access this computer from the network is set to Administrators, Authenticated Users, & ENTERPRISE DOMAIN CONTROLLERS MS only | Member Server."
  when:
    - win19cis_rule_2_2_3
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-memberserver
    - rule_2.2.3
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeNetworkLogonRight =.*$"
    line: "SeNetworkLogonRight = Administrators, Authenticated Users"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.4 | GPO | Ensure Act as part of the operating system is set to No One."
  when:
    - win19cis_rule_2_2_4
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.4
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeTcbPrivilege =.*$"
    line: "SeTcbPrivilege = "
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.5 | GPO | Ensure Add workstations to domain is set to Administrators DC only."
  when:
    - win19cis_rule_2_2_5
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - rule_2.2.5
    - patch
    - userright
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeMachineAccountPrivilege =.*$"
    line: "SeMachineAccountPrivilege = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.6 | GPO | Ensure Adjust memory quotas for a process is set to Administrators, LOCAL SERVICE, NETWORK SERVICE."
  when:
    - win19cis_rule_2_2_6
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.6
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeIncreaseQuotaPrivilege =.*$"
    line: "SeIncreaseQuotaPrivilege = Administrators, LOCAL SERVICE, NETWORK SERVICE"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.7 | GPO | Ensure Allow log on locally is set to Administrators, ENTERPRISE DOMAIN CONTROLLERS (DC only)."
  when:
    - win19cis_rule_2_2_7
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - rule_2.2.7
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeInteractiveLogonRight =.*$"
    line: "SeInteractiveLogonRight = Administrators, ENTERPRISE DOMAIN CONTROLLERS"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.8 | GPO | Ensure Allow log on locally is set to Administrators (MS only)."
  when:
    - win19cis_rule_2_2_8
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-memberserver
    - rule_2.2.8
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeInteractiveLogonRight =.*$"
    line: "SeInteractiveLogonRight = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.9 | GPO | Ensure 'Allow log on through Remote Desktop Services' is set to 'Administrators' (DC only)."
  when:
    - win19cis_rule_2_2_9
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - rule_2.2_9
    - patch
    - userrights
    - remotedesktop
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeRemoteInteractiveLogonRight =.*$"
    line: "SeRemoteInteractiveLogonRight = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.10 | GPO | Ensure 'Allow log on through Remote Desktop Services' is set to 'Administrators, Remote Desktop Users' (MS only)."
  when:
    - win19cis_rule_2_2_10
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-memberserver
    - rule_2.2.10
    - patch
    - userrights
    - remotedesktop
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeRemoteInteractiveLogonRight =.*$"
    line: "SeRemoteInteractiveLogonRight = Administrators, Remote Desktop Users"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.11 | GPO | Ensure Back up files and directories is set to Administrators."
  when:
    - win19cis_rule_2_2_11
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.11
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeBackupPrivilege =.*$"
    line: "SeBackupPrivilege = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.12 | GPO | Ensure Change the system time is set to Administrators, LOCAL SERVICE."
  when:
    - win19cis_rule_2_2_12
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.12
    - patch
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeSystemTimePrivilege =.*$"
    line: "SeSystemTimePrivilege = Administrators, LOCAL SERVICE"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.13 | GPO | Ensure Change the time zone is set to Administrators, LOCAL SERVICE."
  when:
    - win19cis_rule_2_2_13
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.13
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeTimeZonePrivilege =.*$"
    line: "SeTimeZonePrivilege = Administrators, LOCAL SERVICE"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.14 | GPO | Ensure Create a pagefile is set to Administrators."
  when:
    - win19cis_rule_2_2_14
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.14
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeCreatePagefilePrivilege =.*$"
    line: "SeCreatePagefilePrivilege = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.15 | GPO | Ensure Create a token object is set to No One."
  when:
    - win19cis_rule_2_2_15
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.15
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeCreateTokenPrivilege =.*$"
    line: "SeCreateTokenPrivilege = "
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.16 | GPO | Ensure Create global objects is set to Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE."
  when:
    - win19cis_rule_2_2_16
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.16
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeCreateGlobalPrivilege =.*$"
    line: "SeCreateGlobalPrivilege = Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.17 | GPO | Ensure Create permanent shared objects is set to No One."
  when:
    - win19cis_rule_2_2_17
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.17
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeCreatePermanentPrivilege =.*$"
    line: "SeCreatePermanentPrivilege = "
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.18 | GPO | Ensure Create symbolic links is set to Administrators (DC only)."
  when:
    - win19cis_rule_2_2_18
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - rule_2.2.18
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeCreateSymbolicLinkPrivilege =.*$"
    line: "SeCreateSymbolicLinkPrivilege = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.19 | GPO | Ensure Create symbolic links is set to Administrators NT VIRTUAL MACHINEVirtual Machines MS only."
  when: win19cis_rule_2_2_19
  tags:
    - level1-memberserver
    - rule_2.2.19
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  block:
    - name: "2.2.19 | GPO | Ensure Create symbolic links is set to Administrators NT VIRTUAL MACHINEVirtual Machines MS only | No Hyper-V Installed."
      when:
        - not win19cis_hyperv_installed
        - "'Skipped' not in item.gpo_guid"
      community.windows.win_lineinfile:
        path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
        regexp: "^SeCreateSymbolicLinkPrivilege =.*$"
        line: "SeCreateSymbolicLinkPrivilege = Administrators"
        insertafter: "^\\[Privilege Rights\\]$"
      loop:
        - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
      loop_control:
        label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

    - name: "2.2.19 | GPO | Ensure Create symbolic links is set to Administrators NT VIRTUAL MACHINEVirtual Machines MS only | Hyper-V Installed."
      when:
        - win19cis_hyperv_installed
        - "'Skipped' not in item.gpo_guid"
      community.windows.win_lineinfile:
        path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
        regexp: "^SeCreateSymbolicLinkPrivilege =.*$"
        line: "SeCreateSymbolicLinkPrivilege = Administrators, NT VIRTUAL MACHINE\\Virtual Machines"
        insertafter: "^\\[Privilege Rights\\]$"
      loop:
        - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
      loop_control:
        label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.20 | GPO | Ensure Debug programs is set to Administrators."
  when:
    - win19cis_rule_2_2_20
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.20
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeDebugPrivilege =.*$"
    line: "SeDebugPrivilege = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.21 | GPO | Ensure Deny access to this computer from the network to include Guests DC only."
  when:
    - win19cis_rule_2_2_21
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - rule_2.2.21
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeDenyNetworkLogonRight =.*$"
    line: "SeDenyNetworkLogonRight = Guests"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.22 | GPO | Ensure Deny access to this computer from the network to include Guests, Local account and member of Administrators group MS only."
  when:
    - win19cis_rule_2_2_22
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-memberserver
    - rule_2.2.22
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeDenyNetworkLogonRight =.*$"
    line: "SeDenyNetworkLogonRight = Guests, Local Account, Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.23 | GPO | Ensure Deny log on as a batch job to include Guests."
  when:
    - win19cis_rule_2_2_23
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.23
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeDenyBatchLogonRight =.*$"
    line: "SeDenyBatchLogonRight = Guests"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.24 | GPO | Ensure Deny log on as a service to include Guests."
  when:
    - win19cis_rule_2_2_24
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.24
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeDenyServiceLogonRight =.*$"
    line: "SeDenyServiceLogonRight = Guests"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.25 | GPO | Ensure Deny log on locally to include Guests."
  when:
    - win19cis_rule_2_2_25
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.25
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeDenyInteractiveLogonRight =.*$"
    line: "SeDenyInteractiveLogonRight = Guests"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.26 | GPO | Ensure Deny log on through Remote Desktop Services to include Guests DC only."
  when:
    - win19cis_rule_2_2_26
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - rule_2.2.26
    - patch
    - guest
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeDenyRemoteInteractiveLogonRight =.*$"
    line: "SeDenyRemoteInteractiveLogonRight = Guests"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.27 | GPO | Ensure Deny log on through Remote Desktop Services is set to Guests, Local account MS only."
  when:
    - win19cis_rule_2_2_27
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-memberserver
    - rule_2.2.27
    - patch
    - guest
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeDenyRemoteInteractiveLogonRight =.*$"
    line: "SeDenyRemoteInteractiveLogonRight = Guests, Local Account"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.28 | GPO | Ensure Enable computer and user accounts to be trusted for delegation is set to Administrators DC only."
  when:
    - win19cis_rule_2_2_28
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - rule_2.2.28
    - patch
    - userrights
    - administrators
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeEnableDelegationPrivilege =.*$"
    line: "SeEnableDelegationPrivilege = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.29 | GPO | Ensure Enable computer and user accounts to be trusted for delegation is set to No One MS only."
  when:
    - win19cis_rule_2_2_29
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-memberserver
    - rule_2.2.29
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeEnableDelegationPrivilege =.*$"
    line: "SeEnableDelegationPrivilege = "
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.30 | GPO | Ensure Force shutdown from a remote system is set to Administrators."
  when:
    - win19cis_rule_2_2_30
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.30
    - patch
    - userrights
    - administrators
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeRemoteShutdownPrivilege =.*$"
    line: "SeRemoteShutdownPrivilege = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.31 | GPO | Ensure Generate security audits is set to LOCAL SERVICE, NETWORK SERVICE."
  when:
    - win19cis_rule_2_2_31
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.31
    - patch
    - userrights
    - services
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeAuditPrivilege =.*$"
    line: "SeAuditPrivilege = LOCAL SERVICE, NETWORK SERVICE"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.32 | GPO | Ensure Impersonate a client after authentication is set to Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE DC only."
  when:
    - win19cis_rule_2_2_32
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - rule_2.2.32
    - patch
    - userrights
    - services
    - administrators
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeImpersonatePrivilege =.*$"
    line: "SeImpersonatePrivilege = Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.33 | GPO | Ensure Impersonate a client after authentication is set to Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE and IIS_IUSRS if IIS Role is installed (MS only)."
  when:
    - win19cis_rule_2_2_33
  tags:
    - level1-memberserver
    - rule_2.2.33
    - patch
    - userrights
    - administrators
    - services
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  block:
    - name: "2.2.33 | GPO | Set to Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE (IIS not installed)."
      when:
        - not win19cis_iis_and_web_services_installed
        - "'Skipped' not in item.gpo_guid"
      community.windows.win_lineinfile:
        path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
        regexp: "^SeImpersonatePrivilege =.*$"
        line: "SeImpersonatePrivilege = Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE"
        insertafter: "^\\[Privilege Rights\\]$"
      loop:
        - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
      loop_control:
        label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

    - name: "2.2.33 | GPO | Set to Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE, IIS_IUSRS (IIS installed)."
      when:
        - win19cis_iis_and_web_services_installed
        - "'Skipped' not in item.gpo_guid"
      community.windows.win_lineinfile:
        path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
        regexp: "^SeImpersonatePrivilege =.*$"
        line: "SeImpersonatePrivilege = Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE, IIS_IUSRS"
        insertafter: "^\\[Privilege Rights\\]$"
      loop:
        - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
      loop_control:
        label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.34 | GPO | Ensure Increase scheduling priority is set to Administrators, Window Manager\\Window Manager Group."
  when: win19cis_rule_2_2_34
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.34
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  block:
    - name: "2.2.34 | GPO | Ensure Increase scheduling priority is set to Administrators, Window Manager\\Window Manager Group. | Not Server Core."
      when:
        - prelim_windows_installation_type != "Server Core"
        - "'Skipped' not in item.gpo_guid"
      community.windows.win_lineinfile:
        path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
        regexp: "^SeIncreaseBasePriorityPrivilege =.*$"
        line: "SeIncreaseBasePriorityPrivilege = Administrators, Window Manager\\Window Manager Group"
        insertafter: "^\\[Privilege Rights\\]$"
      loop:
        - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
        - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
      loop_control:
        label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

    - name: "2.2.34 | GPO | Ensure Increase scheduling priority is set to Administrators, Window Manager\\Window Manager Group. | Server Core."
      when:
        - prelim_windows_installation_type == "Server Core"
        - "'Skipped' not in item.gpo_guid"
      community.windows.win_lineinfile:
        path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
        regexp: "^SeIncreaseBasePriorityPrivilege =.*$"
        line: "SeIncreaseBasePriorityPrivilege = Administrators"
        insertafter: "^\\[Privilege Rights\\]$"
      loop:
        - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
        - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
      loop_control:
        label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.35 | GPO | Ensure Load and unload device drivers is set to Administrators."
  when:
    - win19cis_rule_2_2_35
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.35
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeLoadDriverPrivilege =.*$"
    line: "SeLoadDriverPrivilege = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.36 | GPO | Ensure Lock pages in memory is set to No One."
  when:
    - win19cis_rule_2_2_36
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.36
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeLockMemoryPrivilege =.*$"
    line: "SeLockMemoryPrivilege = "
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.37 | GPO | Ensure Log on as a batch job is set to Administrators (DC only)."
  when:
    - win19cis_rule_2_2_37
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level2-domaincontroller
    - rule_2.2.37
    - patch
    - userrights
    - administrators
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeBatchLogonRight =.*$"
    line: "SeBatchLogonRight = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l2_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l2_dc_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.38 | GPO | Ensure Manage auditing and security log is set to Administrators and Exchange Servers if Exchange is running (DC only)."
  when: win19cis_rule_2_2_38
  tags:
    - level1-domaincontroller
    - rule_2.2.38
    - patch
    - userrights
    - administrators
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  block:
    - name: "2.2.38 | GPO | Ensure Manage auditing and security log is set to Administrators and Exchange Servers if Exchange is running (DC only) | Exchange Not Running."
      when:
        - not win19cis_exchange_server_running
        - "'Skipped' not in item.gpo_guid"
      community.windows.win_lineinfile:
        path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
        regexp: "^SeSecurityPrivilege =.*$"
        line: "SeSecurityPrivilege = Administrators"
        insertafter: "^\\[Privilege Rights\\]$"
      loop:
        - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
      loop_control:
        label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

    - name: "2.2.38 | GPO | Ensure Manage auditing and security log is set to Administrators and Exchange Servers if Exchange is running (DC only) | Exchange Running."
      when:
        - win19cis_exchange_server_running
        - "'Skipped' not in item.gpo_guid"
      community.windows.win_lineinfile:
        path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
        regexp: "^SeSecurityPrivilege =.*$"
        line: "SeSecurityPrivilege = Administrators, Exchange Servers"
        insertafter: "^\\[Privilege Rights\\]$"
      loop:
        - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
      loop_control:
        label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.39 | GPO | Ensure Manage auditing and security log is set to Administrators, and when Exchange is running in the environment, Exchange Servers (MS only)."
  when:
    - win19cis_rule_2_2_39
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-memberserver
    - rule_2.2.39
    - patch
    - userrights
    - administrators
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeSecurityPrivilege =.*$"
    line: "SeSecurityPrivilege = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.40 | GPO | Ensure Modify an object label is set to No One."
  when:
    - win19cis_rule_2_2_40
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.40
    - patch
    - userrights
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeReLabelPrivilege =.*$"
    line: "SeReLabelPrivilege = "
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.41 | GPO | Ensure Modify firmware environment values is set to Administrators."
  when:
    - win19cis_rule_2_2_41
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.41
    - patch
    - userrights
    - administrators
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeSystemEnvironmentPrivilege =.*$"
    line: "SeSystemEnvironmentPrivilege = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.42 | GPO | Ensure Perform volume maintenance tasks is set to Administrators."
  when:
    - win19cis_rule_2_2_42
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.42
    - patch
    - userrights
    - administrators
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeManageVolumePrivilege =.*$"
    line: "SeManageVolumePrivilege = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.43 | GPO | Ensure Profile single process is set to Administrators."
  when:
    - win19cis_rule_2_2_43
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.43
    - patch
    - userrights
    - administrators
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeProfileSingleProcessPrivilege =.*$"
    line: "SeProfileSingleProcessPrivilege = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.44 | GPO | Ensure Profile system performance is set to Administrators, NT SERVICE\\WdiServiceHost."
  when:
    - win19cis_rule_2_2_44
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.44
    - patch
    - userrights
    - administrator
    - service
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeSystemProfilePrivilege =.*$"
    line: "SeSystemProfilePrivilege = Administrators, NT SERVICE\\WdiServiceHost"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.45 | GPO | Ensure Replace a process level token is set to LOCAL SERVICE, NETWORK SERVICE."
  when:
    - win19cis_rule_2_2_45
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.45
    - patch
    - userrights
    - service
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeAssignPrimaryTokenPrivilege =.*$"
    line: "SeAssignPrimaryTokenPrivilege = LOCAL SERVICE, NETWORK SERVICE"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.46 | GPO | Ensure Shut down the system is set to Administrators."
  when:
    - win19cis_rule_2_2_46
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.46
    - patch
    - userright
    - administrator
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeRestorePrivilege =.*$"
    line: "SeRestorePrivilege = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.47 | GPO | Ensure Shut down the system is set to Administrators."
  when:
    - win19cis_rule_2_2_47
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.47
    - patch
    - userright
    - administrator
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeShutdownPrivilege =.*$"
    line: "SeShutdownPrivilege = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.48 | GPO | Ensure Synchronize directory service data is set to No One DC only."
  when:
    - win19cis_rule_2_2_48
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - rule_2.2.48
    - patch
    - userright
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeSyncAgentPrivilege =.*$"
    line: "SeSyncAgentPrivilege = "
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.2.49 | GPO | Ensure Take ownership of files or other objects is set to Administrators."
  when:
    - win19cis_rule_2_2_49
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.2.49
    - patch
    - userright
    - administrator
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AU-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AU-9_4
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^SeTakeOwnershipPrivilege =.*$"
    line: "SeTakeOwnershipPrivilege = Administrators"
    insertafter: "^\\[Privilege Rights\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.3.1.1 | GPO | Ensure Accounts Block Microsoft accounts is set to Users cant add or log on with Microsoft accounts."
  when:
    - win19cis_rule_2_3_1_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.1.1
    - patch
    - securitypolicy
    - gpo
    - NIST800-171_3.1.1
    - NIST800-53_AC-2_1
    - NIST800-53R5_AC-2_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
    $registryValueName = "NoConnectedUser"
    $type = "DWORD"
    $desiredValue = 3

    # Adding The GPO Registry Entry Commands.
    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_1_1_results.stdout'
  register: rule_2_3_1_1_results

- name: "2.3.1.2 | GPO | Ensure Accounts Guest account status is set to Disabled MS only"
  when: win19cis_rule_2_3_1_2
  tags:
    - level1-memberserver
    - rule_2.3.1.2
    - patch
    - securitypolicy
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_IA-5
    - NIST800-53R55_IA-5
  block:
    - name: "2.3.1.2 | GPO | Ensure Accounts Guest account status is set to Disabled MS only | Set Variable In GptTmpl.inf"
      when: "'Skipped' not in item.gpo_guid"
      community.windows.win_lineinfile:
        path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
        regexp: "^EnableGuestAccount =.*$"
        line: "EnableGuestAccount = 0"
        insertafter: "^\\[System Access\\]$"
      loop:
        - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
      loop_control:
        label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

    - name: "2.3.1.2 | GPO | Ensure Accounts Guest account status is set to Disabled MS only | Set Variable In Registry"
      when: "'Skipped' not in item.gpo_guid"
      ansible.windows.win_shell: |
        $gpoName = "{{ item.gpo_name }}"
        $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Control\Lsa"
        $registryValueName = "EnableGuestAccount"
        $type = "DWORD"
        $desiredValue = 0

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
      loop_control:
        label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"
      changed_when: '"Patched" in rule_2_3_1_2_results.stdout'
      register: rule_2_3_1_2_results

- name: "2.3.1.3 | GPO | Ensure Accounts Limit local account use of blank passwords to console logon only is set to Enabled"
  when:
    - win19cis_rule_2_3_1_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.1.3
    - patch
    - account
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_IA-5_1
    - NIST800-53R5_IA-5_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Control\Lsa"
    $registryValueName = "LimitBlankPasswordUse"
    $type = "DWORD"
    $desiredValue = 1

    # Adding the GPO Registry Entry Commands.
    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_1_3_results.stdout'
  register: rule_2_3_1_3_results

- name: "2.3.1.4 | GPO | Configure Accounts Rename administrator account"
  when: win19cis_rule_2_3_1_4
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.1.4
    - patch
    - securitypolicy
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_IA-5
    - NIST800-53R5_IA-5
  block:
    - name: "2.3.1.4 | GPO | Configure Accounts Rename administrator account. | Make Changes To Admin Name."
      when:
        - "'adminchangethis' not in win19cis_admin_username"
        - "'Skipped' not in item.gpo_guid"
      community.windows.win_lineinfile:
        path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
        regexp: "^NewAdministratorName =.*$"
        line: 'NewAdministratorName = "{{ win19cis_admin_username }}"'
        insertafter: "^\\[System Access\\]$"
      loop:
        - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
        - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
      loop_control:
        label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

    - name: "2.3.1.4 | AUDIT | Configure Accounts Rename administrator account. | Warning Msg For Default Variable Not Edited."
      when: "'adminchangethis' in win19cis_admin_username"
      ansible.builtin.debug:
        msg:
          - "Warning!! You have not changed the default admin username in win19cis_admin_username please"
          - "make the necessary change to the variable to be in compliance."

    - name: "2.3.1.4 | AUDIT | Configure Accounts Rename administrator account. | Add Warn Count."
      vars:
        warn_control_id: '2.3.1.4'
      when: "'adminchangethis' in win19cis_admin_username"
      ansible.builtin.import_tasks: warning_facts.yml

- name: "2.3.1.5 | GPO | Configure Accounts Rename guest account"
  when: win19cis_rule_2_3_1_5
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.1.5
    - patch
    - securitypolicy
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_IA-5
    - NIST800-53R5_IA-5
  block:
    - name: "2.3.1.5 | GPO | Configure Accounts Rename guest account. | Make Changes To Guest Name."
      when:
        - "'guestchangethis' not in win19cis_guest_username"
        - "'Skipped' not in item.gpo_guid"
      community.windows.win_lineinfile:
        path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
        regexp: "^NewGuestName =.*$"
        line: 'NewGuestName = "{{ win19cis_guest_username }}"'
        insertafter: "^\\[System Access\\]$"
      loop:
        - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
        - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
      loop_control:
        label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

    - name: "2.3.1.5 | AUDIT | Configure Accounts Rename guest account. | Warning Msg For Default Variable Not Edited."
      when: "'guestchangethis' in win19cis_guest_username"
      ansible.builtin.debug:
        msg:
          - "Warning!! You have not changed the default guest name in win19cis_guest_username please"
          - "make the necessary change to the variable to be in compliance."

    - name: "2.3.1.5 | AUDIT | Configure Accounts Rename guest account. | Add Warn Count."
      vars:
        warn_control_id: '2.3.1.5'
      when: "'guestchangethis' in win19cis_guest_username"
      ansible.builtin.import_tasks: warning_facts.yml

- name: "2.3.2.1 | GPO | Ensure Audit Force audit policy subcategory settings Windows Vista or later to override audit policy category settings is set to Enabled"
  when:
    - win19cis_rule_2_3_2_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.2.1
    - patch
    - auditpolicy
    - gpo
    - NIST800-171_3.3.1
    - NIST800-171_3.3.2
    - NIST800-171_3.3.6
    - NIST800-53_AU-3
    - NIST800-53_AU-3_1
    - NIST800-53_AU-7
    - NIST800-53_AU-12
    - NIST800-53R5_AU-3
    - NIST800-53R5_AU-3_1
    - NIST800-53R5_AU-7
    - NIST800-53R5_AU-12
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Control\Lsa"
    $registryValueName = "SCENoApplyLegacyAuditPolicy"
    $type = "DWORD"
    $desiredValue = 1

    # Adding the GPO Registry Entry Commands.
    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_2_1_results.stdout'
  register: rule_2_3_2_1_results

- name: "2.3.2.2 | GPO | Ensure Audit Shut down system immediately if unable to log security audits is set to Disabled"
  when:
    - win19cis_rule_2_3_2_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.2.2
    - patch
    - auditpolicy
    - gpo
    - NIST800-53_AU-4
    - NIST800-53R5_AU-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Control\Lsa"
    $registryValueName = "CrashOnAuditFail"
    $type = "DWORD"
    $desiredValue = 0

    # Adding the GPO Registry Entry Commands.
    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_2_2_results.stdout'
  register: rule_2_3_2_2_results

- name: "2.3.4.1 | GPO | Ensure Devices Prevent users from installing printer drivers is set to Enabled"
  when:
    - win19cis_rule_2_3_4_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2_3_4.1
    - patch
    - devices
    - gpo
    - NIST800-171_3.3.1
    - NIST800-171_3.1.5
    - NIST800-171_3.3.8
    - NIST800-171_3.3.9
    - NIST800-53_AC-2
    - NIST800-53_AC-3
    - NIST800-53_AC-6
    - NIST800-53_AC-6_1
    - NIST800-53_AC-6_7
    - NIST800-53_AC-9_4
    - NIST800-53R5_AC-2
    - NIST800-53R5_AC-3
    - NIST800-53R5_AC-6
    - NIST800-53R5_AC-6_1
    - NIST800-53R5_AC-6_7
    - NIST800-53R5_AC-9_4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Print\Providers\Lanman Print Services\Servers"
    $registryValueName = "AddPrinterDrivers"
    $type = "DWORD"
    $desiredValue = 1

    # Adding the GPO Registry Entry Commands.
    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_4_1_results.stdout'
  register: rule_2_3_4_1_results

- name: "2.3.5.1 | GPO | Ensure Domain controller Allow server operators to schedule tasks is set to Disabled DC only"
  when:
    - win19cis_rule_2_3_5_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - rule_2_3_5_1
    - patch
    - scheduledtasks
    - gpo
    - NIST800-171_3.1.5
    - NIST800-53_AC-6_8
    - NIST800-53R5_AC-6_8
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Control\Lsa"
    $registryValueName = "SubmitControl"
    $type = "DWORD"
    $desiredValue = 0

    # Adding the GPO Registry Entry Commands.
    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_5_1_results.stdout'
  register: rule_2_3_5_1_results

# Per CIS Note: If this policy is set as prescribed, the registry key vulnerablechannelallowlist will not be present in the above registry location.
- name: "2.3.5.2 | GPO | Ensure Domain controller Allow vulnerable Netlogon secure channel connections is set to Not Configured DC only"
  when:
    - win19cis_rule_2_3_5_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - rule_2.3.5.2
    - patch
    - logon
    - gpo
    - NIST800-171_3.4.2
    - NIST800-53_CM-6b
    - NIST800-53R5_CM-6b
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters"
    $registryValueName = "VulnerableChannelAllowList"

    # Check if the registry value exists
    $currentValue = Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue

    # If it exists, remove the registry value
    if ($currentValue) {
        Remove-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName
        Write-Output "Removed"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Removed" in rule_2_3_5_2_results.stdout'
  register: rule_2_3_5_2_results

- name: "2.3.5.3 | GPO | Ensure Domain controller LDAP server channel binding token requirements is set to Always DC only"
  when:
    - win19cis_rule_2_3_5_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - rule_2.3.5.3
    - patch
    - ldap
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA-5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA-5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Services\NTDS\Parameters"
    $registryValueName = "LdapEnforceChannelBinding"
    $type = "DWORD"
    $desiredValue = 2

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_5_3_results.stdout'
  register: rule_2_3_5_3_results

- name: "2.3.5.4 | GPO | Ensure Domain controller LDAP server signing requirements is set to Require signing DC only"
  when:
    - win19cis_rule_2_3_5_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - rule_2.3.5.4
    - patch
    - ldap
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA-5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA-5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Services\NTDS\Parameters"
    $registryValueName = "LDAPServerIntegrity"
    $type = "DWORD"
    $desiredValue = 2

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_5_4_results.stdout'
  register: rule_2_3_5_4_results

- name: "2.3.5.5 | GPO | Ensure Domain controller Refuse machine account password changes is set to Disabled DC only"
  when:
    - win19cis_rule_2_3_5_5
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - rule_2_3_5_5
    - patch
    - account
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-171_3.13.1
    - NIST800-171_3.13.2
    - NIST800-53_CM-1
    - NIST800-53_CM-2
    - NIST800-53_AC-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53_SA-3
    - NIST800-53_SA-8
    - NIST800-53_SA-10
    - NIST800-53R5_CM-1
    - NIST800-53R5_CM-2
    - NIST800-53R5_AC-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
    - NIST800-53R5_SA-3
    - NIST800-53R5_SA-8
    - NIST800-53R5_SA-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters"
    $registryValueName = "RefusePasswordChange"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_5_5_results.stdout'
  register: rule_2_3_5_5_results

- name: "2.3.6.1 | GPO | Ensure Domain member Digitally encrypt or sign secure channel data always is set to Enabled"
  when:
    - win19cis_rule_2_3_6_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - level1-domainmember
    - rule_2.3.6.1
    - patch
    - encryption
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA-5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA-5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\Netlogon\Parameters"
    $registryValueName = "RequireSignOrSeal"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dm_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dm_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_6_1_results.stdout'
  register: rule_2_3_6_1_results

- name: "2.3.6.2 | GPO | Ensure Domain member Digitally encrypt secure channel data when possible is set to Enabled"
  when:
    - win19cis_rule_2_3_6_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - level1-domainmember
    - rule_2.3.6.2
    - patch
    - encryption
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA-5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA-5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\Netlogon\Parameters"
    $registryValueName = "SealSecureChannel"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dm_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dm_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_6_2_results.stdout'
  register: rule_2_3_6_2_results

- name: "2.3.6.3 | GPO | Ensure Domain member Digitally sign secure channel data when possible is set to Enabled"
  when:
    - win19cis_rule_2_3_6_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - level1-domainmember
    - rule_2.3.6.3
    - patch
    - logon
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA-5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA-5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\Netlogon\Parameters"
    $registryValueName = "SignSecureChannel"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dm_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dm_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_6_3_results.stdout'
  register: rule_2_3_6_3_results

- name: "2.3.6.4 | GPO | Ensure Domain member Disable machine account password changes is set to Disabled"
  when:
    - win19cis_rule_2_3_6_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - level1-domainmember
    - rule_2.3.6.4
    - patch
    - logon
    - gpo
    - NIST800-171_3.1.1
    - NIST800-53_AC-2_1
    - NIST800-53R5_AC-2_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\Netlogon\Parameters"
    $registryValueName = "DisablePasswordChange"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dm_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dm_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_6_4_results.stdout'
  register: rule_2_3_6_4_results

- name: "2.3.6.5 | GPO | Ensure Domain member Maximum machine account password age is set to 30 or fewer days but not 0"
  when: win19cis_rule_2_3_6_5
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - level1-domainmember
    - rule_2.3.6.5
    - patch
    - account
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_IA-5_1
    - NIST800-53R5_IA-5_1
  block:
    - name: "2.3.6.5 | GPO | Ensure Domain member Maximum machine account password age is set to 30 or fewer days but not 0 | Create GPO Lines"
      when:
        - win19cis_domain_member_maximum_password_age <= 30
        - win19cis_domain_member_maximum_password_age > 0
        - "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\System\CurrentControlSet\Services\Netlogon\Parameters"
        $registryValueName = "MaximumPasswordAge"
        $type = "DWORD"
        $desiredValue = {{ win19cis_domain_member_maximum_password_age }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dm_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dm_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_2_3_6_5_results.stdout'
      register: rule_2_3_6_5_results

    - name: "2.3.6.5 | AUDIT | Ensure Domain member Maximum machine account password age is set to 30 or fewer days but not 0. | Warning Check For Variable Standards."
      when:
        - win19cis_domain_member_maximum_password_age > 30 or
          win19cis_domain_member_maximum_password_age == 0
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid number of days set for win19cis_domain_member_maximum_password_age please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "2.3.6.5 | AUDIT | Ensure Domain member Maximum machine account password age is set to 30 or fewer days but not 0. | Warn Count."
      vars:
        warn_control_id: '2.3.6.5'
      when:
        - win19cis_domain_member_maximum_password_age > 30 or
          win19cis_domain_member_maximum_password_age == 0
      ansible.builtin.import_tasks: warning_facts.yml

- name: "2.3.6.6 | GPO | Ensure Domain member Require strong Windows 2000 or later session key is set to Enabled"
  when:
    - win19cis_rule_2_3_6_6
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - level1-domainmember
    - rule_2.3.6.6
    - patch
    - logon
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA-5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA-5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\Netlogon\Parameters"
    $registryValueName = "RequireStrongKey"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dm_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dm_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_6_6_results.stdout'
  register: rule_2_3_6_6_results

- name: "2.3.7.1 | GPO | Ensure Interactive logon Do not require CTRL+ALT+DEL is set to Disabled"
  when:
    - win19cis_rule_2_3_7_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.7.1
    - patch
    - logon
    - gpo
    - NIST800-171_3.1.8
    - NIST800-171_3.1.18
    - NIST800-53_AC-7
    - NIST800-53_AC-19
    - NIST800-53R5_AC-7
    - NIST800-53R5_AC-19
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System"
    $registryValueName = "DisableCAD"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_7_1_results.stdout'
  register: rule_2_3_7_1_results

- name: "2.3.7.2 | GPO | Ensure Interactive logon Don't display last signed-in is set to Enabled"
  when:
    - win19cis_rule_2_3_7_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.7.2
    - patch
    - logon
    - gpo
    - NIST800-171_3.1.8
    - NIST800-171_3.1.18
    - NIST800-53_AC-7
    - NIST800-53_AC-19
    - NIST800-53R5_AC-7
    - NIST800-53R5_AC-19
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System"
    $registryValueName = "DontDisplayLastUserName"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_7_2_results.stdout'
  register: rule_2_3_7_2_results

- name: "2.3.7.3 | GPO | Ensure Interactive logon Machine inactivity limit is set to 900 or fewer seconds but not 0"
  when: win19cis_rule_2_3_7_3
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.7.3
    - patch
    - logon
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.10
    - NIST800-171_3.1.11
    - NIST800-53_AC-2_5
    - NIST800-53_AC-11
    - NIST800-53_AC-11_1
    - NIST800-53_AC-12
    - NIST800-53R5_AC-2_5
    - NIST800-53R5_AC-11
    - NIST800-53R5_AC-11_1
    - NIST800-53R5_AC-12
  block:
    - name: "2.3.7.3 | GPO | Ensure Interactive logon Machine inactivity limit is set to 900 or fewer seconds but not 0. | Apply GPO Setting."
      when:
        - win19cis_inactivity_timeout_seconds <= 900
        - win19cis_inactivity_timeout_seconds > 0
        - "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System"
        $registryValueName = "InactivityTimeoutSecs"
        $type = "DWORD"
        $desiredValue = {{ win19cis_inactivity_timeout_seconds }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_2_3_7_3_results.stdout'
      register: rule_2_3_7_3_results

    - name: "2.3.7.3 | AUDIT | Ensure Interactive logon Machine inactivity limit is set to 900 or fewer seconds but not 0. | Warning Check For Variable Standards."
      when:
        - win19cis_inactivity_timeout_seconds > 900 or
          win19cis_inactivity_timeout_seconds == 0
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid number of seconds set for win19cis_inactivity_timeout_seconds please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "2.3.7.3 | AUDIT | Ensure Interactive logon Machine inactivity limit is set to 900 or fewer seconds but not 0. | Warn Count."
      vars:
        warn_control_id: '2.3.7.3'
      when:
        - win19cis_inactivity_timeout_seconds > 900 or
          win19cis_inactivity_timeout_seconds == 0
      ansible.builtin.import_tasks: warning_facts.yml

- name: "2.3.7.4 | GPO | Configure Interactive logon Message text for users attempting to log on"
  when:
    - win19cis_rule_2_3_7_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.7.4
    - patch
    - logon
    - gpo
    - NIST800-171_3.1.9
    - NIST800-53_AC-8
    - NIST800-53R5_AC-8
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System"
    $registryValueName = "LegalNoticeText"
    $type = "string"
    $desiredValue = "{{ win19cis_legal_notice }}"

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_7_4_results.stdout'
  register: rule_2_3_7_4_results

- name: "2.3.7.5 | GPO | Configure Interactive logon Message title for users attempting to log on"
  when:
    - win19cis_rule_2_3_7_5
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.7.5
    - patch
    - logon
    - gpo
    - NIST800-171_3.1.9
    - NIST800-53_AC-8
    - NIST800-53R5_AC-8
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System"
    $registryValueName = "LegalNoticeCaption"
    $type = "string"
    $desiredValue = "{{ win19cis_legal_notice_caption }}"

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_7_5_results.stdout'
  register: rule_2_3_7_5_results

- name: "2.3.7.6 | GPO | Ensure Interactive logon Number of previous logons to cache in case domain controller is not available is set to 4 or fewer logons MS only"
  when: win19cis_rule_2_3_7_6
  tags:
    - level2-memberserver
    - rule_2_3_7_6
    - patch
    - logon
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_IA-5_13
    - NIST800-53R5_IA-5_13
  block:
    - name: "2.3.7.6 | GPO | Ensure Interactive logon Number of previous logons to cache in case domain controller is not available is set to 4 or fewer logons MS only. | Apply GPO Setting."
      when:
        - win19cis_cached_logons_count <= 4
        - "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows Nt\Currentversion\Winlogon"
        $registryValueName = "CachedLogonsCount"
        $type = "string"
        $desiredValue = "{{ win19cis_cached_logons_count }}"

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_2_3_7_6_results.stdout'
      register: rule_2_3_7_6_results

    - name: "2.3.7.6 | AUDIT| Ensure Interactive logon Number of previous logons to cache in case domain controller is not available is set to 4 or fewer logons MS only. | Warning Check For Variable Standards."
      when: win19cis_cached_logons_count > 4
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid number of logons set for win19cis_cached_logons_count please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "2.3.7.6 | AUDIT | Ensure Interactive logon Number of previous logons to cache in case domain controller is not available is set to 4 or fewer logons MS only. | Warn Count."
      vars:
        warn_control_id: '2.3.7.6'
      when: win19cis_cached_logons_count > 4
      ansible.builtin.import_tasks: warning_facts.yml

- name: "2.3.7.7 | GPO | Ensure Interactive logon Prompt user to change password before expiration is set to between 5 and 14 days"
  when: win19cis_rule_2_3_7_7
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.7.7
    - patch
    - logon
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_IA-5_1
    - NIST800-53R5_IA-5_1
  block:
    - name: "2.3.7.7 | GPO | Ensure Interactive logon Prompt user to change password before expiration is set to between 5 and 14 days. | Apply GPO Setting."
      when:
        - win19cis_password_expiry_warning_days >= 5
        - win19cis_password_expiry_warning_days <= 14
        - "'Skipped' not in item.gpo_guid"
      community.windows.win_lineinfile:
        path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
        regexp: "^MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\PasswordExpiryWarning=4,.*$"
        line: "MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\PasswordExpiryWarning=4,{{ win19cis_password_expiry_warning_days }}"
        insertafter: "^\\[Registry Values\\]$"
      loop:
        - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
        - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
          gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
      loop_control:
        label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

    - name: "2.3.7.7 | AUDIT | Ensure Interactive logon Prompt user to change password before expiration is set to between 5 and 14 days. | Warning Check For Variable Standards."
      when:
        - win19cis_password_expiry_warning_days < 5 or
          win19cis_password_expiry_warning_days > 14
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid number of days set for win19cis_password_expiry_warning_days please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "2.3.7.7 | AUDIT | Ensure Interactive logon Prompt user to change password before expiration is set to between 5 and 14 days. | Warn Count."
      vars:
        warn_control_id: '2.3.7.7'
      when:
        - win19cis_password_expiry_warning_days < 5 or
          win19cis_password_expiry_warning_days > 14
      ansible.builtin.import_tasks: warning_facts.yml

- name: "2.3.7.8 | GPO | Ensure Interactive logon Require Domain Controller Authentication to unlock workstation is set to Enabled MS only"
  when:
    - win19cis_rule_2_3_7_8
    - "'(Skipped)' not in item"
  tags:
    - level1-memberserver
    - rule_2.3.7.8
    - patch
    - logon
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.10
    - NIST800-171_3.1.11
    - NIST800-53_AC-2_5
    - NIST800-53_AC-11
    - NIST800-53_AC-11_1
    - NIST800-53_AC-12
    - NIST800-53R5_AC-2_5
    - NIST800-53R5_AC-11
    - NIST800-53R5_AC-11_1
    - NIST800-53R5_AC-12
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows Nt\Currentversion\Winlogon"
    $registryValueName = "ForceUnlockLogon"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_7_8_results.stdout'
  register: rule_2_3_7_8_results

- name: "2.3.7.9 | GPO | Ensure Interactive logon Smart card removal behavior is set to Lock Workstation or higher."
  when: win19cis_rule_2_3_7_9
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.7.9
    - patch
    - logon
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.10
    - NIST800-171_3.1.11
    - NIST800-53_AC-2_5
    - NIST800-53_AC-11
    - NIST800-53_AC-11_1
    - NIST800-53_AC-12
    - NIST800-53R5_AC-2_5
    - NIST800-53R5_AC-11
    - NIST800-53R5_AC-11_1
    - NIST800-53R5_AC-12
  block:
    - name: "2.3.7.9 | GPO | Ensure Interactive logon Smart card removal behavior is set to Lock Workstation or higher | Apply GPO Setting."
      when:
        - win19cis_sc_remove_option >= 1
        - win19cis_sc_remove_option <= 3
        - "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows Nt\Currentversion\Winlogon"
        $registryValueName = "ScRemoveOption"
        $type = "string"
        $desiredValue = {{ win19cis_sc_remove_option }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_2_3_7_9_results.stdout'
      register: rule_2_3_7_9_results

    - name: "2.3.7.9 | AUDIT | Ensure Interactive logon Smart card removal behavior is set to Lock Workstation or higher | Warning Check For Variable Standards."
      when:
        - win19cis_sc_remove_option == 0 or
          win19cis_sc_remove_option > 3
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid setting for win19cis_sc_remove_option. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "2.3.7.9 | AUDIT | Ensure Interactive logon Smart card removal behavior is set to Lock Workstation or higher | Warn Count."
      vars:
        warn_control_id: '2.3.7.9'
      when:
        - win19cis_sc_remove_option == 0 or
          win19cis_sc_remove_option > 3
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "2.3.8.1 | GPO | Ensure Microsoft network client Digitally sign communications always is set to Enabled"
  when:
    - win19cis_rule_2_3_8_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.8.1
    - patch
    - logon
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA-5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA-5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\LanmanWorkstation\Parameters"
    $registryValueName = "RequireSecuritySignature"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_8_1_results.stdout'
  register: rule_2_3_8_1_results

- name: "2.3.8.2 | GPO | Ensure Microsoft network client Digitally sign communications if server agrees is set to Enabled"
  when:
    - win19cis_rule_2_3_8_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.8.2
    - patch
    - logon
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA-5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA-5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\LanmanWorkstation\Parameters"
    $registryValueName = "EnableSecuritySignature"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_8_2_results.stdout'
  register: rule_2_3_8_2_results

- name: "2.3.8.3 | GPO | Ensure Microsoft network client Send unencrypted password to third-party SMB servers is set to Disabled"
  when:
    - win19cis_rule_2_3_8_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.8.3
    - patch
    - encryption
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA-5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA-5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\LanmanWorkstation\Parameters"
    $registryValueName = "EnablePlainTextPassword"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_8_3_results.stdout'
  register: rule_2_3_8_3_results

- name: "2.3.9.1 | GPO | Ensure Microsoft network server Amount of idle time required before suspending session is set to 15 or fewer minutes"
  when: win19cis_rule_2_3_9_1
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.9.1
    - patch
    - account
    - gpo
    - NIST800-171_3.1.11
    - NIST800-53_AC-12
    - NIST800-53R5_AC-12
  block:
    - name: "2.3.9.1 | GPO | Ensure Microsoft network server Amount of idle time required before suspending session is set to 15 or fewer minutes | Apply GPO Setting"
      when:
        - win19cis_smb_auto_disconnect_time <= 15
        - "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\LanManServer\Parameters"
        $registryValueName = "AutoDisconnect"
        $type = "DWORD"
        $desiredValue = {{ win19cis_smb_auto_disconnect_time }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_2_3_9_1_results.stdout'
      register: rule_2_3_9_1_results

    - name: "2.3.9.1 | AUDIT | Ensure Microsoft network server Amount of idle time required before suspending session is set to 15 or fewer minutes | Warning Check For Variable Standards"
      when: win19cis_smb_auto_disconnect_time > 15
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid number of minutes set for win19cis_smb_auto_disconnect_time please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "2.3.9.1 | AUDIT | Ensure Microsoft network server Amount of idle time required before suspending session is set to 15 or fewer minutes | Warn Count"
      when: win19cis_smb_auto_disconnect_time > 15
      vars:
        warn_control_id: '2.3.9.1'
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "2.3.9.2 | GPO | Ensure Microsoft network server Digitally sign communications always is set to Enabled"
  when:
    - win19cis_rule_2_3_9_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.9.2
    - patch
    - account
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA-5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA-5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\LanManServer\Parameters"
    $registryValueName = "RequireSecuritySignature"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_9_2_results.stdout'
  register: rule_2_3_9_2_results

- name: "2.3.9.3 | GPO | Ensure Microsoft network server Digitally sign communications if client agrees is set to Enabled"
  when:
    - win19cis_rule_2_3_9_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2_3_9_3
    - patch
    - account
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA-5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA-5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\LanManServer\Parameters"
    $registryValueName = "EnableSecuritySignature"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_9_3_results.stdout'
  register: rule_2_3_9_3_results

- name: "2.3.9.4 | GPO | Ensure Microsoft network server Disconnect clients when logon hours expire is set to Enabled"
  when:
    - win19cis_rule_2_3_9_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.9.4
    - patch
    - account
    - gpo
    - NIST800-171_3.1.2
    - NIST800-53_AC-2_12
    - NIST800-53R5_AC-2_12
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\LanManServer\Parameters"
    $registryValueName = "EnableForcedLogoff"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_9_4_results.stdout'
  register: rule_2_3_9_4_results

- name: "2.3.9.5 | GPO | Ensure Microsoft network server Server SPN target name validation level is set to Accept if provided by client or higher. | MS Only"
  when: win19cis_rule_2_3_9_5
  tags:
    - level1-memberserver
    - rule_2.3.9.5
    - patch
    - account
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-171_3.13.1
    - NIST800-171_3.13.2
    - NIST800-53_CM-1
    - NIST800-53_CM-2
    - NIST800-53_AC-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53_SA-3
    - NIST800-53_SA-8
    - NIST800-53_SA-10
    - NIST800-53R5_CM-1
    - NIST800-53R5_CM-2
    - NIST800-53R5_AC-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
    - NIST800-53R5_SA-3
    - NIST800-53R5_SA-8
    - NIST800-53R5_SA-10
  block:
    - name: "2.3.9.5 | GPO | Ensure Microsoft network server Server SPN target name validation level is set to Accept if provided by client or higher. | Set GPO Value | MS Only"
      when:
        - win19cis_smb_server_name_hardening_level == 1 or
          win19cis_smb_server_name_hardening_level == 2
        - "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\LanManServer\Parameters"
        $registryValueName = "SMBServerNameHardeningLevel"
        $type = "DWORD"
        $desiredValue = {{ win19cis_smb_server_name_hardening_level }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_2_3_9_5_results.stdout'
      register: rule_2_3_9_5_results

    - name: "2.3.9.5 | AUDIT | Ensure Microsoft network server Server SPN target name validation level is set to Accept if provided by client or higher. | Warning Check For Variable"
      when:
        - win19cis_smb_server_name_hardening_level == 0 or
          win19cis_smb_server_name_hardening_level > 2
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid number variable set for win19cis_smb_server_name_hardening_level. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "2.3.9.5 | AUDIT | Warn Count | MS Only"
      when:
        - win19cis_smb_server_name_hardening_level == 0 or
          win19cis_smb_server_name_hardening_level > 2
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: '2.3.9.5'

- name: "2.3.10.1 | GPO | Ensure Network access Allow anonymous SIDName translation is set to Disabled"
  when:
    - win19cis_rule_2_3_10_1
    - "'Skipped' not in item.gpo_guid"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.10.1
    - patch
    - securitypolicy
    - gpo
    - NIST800-171_3.1.7
    - NIST800-171_3.5.3
    - NIST800-53_AC-6_10
    - NIST800-53_IA-2_2
    - NIST800-53R5_AC-6_10
    - NIST800-53R5_IA-2_2
  community.windows.win_lineinfile:
    path: "C:\\Windows\\SYSVOL\\sysvol\\{{ prelim_discovered_domain_name }}\\Policies\\{{ item.gpo_guid }}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf"
    regexp: "^LSAAnonymousNameLookup =.*$"
    line: "LSAAnonymousNameLookup = 0"
    insertafter: "^\\[System Access\\]$"
  loop:
    - gpo_guid: "{{ win19cis_l1_dc_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_dc_gpo_name }}"
    - gpo_guid: "{{ win19cis_l1_ms_gpo_guid | default('') ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      gpo_name: "{{ win19cis_l1_ms_gpo_name }}"
  loop_control:
    label: "{{ item.gpo_name }} - {{ item.gpo_guid }}"

- name: "2.3.10.2 | GPO | Ensure Network access Do not allow anonymous enumeration of SAM accounts is set to Enabled MS only"
  when:
    - win19cis_rule_2_3_10_2
    - "'(Skipped)' not in item"
  tags:
    - level1-memberserver
    - rule_2.3.10.2
    - patch
    - sam
    - gpo
    - NIST800-171_3.1.7
    - NIST800-53_AC-6_10
    - NIST800-53R5_AC-6_10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Lsa"
    $registryValueName = "RestrictAnonymousSAM"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_10_2_results.stdout'
  register: rule_2_3_10_2_results

- name: "2.3.10.3 | GPO | Ensure Network access Do not allow anonymous enumeration of SAM accounts and shares is set to Enabled MS only"
  when:
    - win19cis_rule_2_3_10_3
    - "'(Skipped)' not in item"
  tags:
    - level1-memberserver
    - rule_2.3_10_3
    - patch
    - sam
    - gpo
    - NIST800-171_3.1.7
    - NIST800-53_AC-6_10
    - NIST800-53R5_AC-6_10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Lsa"
    $registryValueName = "RestrictAnonymous"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_10_3_results.stdout'
  register: rule_2_3_10_3_results

- name: "2.3.10.4 | GPO | Ensure Network access Do not allow storage of passwords and credentials for network authentication is set to Enabled"
  when:
    - win19cis_rule_2_3_10_4
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_2_3_10_4
    - patch
    - accounts
    - gpo
    - NIST800-171_3.5.10
    - NIST800-53_IA-5_1_c
    - NIST800-53R5_IA-5_1_c
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Lsa"
    $registryValueName = "DisableDomainCreds"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_10_4_results.stdout'
  register: rule_2_3_10_4_results

- name: "2.3.10.5 | GPO | Ensure Network access Let Everyone permissions apply to anonymous users is set to Disabled"
  when:
    - win19cis_rule_2_3_10_5
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.10.5
    - patch
    - accounts
    - gpo
    - NIST800-171_3.1.7
    - NIST800-53_AC-6_10
    - NIST800-53R5_AC-6_10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Lsa"
    $registryValueName = "EveryoneIncludesAnonymous"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_10_5_results.stdout'
  register: rule_2_3_10_5_results

- name: "2.3.10.6 | GPO | Configure Network access Named Pipes that can be accessed anonymously DC only"
  when:
    - win19cis_rule_2_3_10_6
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - rule_2.3.10.6
    - patch
    - namedpipes
    - gpo
    - NIST800-171_3.5.3
    - NIST800-53_IA-2_2
    - NIST800-53R5_IA-2_2
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\LanManServer\Parameters"
    $registryValueName = "NullSessionPipes"
    $type = "multistring"
    $desiredValue = @(
        'LSARPC',
        'NETLOGON',
        'SAMR'
    )

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Ensure the current value is an array for comparison
    if ($currentValue -eq $null) {
        $currentValue = @()
    }

    # Trim both arrays for comparison
    $currentValueSorted = $currentValue | ForEach-Object { $_.Trim() } | Sort-Object
    $desiredValueSorted = $desiredValue | ForEach-Object { $_.Trim() } | Sort-Object

    # Compare the current value and desired value manually
    if ($currentValueSorted.Count -ne $desiredValueSorted.Count -or
        -not ($currentValueSorted -join ',' -eq $desiredValueSorted -join ',')) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_10_6_results.stdout'
  register: rule_2_3_10_6_results

- name: "2.3.10.7 | GPO | Configure Network access Named Pipes that can be accessed anonymously MS only"
  when:
    - win19cis_rule_2_3_10_7
    - "'(Skipped)' not in item"
  tags:
    - level1-memberserver
    - rule_2.3.10.7
    - patch
    - namedpipes
    - gpo
    - NIST800-171_3.5.3
    - NIST800-53_IA-2_2
    - NIST800-53R5_IA-2_2
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\LanManServer\Parameters"
    $registryValueName = "NullSessionPipes"
    $type = "multistring"
    $desiredValue = @()

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_10_7_results.stdout'
  register: rule_2_3_10_7_results

- name: "2.3.10.8 | GPO | Configure Network access Remotely accessible registry paths"
  when:
    - win19cis_rule_2_3_10_8
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.10.8
    - patch
    - gpo
    - NIST800-171_3.1.5
    - NIST800-53_AC-6_7_b
    - NIST800-53R5_AC-6_7_b
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Securepipeservers\Winreg\AllowedExactpaths"
    $registryValueName = "Machine"
    $type = "multistring"
    $desiredValue = @(
        "SYSTEM\CurrentControlSet\Control\ProductOptions",
        "SYSTEM\CurrentControlSet\Control\Server Applications",
        "SOFTWARE\Microsoft\Windows NT\CurrentVersion"
    )

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # If the current value is not null or empty, ensure it is an array for comparison
    if ($currentValue -eq $null) {
        $currentValue = @()
    }

    # Sort both the desired value and current value arrays for consistent comparison
    $currentValueSorted = $currentValue | Sort-Object
    $desiredValueSorted = $desiredValue | Sort-Object

    # Join the sorted arrays into strings for exact comparison
    $currentValueStr = [string]::Join(",", $currentValueSorted)
    $desiredValueStr = [string]::Join(",", $desiredValueSorted)

    # Check if the current value is equal to the desired value
    if ($currentValueStr -ne $desiredValueStr) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_10_8_results.stdout'
  register: rule_2_3_10_8_results

- name: "2.3.10.9 | GPO | Configure Network access Remotely accessible registry paths and sub-paths using PowerShell"
  when:
    - win19cis_rule_2_3_10_9
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.10.9
    - patch
    - gpo
    - NIST800-171_3.1.5
    - NIST800-53_AC-6_7_b
    - NIST800-53R5_AC-6_7_b
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Securepipeservers\Winreg\Allowedpaths"
    $registryValueName = "Machine"
    $type = "multistring"

    # Define the base desired values
    $desiredValue = @(
        "SYSTEM\CurrentControlSet\Control\Print\Printers",
        "SYSTEM\CurrentControlSet\Services\Eventlog",
        "SOFTWARE\Microsoft\OLAP Server",
        "SOFTWARE\Microsoft\Windows NT\CurrentVersion\Print",
        "SOFTWARE\Microsoft\Windows NT\CurrentVersion\Windows",
        "SYSTEM\CurrentControlSet\Control\ContentIndex",
        "SYSTEM\CurrentControlSet\Control\Terminal Server",
        "SYSTEM\CurrentControlSet\Control\Terminal Server\UserConfig",
        "SYSTEM\CurrentControlSet\Control\Terminal Server\DefaultUserConfiguration",
        "SOFTWARE\Microsoft\Windows NT\CurrentVersion\Perflib",
        "SYSTEM\CurrentControlSet\Services\SysmonLog"
    )

    # Check if AD Certificate Services feature is installed
    $adcsFeatureInstalled = (Get-WindowsFeature -Name AD-Certificate).Installed
    if ($adcsFeatureInstalled) {
        $desiredValue += "SYSTEM\CurrentControlSet\Services\CertSvc"
    }

    # Check if WINS feature is installed
    $winsFeatureInstalled = (Get-WindowsFeature -Name WINS).Installed
    if ($winsFeatureInstalled) {
        $desiredValue += "SYSTEM\CurrentControlSet\Services\WINS"
    }

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # If the current value is not null or empty, ensure it is an array for comparison
    if ($currentValue -eq $null) {
        $currentValue = @()
    }

    # Sort both the desired value and current value arrays for consistent comparison
    $currentValueSorted = $currentValue | Sort-Object
    $desiredValueSorted = $desiredValue | Sort-Object

    # Join the sorted arrays into strings for exact comparison
    $currentValueStr = [string]::Join(",", $currentValueSorted)
    $desiredValueStr = [string]::Join(",", $desiredValueSorted)

    # Check if the current value is equal to the desired value
    if ($currentValueStr -ne $desiredValueStr) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_10_9_results.stdout'
  register: rule_2_3_10_9_results

- name: "2.3.10.10 | GPO | Ensure Network access Restrict anonymous access to Named Pipes and Shares is set to Enabled"
  when:
    - win19cis_rule_2_3_10_10
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.10.10
    - patch
    - namedpipes
    - gpo
    - NIST800-171_3.1.7
    - NIST800-53_AC-6_10
    - NIST800-53R5_AC-6_10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\LanManServer\Parameters"
    $registryValueName = "RestrictNullSessAccess"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_10_10_results.stdout'
  register: rule_2_3_10_10_results

- name: "2.3.10.11 | GPO | Ensure Network access Restrict clients allowed to make remote calls to SAM is set to Administrators Remote Access Allow MS only"
  when:
    - win19cis_rule_2_3_10_11
    - "'(Skipped)' not in item"
  tags:
    - level1-memberserver
    - rule_2.3.10.11
    - patch
    - sam
    - gpo
    - NIST800-171_3.1.5
    - NIST800-53_AC-6_3
    - NIST800-53R5_AC-6_3
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Control\Lsa"
    $registryValueName = "RestrictRemoteSAM"
    $type = "string"
    $desiredValue = "O:BAG:BAD:(A;;RC;;;BA)"

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_10_11_results.stdout'
  register: rule_2_3_10_11_results

- name: "2.3.10.12 | GPO | Ensure Network access Shares that can be accessed anonymously is set to None"
  when:
    - win19cis_rule_2_3_10_12
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.10.12
    - patch
    - shares
    - gpo
    - NIST800-171_3.1.1
    - NIST800-53_AC-3
    - NIST800-53R5_AC-3
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\LanManServer\Parameters"
    $registryValueName = "NullSessionShares"
    $type = "multistring"
    $desiredValue = @()

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_10_12_results.stdout'
  register: rule_2_3_10_12_results

- name: "2.3.10.13 | GPO | Ensure Network access Sharing and security model for local accounts is set to Classic - local users authenticate as themselves"
  when:
    - win19cis_rule_2_3_10_13
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.10.13
    - patch
    - guest
    - gpo
    - NIST800-171_3.4.2
    - NIST800-53_CM-6b.
    - NIST800-53R5_CM-6b.
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Lsa"
    $registryValueName = "ForceGuest"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_10_13_results.stdout'
  register: rule_2_3_10_13_results

- name: "2.3.11.1 | GPO | Ensure Network security Allow Local System to use computer identity for NTLM is set to Enabled"
  when:
    - win19cis_rule_2_3_11_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.11.1
    - patch
    - ntlm
    - gpo
    - NIST800-53_IA-3
    - NIST800-53R5_IA-3
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Lsa"
    $registryValueName = "UseMachineId"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_11_1_results.stdout'
  register: rule_2_3_11_1_results

- name: "2.3.11.2 | GPO | Ensure Network security Allow LocalSystem NULL session fallback is set to Disabled"
  when:
    - win19cis_rule_2_3_11_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.11.2
    - patch
    - localsystem
    - gpo
    - NIST800-171_3.1.7
    - NIST800-53_AC-6_10
    - NIST800-53R5_AC-6_10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Control\Lsa\Msv1_0"
    $registryValueName = "AllowNullSessionFallback"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_11_2_results.stdout'
  register: rule_2_3_11_2_results

- name: "2.3.11.3 | GPO | Ensure Network Security Allow PKU2U authentication requests to this computer to use online identities is set to Disabled"
  when:
    - win19cis_rule_2_3_11_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.11.3
    - patch
    - authentication
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-171_3.13.1
    - NIST800-171_3.13.2
    - NIST800-53_CM-1
    - NIST800-53_CM-2
    - NIST800-53_AC-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53_SA-3
    - NIST800-53_SA-8
    - NIST800-53_SA-10
    - NIST800-53R5_CM-1
    - NIST800-53R5_CM-2
    - NIST800-53R5_AC-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
    - NIST800-53R5_SA-3
    - NIST800-53R5_SA-8
    - NIST800-53R5_SA-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Lsa\Pku2U"
    $registryValueName = "AllowOnlineID"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_11_3_results.stdout'
  register: rule_2_3_11_3_results

- name: "2.3.11.4 | GPO | Ensure Network security Configure encryption types allowed for Kerberos is set to AES128 HMAC SHA1 AES256 HMAC SHA1 Future encryption types"
  when:
    - win19cis_rule_2_3_11_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.11.4
    - patch
    - encryption
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA-5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA-5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\SYSTEM\Kerberos\Parameters"
    $registryValueName = "SupportedEncryptionTypes"
    $type = "DWORD"
    $desiredValue = 2147483640

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_11_4_results.stdout'
  register: rule_2_3_11_4_results

- name: "2.3.11.5 | GPO | Ensure Network security Do not store LAN Manager hash value on next password change is set to Enabled"
  when:
    - win19cis_rule_2_3_11_5
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.11.5
    - patch
    - network
    - gpo
    - NIST800-171_3.5.2
    - NIST800-171_3.13.16
    - NIST800-53_IA-5_1
    - NIST800-53_SC-28
    - NIST800-53_SC-28_1
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-28
    - NIST800-53R5_SC-28_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Lsa"
    $registryValueName = "NoLMHash"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_11_5_results.stdout'
  register: rule_2_3_11_5_results

- name: "2.3.11.6 | GPO | Ensure Network security Force logoff when logon hours expire is set to Enabled"
  when:
    - win19cis_rule_2_3_11_6
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.11.6
    - patch
    - network
    - gpo
    - NIST800-171_3.1.2
    - NIST800-53_AC-2_12
    - NIST800-53R5_AC-2_12
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters"
    $registryValueName = "EnableForcedLogOff"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_11_6_results.stdout'
  register: rule_2_3_11_6_results

- name: "2.3.11.7 | GPO | Ensure Network security LAN Manager authentication level is set to Send NTLMv2 response only. Refuse LM NTLM"
  when:
    - win19cis_rule_2_3_11_7
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.11.7
    - patch
    - network
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_AC-IA-5
    - NIST800-53_AC-IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_AC-IA-5
    - NIST800-53R5_AC-IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Lsa"
    $registryValueName = "LMCompatibilityLevel"
    $type = "DWORD"
    $desiredValue = 5

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_11_7_results.stdout'
  register: rule_2_3_11_7_results

- name: "2.3.11.8 | GPO | Ensure Network security LDAP client signing requirements is set to Negotiate signing or higher."
  when: win19cis_rule_2_3_11_8
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.11.8
    - patch
    - ldap
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_AC-IA-5
    - NIST800-53_AC-IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_AC-IA-5
    - NIST800-53R5_AC-IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  block:
    - name: "2.3.11.8 | GPO | Ensure Network security LDAP client signing requirements is set to Negotiate signing or higher. | Set GPO Value."
      when:
        - "'(Skipped)' not in item"
        - win19cis_ldap_client_integrity == 1 or
          win19cis_ldap_client_integrity == 2
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\Ldap"
        $registryValueName = "LDAPClientIntegrity"
        $type = "DWORD"
        $desiredValue = {{ win19cis_ldap_client_integrity }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_2_3_11_8_results.stdout'
      register: rule_2_3_11_8_results

    - name: "2.3.11.8 | AUDIT | Ensure Network security LDAP client signing requirements is set to Negotiate signing or higher. | Warning Check For Variable."
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid variable set for win19cis_ldap_client_integrity. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."
      when:
        - win19cis_ldap_client_integrity == 0 or
          win19cis_ldap_client_integrity > 2

    - name: "2.3.11.8 | AUDIT | Ensure Network security LDAP client signing requirements is set to Negotiate signing or higher. | Warn Count."
      ansible.builtin.import_tasks:
        file: warning_facts.yml
      vars:
        warn_control_id: '2.3.11.8'
      when:
        - win19cis_ldap_client_integrity == 0 or
          win19cis_ldap_client_integrity > 2

- name: "2.3.11.9 | GPO | Ensure Network security Minimum session security for NTLM SSP based including secure RPC clients is set to Require NTLMv2 session security Require 128-bit encryption"
  when:
    - win19cis_rule_2_3_11_9
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.11.9
    - patch
    - ntlm
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_AC-IA-5
    - NIST800-53_AC-IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_AC-IA-5
    - NIST800-53R5_AC-IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Lsa\Msv1_0"
    $registryValueName = "NTLMMinClientSec"
    $type = "DWORD"
    $desiredValue = 537395200

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_11_9_results.stdout'
  register: rule_2_3_11_9_results

- name: "2.3.11.10 | GPO | Ensure Network security Minimum session security for NTLM SSP based including secure RPC servers is set to Require NTLMv2 session security Require 128-bit encryption"
  when:
    - win19cis_rule_2_3_11_10
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.11.10
    - patch
    - ntlm
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_AC-IA-5
    - NIST800-53_AC-IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_AC-IA-5
    - NIST800-53R5_AC-IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Lsa\Msv1_0"
    $registryValueName = "NTLMMinServerSec"
    $type = "DWORD"
    $desiredValue = 537395200

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_11_10_results.stdout'
  register: rule_2_3_11_10_results

- name: "2.3.11.11 | GPO | Ensure Network security: Restrict NTLM: Audit Incoming NTLM Traffic is set to Enable auditing for all accounts"
  when:
    - win19cis_rule_2_3_11_11
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.11.11
    - patch
    - ntlm
    - gpo
    - NIST800-171_3.3.1
    - NIST800-171_3.3.2
    - NIST800-171_3.3.6
    - NIST800-53_AU-3
    - NIST800-53_AU-3_1
    - NIST800-53_AU-7
    - NIST800-53_AU-12
    - NIST800-53R5_AU-3
    - NIST800-53R5_AU-3_1
    - NIST800-53R5_AU-7
    - NIST800-53R5_AU-12
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Lsa\MSV1_0"
    $registryValueName = "AuditReceivingNTLMTraffic"
    $type = "DWORD"
    $desiredValue = 2

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_11_11_results.stdout'
  register: rule_2_3_11_11_results

- name: "2.3.11.12 | GPO | Ensure Network security: Restrict NTLM: Audit NTLM authentication in this domain is set to Enable all DC Only"
  when:
    - win19cis_rule_2_3_11_12
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - rule_2.3.11.12
    - patch
    - ntlm
    - gpo
    - NIST800-171_3.3.1
    - NIST800-171_3.3.2
    - NIST800-171_3.3.6
    - NIST800-53_AU-3
    - NIST800-53_AU-3_1
    - NIST800-53_AU-7
    - NIST800-53_AU-12
    - NIST800-53R5_AU-3
    - NIST800-53R5_AU-3_1
    - NIST800-53R5_AU-7
    - NIST800-53R5_AU-12
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters"
    $registryValueName = "AuditNTLMInDomain"
    $type = "DWORD"
    $desiredValue = 7

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_11_12_results.stdout'
  register: rule_2_3_11_12_results

- name: "2.3.11.13 | GPO | Ensure Network security: Restrict NTLM: Outgoing NTLM traffic to remote servers is set to Audit all or higher"
  when:
    - win19cis_rule_2_3_11_13
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.11.13
    - patch
    - ntlm
    - gpo
    - NIST800-171_3.3.1
    - NIST800-171_3.3.2
    - NIST800-171_3.3.6
    - NIST800-53_AU-3
    - NIST800-53_AU-3_1
    - NIST800-53_AU-7
    - NIST800-53_AU-12
    - NIST800-53R5_AU-3
    - NIST800-53R5_AU-3_1
    - NIST800-53R5_AU-7
    - NIST800-53R5_AU-12
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Lsa\MSV1_0"
    $registryValueName = "RestrictSendingNTLMTraffic"
    $type = "DWORD"
    $desiredValue = 2

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_11_13_results.stdout'
  register: rule_2_3_11_13_results

- name: "2.3.13.1 | GPO | Ensure Shutdown Allow system to be shut down without having to log on is set to Disabled"
  when:
    - win19cis_rule_2_3_13_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.13.1
    - patch
    - system
    - shutdown
    - gpo
    - NIST800-171_3.1.7
    - NIST800-53_AC-6_10
    - NIST800-53R5_AC-6_10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System"
    $registryValueName = "ShutdownWithoutLogon"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_13_1_results.stdout'
  register: rule_2_3_13_1_results

- name: "2.3.15.1 | GPO | Ensure System objects Require case insensitivity for non-Windows subsystems is set to Enabled"
  when:
    - win19cis_rule_2_3_15_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.15.1
    - patch
    - gpo
    - NIST800-171_3.4.2
    - NIST800-53_CM-6b.
    - NIST800-53R5_CM-6b.
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Session Manager\Kernel"
    $registryValueName = "ObCaseInsensitive"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_15_1_results.stdout'
  register: rule_2_3_15_1_results

- name: "2.3.15.2 | GPO | Ensure System objects Strengthen default permissions of internal system objects e.g. Symbolic Links is set to Enabled"
  when:
    - win19cis_rule_2_3_15_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.15.2
    - patch
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-171_3.13.1
    - NIST800-171_3.13.2
    - NIST800-53_CM-1
    - NIST800-53_CM-2
    - NIST800-53_AC-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53_SA-3
    - NIST800-53_SA-8
    - NIST800-53_SA-10
    - NIST800-53R5_CM-1
    - NIST800-53R5_CM-2
    - NIST800-53R5_AC-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
    - NIST800-53R5_SA-3
    - NIST800-53R5_SA-8
    - NIST800-53R5_SA-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Session Manager"
    $registryValueName = "ProtectionMode"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_15_2_results.stdout'
  register: rule_2_3_15_2_results

- name: "2.3.17.1 | GPO | Ensure User Account Control Admin Approval Mode for the Built-in Administrator account is set to Enabled"
  when:
    - win19cis_rule_2_3_17_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.17.1
    - patch
    - uac
    - gpo
    - NIST800-171_3.1.1
    - NIST800-53_AC-2_9
    - NIST800-53R5_AC-2_9
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System"
    $registryValueName = "FilterAdministratorToken"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_17_1_results.stdout'
  register: rule_2_3_17_1_results

- name: "2.3.17.2 | GPO | Ensure 'User Account Control: Behavior of the elevation prompt for administrators in Admin Approval Mode' is set to 'Prompt for consent on the secure desktop' or higher."
  when:
    - win19cis_rule_2_3_17_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.17.2
    - patch
    - uac
    - gpo
    - NIST800-171_3.1.5
    - NIST800-53_AC-6_1
    - NIST800-53R5_AC-6_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System"
    $registryValueName = "ConsentPromptBehaviorAdmin"
    $type = "DWORD"
    $desiredValue = {{ win19cis_consent_prompt_behavior_admin }}

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_17_2_results.stdout'
  register: rule_2_3_17_2_results

- name: "2.3.17.3 | GPO | Ensure User Account Control Behavior of the elevation prompt for standard users is set to Automatically deny elevation requests"
  when:
    - win19cis_rule_2_3_17_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.17.3
    - patch
    - uac
    - gpo
    - NIST800-171_3.1.7
    - NIST800-53_AC-6_10
    - NIST800-53R5_AC-6_10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System"
    $registryValueName = "ConsentPromptBehaviorUser"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_17_3_results.stdout'
  register: rule_2_3_17_3_results

- name: "2.3.17.4 | GPO | Ensure User Account Control Detect application installations and prompt for elevation is set to Enabled"
  when:
    - win19cis_rule_2_3_17_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.17.4
    - patch
    - uac
    - gpo
    - NIST800-171_3.1.5
    - NIST800-53_AC-6_8
    - NIST800-53R5_AC-6_8
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System"
    $registryValueName = "EnableInstallerDetection"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_17_4_results.stdout'
  register: rule_2_3_17_4_results

- name: "2.3.17.5 | GPO | Ensure User Account Control Only elevate UIAccess applications that are installed in secure locations is set to Enabled"
  when:
    - win19cis_rule_2_3_17_5
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.17.5
    - patch
    - uac
    - gpo
    - NIST800-171_3.1.5
    - NIST800-53_AC-6_8
    - NIST800-53R5_AC-6_8
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System"
    $registryValueName = "EnableSecureUIAPaths"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_17_5_results.stdout'
  register: rule_2_3_17_5_results

- name: "2.3.17.6 | GPO | Ensure User Account Control Run all administrators in Admin Approval Mode is set to Enabled"
  when:
    - win19cis_rule_2_3_17_6
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.17.6
    - patch
    - uac
    - gpo
    - NIST800-171_3.1.5
    - NIST800-53_AC-6_1
    - NIST800-53R5_AC-6_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System"
    $registryValueName = "EnableLUA"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_17_6_results.stdout'
  register: rule_2_3_17_6_results

- name: "2.3.17.7 | GPO | Ensure User Account Control Switch to the secure desktop when prompting for elevation is set to Enabled"
  when:
    - win19cis_rule_2_3_17_7
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.17.7
    - patch
    - uac
    - gpo
    - NIST800-171_3.1.5
    - NIST800-53_AC-6_1
    - NIST800-53R5_AC-6_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System"
    $registryValueName = "PromptOnSecureDesktop"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_17_7_results.stdout'
  register: rule_2_3_17_7_results

- name: "2.3.17.8 | GPO | Ensure User Account Control Virtualize file and registry write failures to per-user locations is set to Enabled"
  when:
    - win19cis_rule_2_3_17_8
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_2.3.17.8
    - patch
    - uac
    - gpo
    - NIST800-53_SC-29_1
    - NIST800-53R5_SC-29_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
    $registryValueName = "EnableVirtualization"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_2_3_17_8_results.stdout'
  register: rule_2_3_17_8_results
