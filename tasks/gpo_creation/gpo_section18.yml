---

- name: "18.1.1.1 | GPO | Ensure Prevent enabling lock screen camera is set to Enabled"
  when:
    - win19cis_rule_18_1_1_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.1.1.1
    - patch
    - camera
    - gpo
    - NIST800-171_3.4.2
    - NIST800-53_CM-6b.
    - NIST800-53R5_CM-6b.
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Personalization"
    $registryValueName = "NoLockScreenCamera"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_1_1_1_results.stdout'
  register: rule_18_1_1_1_results

- name: "18.1.1.2 | GPO | Ensure Prevent enabling lock screen slide show is set to Enabled"
  when:
    - win19cis_rule_18_1_1_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.1.1.2
    - patch
    - lockscreen
    - gpo
    - NIST800-171_3.4.2
    - NIST800-53_CM-6b.
    - NIST800-53R5_CM-6b.
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Personalization"
    $registryValueName = "NoLockScreenSlideshow"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_1_1_2_results.stdout'
  register: rule_18_1_1_2_results

- name: "18.1.2.2 | GPO | Ensure Allow users to enable online speech recognition services is set to Disabled"
  when:
    - win19cis_rule_18_1_2_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.1.2.2
    - patch
    - onlinespeech
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-171_3.13.1
    - NIST800-171_3.13.2
    - NIST800-53_CM-1
    - NIST800-53_CM-2
    - NIST800-53_AC-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53_SA-3
    - NIST800-53_SA-8
    - NIST800-53_SA-10
    - NIST800-53R5_CM-1
    - NIST800-53R5_CM-2
    - NIST800-53R5_AC-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
    - NIST800-53R5_SA-3
    - NIST800-53R5_SA-8
    - NIST800-53R5_SA-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\InputPersonalization"
    $registryValueName = "AllowInputPersonalization"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_1_2_2_results.stdout'
  register: rule_18_1_2_2_results

- name: "18.1.3 | GPO | Ensure Allow Online Tips is set to Disabled"
  when:
    - win19cis_rule_18_1_3
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.1.3
    - patch
    - onlinetips
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
    $registryValueName = "AllowOnlineTips"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_1_3_results.stdout'
  register: rule_18_1_3_results

- name: "18.4.1 | GPO | Ensure Apply UAC restrictions to local accounts on network logons is set to Enabled MS only"
  when:
    - win19cis_rule_18_4_1
    - "'(Skipped)' not in item"
  tags:
    - level1-memberserver
    - rule_18.4.1
    - patch
    - uac
    - gpo
    - NIST800-171_3.1.1
    - NIST800-53_AC-2_9
    - NIST800-53R5_AC-2_9
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System"
    $registryValueName = "LocalAccountTokenFilterPolicy"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_4_1_results.stdout'
  register: rule_18_4_1_results

- name: "18.4.2 | GPO | Ensure Configure RPC packet level privacy setting for incoming connections is set to Enabled"
  when:
    - win19cis_rule_18_4_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.4.2
    - patch
    - rpc
    - gpo
    - NIST800-171_3.4.2
    - NIST800-53_CM-6b.
    - NIST800-53R5_CM-6b.
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Control\Print"
    $registryValueName = "RpcAuthnLevelPrivacyEnabled"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_4_2_results.stdout'
  register: rule_18_4_2_results

- name: "18.4.3 | GPO | Ensure Configure SMB v1 client driver is set to Enabled Disable driver recommended"
  when:
    - win19cis_rule_18_4_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.4.3
    - patch
    - smb
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Services\mrxsmb10"
    $registryValueName = "Start"
    $type = "DWORD"
    $desiredValue = 4

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_4_3_results.stdout'
  register: rule_18_4_3_results

- name: "18.4.4 | GPO | Ensure Configure SMB v1 server is set to Disabled"
  when:
    - win19cis_rule_18_4_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.4.4
    - patch
    - smb
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters"
    $registryValueName = "SMB1"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_4_4_results.stdout'
  register: rule_18_4_4_results

- name: "18.4.5 | GPO | Ensure Enable Certificate Padding is set to Enabled"
  when:
    - win19cis_rule_18_4_5
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.4.5
    - patch
    - wintrust
    - gpo
    - NIST800-171_3.4.8
    - NIST800-53_SC-8
    - NIST800-53R5_SC-8
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Cryptography\Wintrust\Config"
    $registryValueName = "EnableCertPaddingCheck"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_4_5_results.stdout'
  register: rule_18_4_5_results

- name: "18.4.6 | GPO | Ensure Enable Structured Exception Handling Overwrite Protection SEHOP is set to Enabled"
  when:
    - win19cis_rule_18_4_6
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.4.6
    - patch
    - sehop
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\kernel"
    $registryValueName = "DisableExceptionChainValidation"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_4_6_results.stdout'
  register: rule_18_4_6_results

- name: "18.4.7 | GPO | Ensure LSA Protection is set to Enabled"
  when:
    - win19cis_rule_18_4_7
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.4.7
    - patch
    - lsa
    - gpo
    - NIST800-53_SI-7
    - NIST800-53R5_SI-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Control\Lsa"
    $registryValueName = "RunAsPPL"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_4_7_results.stdout'
  register: rule_18_4_7_results

- name: "18.4.8 | GPO | Ensure 'NetBT NodeType configuration' is set to 'Enabled: P-node recommended'"
  when:
    - win19cis_rule_18_4_8
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.4.8
    - patch
    - netbt
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-171_3.13.1
    - NIST800-171_3.13.2
    - NIST800-53_CM-1
    - NIST800-53_CM-2
    - NIST800-53_AC-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53_SA-3
    - NIST800-53_SA-8
    - NIST800-53_SA-10
    - NIST800-53R5_CM-1
    - NIST800-53R5_CM-2
    - NIST800-53R5_AC-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
    - NIST800-53R5_SA-3
    - NIST800-53R5_SA-8
    - NIST800-53R5_SA-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Services\NetBT\Parameters"
    $registryValueName = "NodeType"
    $type = "DWORD"
    $desiredValue = {{ win19cis_netbt_nodetype }}

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_4_8_results.stdout'
  register: rule_18_4_8_results

- name: "18.4.9 | GPO | Ensure WDigest Authentication is set to Disabled"
  when:
    - win19cis_rule_18_4_9
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.4.9
    - patch
    - wdigest
    - gpo
    - NIST800-171_3.5.2
    - NIST800-171_3.13.6
    - NIST800-53_IA-5_1
    - NIST800-53_SC-28
    - NIST800-53_SC-28_1
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-28
    - NIST800-53R5_SC-28_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\Wdigest"
    $registryValueName = "UseLogonCredential"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_4_9_results.stdout'
  register: rule_18_4_9_results

- name: "18.5.1 | GPO | Ensure MSS: (AutoAdminLogon) Enable Automatic Logon is set to Disabled"
  when:
    - win19cis_rule_18_5_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.5.1
    - patch
    - mss
    - logon
    - gpo
    - NIST800-171_3.5.2
    - NIST800-171_3.13.6
    - NIST800-53_IA-5_1
    - NIST800-53_SC-28
    - NIST800-53_SC-28_1
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-28
    - NIST800-53R5_SC-28_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"
    $registryValueName = "AutoAdminLogon"
    $type = "string"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_5_1_results.stdout'
  register: rule_18_5_1_results

- name: "18.5.2 | GPO | Ensure MSS: (DisableIPSourceRouting IPv6) IP source routing protection level is set to Enabled: Highest protection, source routing is completely disabled"
  when:
    - win19cis_rule_18_5_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.5.2
    - patch
    - mss
    - iprouting
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_CM-6
    - NIST800-53R5_CM-6
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Services\Tcpip6\Parameters"
    $registryValueName = "DisableIPSourceRouting"
    $type = "DWORD"
    $desiredValue = 2

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_5_2_results.stdout'
  register: rule_18_5_2_results

- name: "18.5.3 | GPO | Ensure MSS: (DisableIPSourceRouting) IP source routing protection level is set to Enabled: Highest protection, source routing is completely disabled"
  when:
    - win19cis_rule_18_5_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.5.3
    - patch
    - mss
    - iprouting
    - gpo
    - NIST800-171_3.13.1
    - NIST800-53_SC-7_12
    - NIST800-53R5_SC-7_12
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters"
    $registryValueName = "DisableIPSourceRouting"
    $type = "DWORD"
    $desiredValue = 2

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_5_3_results.stdout'
  register: rule_18_5_3_results

- name: "18.5.4 | GPO | Ensure MSS: (EnableICMPRedirect) Allow ICMP redirects to override OSPF generated routes is set to Disabled"
  when:
    - win19cis_rule_18_5_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.5.4
    - patch
    - mss
    - icmps
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-171_3.13.1
    - NIST800-171_3.13.2
    - NIST800-53_CM-1
    - NIST800-53_CM-2
    - NIST800-53_AC-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53_SA-3
    - NIST800-53_SA-8
    - NIST800-53_SA-10
    - NIST800-53R5_CM-1
    - NIST800-53R5_CM-2
    - NIST800-53R5_AC-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
    - NIST800-53R5_SA-3
    - NIST800-53R5_SA-8
    - NIST800-53R5_SA-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters"
    $registryValueName = "EnableICMPRedirect"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_5_4_results.stdout'
  register: rule_18_5_4_results

- name: "18.5.5 | GPO | Ensure MSS: (KeepAliveTime) How often keep-alive packets are sent in milliseconds is set to Enabled: 300,000 or 5 minutes"
  when:
    - win19cis_rule_18_5_5
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.5.5
    - patch
    - mss
    - keepalive
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-171_3.13.1
    - NIST800-171_3.13.2
    - NIST800-53_CM-1
    - NIST800-53_CM-2
    - NIST800-53_AC-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53_SA-3
    - NIST800-53_SA-8
    - NIST800-53_SA-10
    - NIST800-53R5_CM-1
    - NIST800-53R5_CM-2
    - NIST800-53R5_AC-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
    - NIST800-53R5_SA-3
    - NIST800-53R5_SA-8
    - NIST800-53R5_SA-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters"
    $registryValueName = "KeepAliveTime"
    $type = "DWORD"
    $desiredValue = 300000

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_5_5_results.stdout'
  register: rule_18_5_5_results

- name: "18.5.6 | GPO | Ensure MSS: (NoNameReleaseOnDemand) Allow the computer to ignore NetBIOS name release requests except from WINS servers is set to Enabled"
  when:
    - win19cis_rule_18_5_6
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.5.6
    - patch
    - mss
    - noname
    - gpo
    - NIST800-171_3.4.2
    - NIST800-53_CM-6
    - NIST800-53R5_CM-6
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\Netbt\Parameters"
    $registryValueName = "NoNameReleaseOnDemand"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_5_6_results.stdout'
  register: rule_18_5_6_results

- name: "18.5.7 | GPO | Ensure MSS: (PerformRouterDiscovery) Allow IRDP to detect and configure Default Gateway addresses is set to Disabled"
  when:
    - win19cis_rule_18_5_7
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.5.7
    - patch
    - mss
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\Tcpip\Parameters"
    $registryValueName = "PerformRouterDiscovery"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_5_7_results.stdout'
  register: rule_18_5_7_results

- name: "18.5.8 | GPO | Ensure MSS: (SafeDllSearchMode) Enable Safe DLL search mode is set to Enabled"
  when:
    - win19cis_rule_18_5_8
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.5.8
    - patch
    - mss
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Control\Session Manager"
    $registryValueName = "SafeDllSearchMode"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_5_8_results.stdout'
  register: rule_18_5_8_results

- name: "18.5.9 | GPO | Ensure MSS: (ScreenSaverGracePeriod) The time in seconds before the screen saver grace period expires is set to Enabled: 5 or fewer seconds"
  when: win19cis_rule_18_5_9
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.5.9
    - patch
    - mss
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.10
    - NIST800-171_3.1.11
    - NIST800-53_AC-2_5
    - NIST800-53_AC-11
    - NIST800-53_AC-11_1
    - NIST800-53_AC-12
    - NIST800-53R5_AC-2_5
    - NIST800-53R5_AC-11
    - NIST800-53R5_AC-11_1
    - NIST800-53R5_AC-12
  block:
    - name: "18.5.9 | GPO | Ensure MSS: (ScreenSaverGracePeriod) The time in seconds before the screen saver grace period expires is set to Enabled: 5 or fewer seconds | Set Variable."
      when:
        - "'(Skipped)' not in item"
        - win19cis_screen_saver_grace_period <= 5
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows Nt\Currentversion\Winlogon"
        $registryValueName = "ScreenSaverGracePeriod"
        $type = "string"
        $desiredValue = {{ win19cis_screen_saver_grace_period }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_5_9_results.stdout'
      register: rule_18_5_9_results

    - name: "18.5.9 | AUDIT | Ensure MSS: (ScreenSaverGracePeriod) The time in seconds before the screen saver grace period expires is set to 'Enabled: 5 or fewer seconds | Warning Check For Variable Standards."
      when: win19cis_screen_saver_grace_period > 5
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid time set for win19cis_screen_saver_grace_period please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "18.5.9 | GPO | Ensure MSS: (ScreenSaverGracePeriod) The time in seconds before the screen saver grace period expires is set to Enabled: 5 or fewer seconds | Set Warn Count."
      vars:
        warn_control_id: '18.5.9'
      when: win19cis_screen_saver_grace_period > 5
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.5.10 | GPO | Ensure MSS: (TcpMaxDataRetransmissions IPv6) How many times unacknowledged data is retransmitted is set to Enabled: 3"
  when:
    - win19cis_rule_18_5_10
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.5.10
    - patch
    - mss
    - gpo
    - NIST800-171_3.1.16
    - NIST800-171_3.1.17
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_AC-18
    - NIST800-53_AC-18_1
    - NIST800-53_AC-18_3
    - NIST800-53_CM-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53R5_AC-18
    - NIST800-53R5_AC-18_1
    - NIST800-53R5_AC-18_3
    - NIST800-53R5_CM-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\CurrentControlSet\Services\Tcpip6\Parameters"
    $registryValueName = "TcpMaxDataRetransmissions"
    $type = "DWORD"
    $desiredValue = 3

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_5_10_results.stdout'
  register: rule_18_5_10_results

- name: "18.5.11 | GPO | Ensure MSS: (TcpMaxDataRetransmissions) How many times unacknowledged data is retransmitted is set to Enabled: 3"
  when:
    - win19cis_rule_18_5_11
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.5.11
    - patch
    - mss
    - gpo
    - NIST800-171_3.1.16
    - NIST800-171_3.1.17
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_AC-18
    - NIST800-53_AC-18_1
    - NIST800-53_AC-18_3
    - NIST800-53_CM-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53R5_AC-18
    - NIST800-53R5_AC-18_1
    - NIST800-53R5_AC-18_3
    - NIST800-53R5_CM-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\Tcpip\Parameters"
    $registryValueName = "TcpMaxDataRetransmissions"
    $type = "DWORD"
    $desiredValue = 3

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_5_11_results.stdout'
  register: rule_18_5_11_results

- name: "18.5.12 | GPO | Ensure MSS: (WarningLevel) Percentage threshold for the security event log at which the system will generate a warning is set to Enabled: 90 or less"
  when: win19cis_rule_18_5_12
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.5.12
    - patch
    - mss
    - gpo
    - NIST800-53_AU-4
    - NIST800-53R5_AU-4
  block:
    - name: "18.5.12 | GPO | Ensure MSS: (WarningLevel) Percentage threshold for the security event log at which the system will generate a warning is set to Enabled: 90 or less | Set Variable."
      when:
        - "'(Skipped)' not in item"
        - win19cis_log_threshold_audit_event <= 90
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SYSTEM\Currentcontrolset\Services\Eventlog\Security"
        $registryValueName = "WarningLevel"
        $type = "DWORD"
        $desiredValue = {{ win19cis_log_threshold_audit_event }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_5_12_results.stdout'
      register: rule_18_5_12_results

    - name: "18.5.12 | AUDIT | Ensure MSS: (WarningLevel) Percentage threshold for the security event log at which the system will generate a warning is set to Enabled: 90 or less | Warning Check For Variable Standards."
      when: win19cis_log_threshold_audit_event > 90
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid percentage set for win19cis_log_threshold_audit_event please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "18.5.12 | GPO | Ensure MSS: (WarningLevel) Percentage threshold for the security event log at which the system will generate a warning is set to Enabled: 90 or less | Set Warn Count."
      vars:
        warn_control_id: '18.5.12'
      when: win19cis_log_threshold_audit_event > 90
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.6.4.1 | GPO | Ensure 'Configure NetBIOS settings' is set to 'Enabled: Disable NetBIOS name resolution on public networks'"
  when: win19cis_rule_18_6_4_1
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.6.4.1
    - automated
    - patch
    - netbios
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  block:
    - name: "18.6.4.1 | GPO | Ensure 'Configure NetBIOS settings' is set to 'Enabled: Disable NetBIOS name resolution on public networks'. | Set Variable."
      when:
        - "'(Skipped)' not in item"
        - win19cis_enable_netbios_policy == 2 or win19cis_enable_netbios_policy == 0
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient"
        $registryValueName = "EnableNetbios"
        $type = "DWORD"
        $desiredValue = {{ win19cis_enable_netbios_policy }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_6_4_1_results.stdout'
      register: rule_18_6_4_1_results

    - name: "18.6.4.1 | AUDIT | Ensure 'Configure NetBIOS settings' is set to 'Enabled: Disable NetBIOS name resolution on public networks'. | Warning Check For Variable Standards."
      when:
        - win19cis_enable_netbios_policy != 2
        - win19cis_enable_netbios_policy != 0
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid setting for win19cis_enable_netbios_policy. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "18.6.4.1 | AUDIT | Ensure 'Configure NetBIOS settings' is set to 'Enabled: Disable NetBIOS name resolution on public networks'. | Warn Count."
      when:
        - win19cis_enable_netbios_policy != 2
        - win19cis_enable_netbios_policy != 0
      vars:
        warn_control_id: '18.6.4.1'
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.6.4.2 | GPO | Ensure Turn off multicast name resolution is set to Enabled"
  when:
    - win19cis_rule_18_6_4_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.6.4.2
    - patch
    - dns
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient"
    $registryValueName = "EnableMulticast"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_6_4_2_results.stdout'
  register: rule_18_6_4_2_results

- name: "18.6.5.1 | GPO | Ensure Enable Font Providers is set to Disabled"
  when:
    - win19cis_rule_18_6_5_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.6.5.1
    - patch
    - dns
    - gpo
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-7b.
    - NIST800-53R5_CM-7b.
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\System"
    $registryValueName = "EnableFontProviders"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_6_5_1_results.stdout'
  register: rule_18_6_5_1_results

- name: "18.6.8.1 | GPO | Ensure Enable insecure guest logons is set to Disabled"
  when:
    - win19cis_rule_18_6_8_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.6.8.1
    - patch
    - fonts
    - gpo
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\LanmanWorkstation"
    $registryValueName = "AllowInsecureGuestAuth"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_6_8_1_results.stdout'
  register: rule_18_6_8_1_results

- name: "18.6.9.1 | GPO | Ensure Turn on Mapper I/O LLTDIO driver is set to Disabled"
  when: win19cis_rule_18_6_9_1
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.6.9.1
    - patch
    - mapper
    - drivers
    - gpo
    - NIST800-171_3.4.2
    - NIST800-53_CM-6
    - NIST800-53R5_CM-6
  block:
    - name: "18.6.9.1 | GPO | Ensure Turn on Mapper IO LLTDIO driver is set to Disabled | AllowLLTDIOOndomain"
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Lltd"
        $registryValueName = "AllowLLTDIOOndomain"
        $type = "DWORD"
        $desiredValue = 0

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
        - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_6_9_1_results_allowlltdioondomain.stdout'
      register: rule_18_6_9_1_results_allowlltdioondomain

    - name: "18.6.9.1 | GPO | Ensure Turn on Mapper IO LLTDIO driver is set to Disabled | AllowLLTDIOOnPublicNet"
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Lltd"
        $registryValueName = "AllowLLTDIOOnPublicNet"
        $type = "DWORD"
        $desiredValue = 0

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
        - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_6_9_1_results_allowlltdioonpublicnet.stdout'
      register: rule_18_6_9_1_results_allowlltdioonpublicnet

    - name: "18.6.9.1 | GPO | Ensure Turn on Mapper IO LLTDIO driver is set to Disabled | EnableLLTDIO"
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Lltd"
        $registryValueName = "EnableLLTDIO"
        $type = "DWORD"
        $desiredValue = 0

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
        - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_6_9_1_results_enablelltdio.stdout'
      register: rule_18_6_9_1_results_enablelltdio

    - name: "18.6.9.1 | GPO | Ensure Turn on Mapper IO LLTDIO driver is set to Disabled | ProhibitLLTDIOOnPrivateNet"
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Lltd"
        $registryValueName = "ProhibitLLTDIOOnPrivateNet"
        $type = "DWORD"
        $desiredValue = 0

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
        - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_6_9_1_results_prohibitlltdioonprivatenet.stdout'
      register: rule_18_6_9_1_results_prohibitlltdioonprivatenet

- name: "18.6.9.2 | GPO | Ensure Turn on Responder RSPNDR driver is set to Disabled"
  when: win19cis_rule_18_6_9_2
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.6.9.2
    - patch
    - rspndr
    - driver
    - gpo
    - NIST800-171_3.4.2
    - NIST800-53_CM-6
    - NIST800-53R5_CM-6
  block:
    - name: "18.6.9.2 | GPO | Ensure Turn on Responder RSPNDR driver is set to Disabled | AllowRspndrOnDomain"
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Lltd"
        $registryValueName = "AllowRspndrOnDomain"
        $type = "DWORD"
        $desiredValue = 0

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
        - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_6_9_2_results_allowrspndrondomain.stdout'
      register: rule_18_6_9_2_results_allowrspndrondomain

    - name: "18.6.9.2 | GPO | Ensure Turn on Responder RSPNDR driver is set to Disabled | AllowRspndrOnPublicNet"
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Lltd"
        $registryValueName = "AllowRspndrOnPublicNet"
        $type = "DWORD"
        $desiredValue = 0

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
        - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_6_9_2_results_allowrspndronpublicnet.stdout'
      register: rule_18_6_9_2_results_allowrspndronpublicnet

    - name: "18.6.9.2 | GPO | Ensure Turn on Responder RSPNDR driver is set to Disabled | EnableRspndr"
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Lltd"
        $registryValueName = "EnableRspndr"
        $type = "DWORD"
        $desiredValue = 0

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
        - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_6_9_2_results_enablerspndr.stdout'
      register: rule_18_6_9_2_results_enablerspndr

    - name: "18.6.9.2 | GPO | Ensure Turn on Responder RSPNDR driver is set to Disabled | ProhibitRspndrOnPrivateNet"
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Lltd"
        $registryValueName = "ProhibitRspndrOnPrivateNet"
        $type = "DWORD"
        $desiredValue = 0

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
        - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_6_9_2_results_prohibitrspndronprivatenet.stdout'
      register: rule_18_6_9_2_results_prohibitrspndronprivatenet

- name: "18.6.10.2 | GPO | Ensure Turn off Microsoft Peer-to-Peer Networking Services is set to Enabled"
  when:
    - win19cis_rule_18_6_10_2
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.6.10.2
    - patch
    - p2p
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Peernet"
    $registryValueName = "Disabled"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_6_10_2_results.stdout'
  register: rule_18_6_10_2_results

- name: "18.6.11.2 | GPO | Ensure Prohibit installation and configuration of Network Bridge on your DNS domain network is set to Enabled"
  when:
    - win19cis_rule_18_6_11_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.6.11.2
    - patch
    - networkconnections
    - gpo
    - NIST800-171_3.1.16
    - NIST800-171_3.1.17
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_AC-18
    - NIST800-53_AC-18_1
    - NIST800-53_AC-18_3
    - NIST800-53_CM-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM_9
    - NIST800-53R5_AC-18
    - NIST800-53R5_AC-18_1
    - NIST800-53R5_AC-18_3
    - NIST800-53R5_CM-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM_9
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Network Connections"
    $registryValueName = "NC_AllowNetBridge_NLA"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_6_11_2_results.stdout'
  register: rule_18_6_11_2_results

- name: "18.6.11.3 | GPO | Ensure Prohibit use of Internet Connection Sharing on your DNS domain network is set to Enabled"
  when:
    - win19cis_rule_18_6_11_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.6.11.3
    - patch
    - networkconnections
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Network Connections"
    $registryValueName = "NC_ShowSharedAccessUI"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_6_11_3_results.stdout'
  register: rule_18_6_11_3_results

- name: "18.6.11.4 | GPO | Ensure Require domain users to elevate when setting a networks location is set to Enabled"
  when:
    - win19cis_rule_18_6_11_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.6.11.4
    - patch
    - networkconnections
    - gpo
    - NIST800-171_3.1.7
    - NIST800-53_AC-6_10
    - NIST800-53R5_AC-6_10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Network Connections"
    $registryValueName = "NC_StdDomainUserSetLocation"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_6_11_4_results.stdout'
  register: rule_18_6_11_4_results

- name: "18.6.14.1 | GPO | Ensure Hardened UNC Paths is set to Enabled, with Require Mutual Authentication, Require Integrity, and Require Privacy set for all NETLOGON and SYSVOL shares"
  when: win19cis_rule_18_6_14_1
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.6.14.1
    - patch
    - paths
    - unc
    - gpo
    - NIST800-53_IA-3_1
    - NIST800-53R5_IA-3_1
  block:
    - name: "18.6.14.1 | GPO | Ensure Hardened UNC Paths is set to Enabled, with Require Mutual Authentication, Require Integrity, and Require Privacy set for all NETLOGON and SYSVOL shares"
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Networkprovider\Hardenedpaths"
        $registryValueName = "\\*\NETLOGON"
        $type = "string"
        $desiredValue = "RequireMutualAuthentication=1, RequireIntegrity=1, RequirePrivacy=1"

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_6_14_1_results_netlogon.stdout'
      register: rule_18_6_14_1_results_netlogon

    - name: "18.6.14.1 | GPO | Ensure Hardened UNC Paths is set to Enabled, with Require Mutual Authentication, Require Integrity, and Require Privacy set for all NETLOGON and SYSVOL shares"
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Networkprovider\Hardenedpaths"
        $registryValueName = "\\*\SYSVOL"
        $type = "string"
        $desiredValue = "RequireMutualAuthentication=1, RequireIntegrity=1, RequirePrivacy=1"

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_6_14_1_results_sysvol.stdout'
      register: rule_18_6_14_1_results_sysvol

- name: "18.6.19.2.1 | GPO | Disable IPv6 Ensure TCPIP6 Parameter DisabledComponents is set to 0xff 255"
  when:
    - win19cis_rule_18_6_19_2_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.6.19.2.1
    - patch
    - ipv6
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Wcn\Registrars"
    $registryValueName = "DisabledComponents"
    $type = "DWORD"
    $desiredValue = 255

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_6_19_2_1_results.stdout'
  register: rule_18_6_19_2_1_results

- name: "18.6.20.1 | GPO | Ensure Configuration of wireless settings using Windows Connect Now is set to Disabled"
  when:
    - win19cis_rule_18_6_20_1
    - "'(Skipped)' not in item.gpo"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.6.20.1
    - patch
    - wireless
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item.gpo }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Wcn\Registrars"
    $registryValueName = "{{ item.value_name }}"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - { gpo: "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}", value_name: "EnableRegistrars" }
    - { gpo: "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}", value_name: "DisableUPnPRegistrar" }
    - { gpo: "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}", value_name: "DisableInBand802DOT11Registrar" }
    - { gpo: "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}", value_name: "DisableFlashConfigRegistrar" }
    - { gpo: "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}", value_name: "DisableWPDRegistrar" }
  loop_control:
    label: "{{ item.gpo }} - {{ item.value_name }}"
  changed_when: '"Patched" in rule_18_6_20_1_results.stdout'
  register: rule_18_6_20_1_results

- name: "18.6.20.2 | GPO | Ensure Prohibit access of the Windows Connect Now wizards is set to Enabled"
  when:
    - win19cis_rule_18_6_20_2
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.6.20.2
    - patch
    - connectnow
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Wcn\Ui"
    $registryValueName = "DisableWcnUi"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_6_20_2_results.stdout'
  register: rule_18_6_20_2_results

- name: "18.6.21.1 | GPO | Ensure Minimize the number of simultaneous connections to the Internet or a Windows Domain is set to Enabled"
  when:
    - win19cis_rule_18_6_21_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.6.21.1
    - patch
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-171_3.13.1
    - NIST800-171_3.13.2
    - NIST800-53_CM-1
    - NIST800-53_CM-2
    - NIST800-53_AC-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53_SA-3
    - NIST800-53_SA-8
    - NIST800-53_SA-10
    - NIST800-53R5_CM-1
    - NIST800-53R5_CM-2
    - NIST800-53R5_AC-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
    - NIST800-53R5_SA-3
    - NIST800-53R5_SA-8
    - NIST800-53R5_SA-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Wcmsvc\Grouppolicy"
    $registryValueName = "fMinimizeConnections"
    $type = "DWORD"
    $desiredValue = 3

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_6_21_1_results.stdout'
  register: rule_18_6_21_1_results

- name: "18.6.21.2 | GPO | Ensure Prohibit connection to non-domain networks when connected to domain authenticated network is set to Enabled MS only | Member Server"
  when:
    - win19cis_rule_18_6_21_2
    - "'(Skipped)' not in item"
  tags:
    - level2-memberserver
    - rule_18.6.21.2
    - patch
    - gpo
    - gpo
    - NIST800-171_3.13.1
    - NIST800-171_3.13.5
    - NIST800-53_SC-7
    - NIST800-53R5_SC-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Wcmsvc\Grouppolicy"
    $registryValueName = "fBlockNonDomain"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_6_21_2_results.stdout'
  register: rule_18_6_21_2_results

- name: "18.7.1 | GPO | Ensure Allow Print Spooler to accept client connections is set to Disabled"
  when:
    - win19cis_rule_18_7_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level2-memberserver
    - rule_18.7.1
    - patch
    - printers
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-171_3.13.1
    - NIST800-171_3.13.2
    - NIST800-53_CM-1
    - NIST800-53_CM-2
    - NIST800-53_AC-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53_SA-3
    - NIST800-53_SA-8
    - NIST800-53_SA-10
    - NIST800-53R5_CM-1
    - NIST800-53R5_CM-2
    - NIST800-53R5_AC-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
    - NIST800-53R5_SA-3
    - NIST800-53R5_SA-8
    - NIST800-53R5_SA-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers"
    $registryValueName = "RegisterSpoolerRemoteRpcEndPoint"
    $type = "DWORD"
    $desiredValue = 2

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_7_1_results.stdout'
  register: rule_18_7_1_results

- name: "18.7.2 | GPO | Ensure Configure Redirection Guard is set to Enabled Redirection Guard Enabled"
  when:
    - win19cis_rule_18_7_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.7.2
    - patch
    - printers
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers"
    $registryValueName = "RedirectionguardPolicy"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_7_2_results.stdout'
  register: rule_18_7_2_results

- name: "18.7.3 | GPO | Ensure Configure RPC connection settings Protocol to use for outgoing RPC connections is set to Enabled RPC over TCP"
  when:
    - win19cis_rule_18_7_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.7.3
    - patch
    - printers
    - gpo
    - NIST800-171_3.4.2
    - NIST800-53_CM-6b.
    - NIST800-53R5_CM-6b.
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers\RPC"
    $registryValueName = "RpcUseNamedPipeProtocol"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_7_3_results.stdout'
  register: rule_18_7_3_results

- name: "18.7.4 | GPO | Ensure Configure RPC connection settings Use authentication for outgoing RPC connections is set to Enabled: Default"
  when:
    - win19cis_rule_18_7_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.7.4
    - patch
    - printers
    - gpo
    - NIST800-171_3.4.2
    - NIST800-53_CM-6b.
    - NIST800-53R5_CM-6b.
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers\RPC"
    $registryValueName = "RpcAuthentication"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_7_4_results.stdout'
  register: rule_18_7_4_results

- name: "18.7.5 | GPO | Ensure Configure RPC connection settings Use authentication for outgoing RPC connections is set to Enabled: Default"
  when:
    - win19cis_rule_18_7_5
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.7.5
    - patch
    - printers
    - gpo
    - NIST800-171_3.4.2
    - NIST800-53_CM-6b.
    - NIST800-53R5_CM-6b.
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers\RPC"
    $registryValueName = "RpcProtocols"
    $type = "DWORD"
    $desiredValue = 5

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_7_5_results.stdout'
  register: rule_18_7_5_results

- name: "18.7.6 | GPO | Ensure Configure RPC listener settings Authentication protocol to use for incoming RPC connections is set to Enabled Negotiate or higher"
  when: win19cis_rule_18_7_6
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.7.6
    - patch
    - printers
    - gpo
    - NIST800-53_IA-3_1
    - NIST800-53R5_IA-3_1
  block:
    - name: "18.7.6 | GPO | Ensure 'Configure RPC listener settings: Authentication protocol to use for incoming RPC connections:' is set to 'Enabled: Negotiate' or higher. | Set Variable."
      when:
        - "'(Skipped)' not in item"
        - win19cis_force_kerberos_for_rpc == 0 or win19cis_force_kerberos_for_rpc == 1
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers\RPC"
        $registryValueName = "ForceKerberosForRpc"
        $type = "DWORD"
        $desiredValue = {{ win19cis_force_kerberos_for_rpc }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_7_6_results.stdout'
      register: rule_18_7_6_results

    - name: "18.7.6 | AUDIT | Ensure 'Configure RPC listener settings: Authentication protocol to use for incoming RPC connections:' is set to 'Enabled: Negotiate' or higher. | Warning Check For Variable Standards."
      when:
        - win19cis_force_kerberos_for_rpc != 0
        - win19cis_force_kerberos_for_rpc != 1
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid setting for win19cis_force_kerberos_for_rpc. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "18.7.6 | AUDIT | Ensure 'Configure RPC listener settings: Authentication protocol to use for incoming RPC connections:' is set to 'Enabled: Negotiate' or higher. | Warn Count."
      vars:
        warn_control_id: '18.7.6'
      when:
        - win19cis_force_kerberos_for_rpc != 0
        - win19cis_force_kerberos_for_rpc != 1
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.7.7 | GPO | Ensure Configure RPC over TCP port is set to Enabled: 0"
  when:
    - win19cis_rule_18_7_7
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.7.7
    - patch
    - printers
    - gpo
    - NIST800-171_3.4.2
    - NIST800-53_CM-6b.
    - NIST800-53R5_CM-6b.
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers\RPC"
    $registryValueName = "RpcTcpPort"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_7_7_results.stdout'
  register: rule_18_7_7_results

- name: "18.7.8 | GPO | Ensure Limits print driver installation to Administrators is set to Enabled"
  when:
    - win19cis_rule_18_7_8
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.7.8
    - patch
    - printers
    - drivers
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers\PointAndPrint"
    $registryValueName = "RestrictDriverInstallationToAdministrators"
    $type = "DWORD"
    $desiredValue = 1

    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    if ($currentValue -ne $desiredValue) {
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_7_8_results.stdout'
  register: rule_18_7_8_results

- name: "18.7.9 | GPO | Ensure Manage processing of Queue-specific files is set to Enabled: Limit Queue-specific files to Color profiles"
  when:
    - win19cis_rule_18_7_9
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.7.9
    - patch
    - printers
    - drivers
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers"
    $registryValueName = "CopyFilesPolicy"
    $type = "DWORD"
    $desiredValue = 1

    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    if ($currentValue -ne $desiredValue) {
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_7_9_results.stdout'
  register: rule_18_7_9_results

- name: "18.7.10 | GPO | Ensure Point and Print Restrictions When installing drivers for a new connection is set to Enabled Show warning and elevation prompt"
  when:
    - win19cis_rule_18_7_10
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.7.10
    - patch
    - printers
    - gpo
    - NIST800-171_3.1.5
    - NIST800-53_AC-6_8
    - NIST800-53R5_AC-6_8
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers\PointAndPrint"
    $registryValueName = "NoWarningNoElevationOnInstall"
    $type = "DWORD"
    $desiredValue = 0

    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    if ($currentValue -ne $desiredValue) {
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_7_10_results.stdout'
  register: rule_18_7_10_results

- name: "18.7.11 | GPO | Ensure Point and Print Restrictions: When updating drivers for an existing connection is set to Enabled: Show warning and elevation prompt"
  when:
    - win19cis_rule_18_7_11
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.7.11
    - patch
    - printers
    - gpo
    - NIST800-171_3.4.2
    - NIST800-53_CM-6b.
    - NIST800-53R5_CM-6b.
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers\PointAndPrint"
    $registryValueName = "UpdatePromptSettings"
    $type = "DWORD"
    $desiredValue = 0

    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    if ($currentValue -ne $desiredValue) {
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_7_11_results.stdout'
  register: rule_18_7_11_results

- name: "18.8.1.1 | GPO | Ensure Turn off notifications network usage is set to Enabled"
  when:
    - win19cis_rule_18_8_1_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.8.1.1
    - patch
    - notifications
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications"
    $registryValueName = "NoCloudApplicationNotification"
    $type = "DWORD"
    $desiredValue = 1

    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    if ($currentValue -ne $desiredValue) {
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_8_1_1_results.stdout'
  register: rule_18_8_1_1_results

- name: "18.9.3.1 | GPO | Ensure Include command line in process creation events is set to Enabled."
  when:
    - win19cis_rule_18_9_3_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.3.1
    - patch
    - gpo
    - NIST800-171_3.3.1
    - NIST800-171_3.3.2
    - NIST800-53_AU-2
    - NIST800-53R5_AU-2
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System\Audit"
    $registryValueName = "ProcessCreationIncludeCmdLine_Enabled"
    $type = "DWORD"
    $desiredValue = 1

    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    if ($currentValue -ne $desiredValue) {
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_3_1_results.stdout'
  register: rule_18_9_3_1_results

- name: "18.9.4.1 | GPO | Ensure Encryption Oracle Remediation is set to Enabled Force Updated Clients"
  when:
    - win19cis_rule_18_9_4_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.4.1
    - patch
    - encryption_oracle
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\CredSSP\Parameters"
    $registryValueName = "AllowEncryptionOracle"
    $type = "DWORD"
    $desiredValue = 0

    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    if ($currentValue -ne $desiredValue) {
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_4_1_results.stdout'
  register: rule_18_9_4_1_results

- name: "18.9.4.2 | GPO | Ensure Remote host allows delegation of non-exportable credentials is set to Enabled"
  when:
    - win19cis_rule_18_9_4_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.4.2
    - patch
    - credentialsdelecation
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_IA-5
    - NIST800-53R5_IA-5
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\CredentialsDelegation"
    $registryValueName = "AllowProtectedCreds"
    $type = "DWORD"
    $desiredValue = 1

    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    if ($currentValue -ne $desiredValue) {
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_4_2_results.stdout'
  register: rule_18_9_4_2_results

- name: "18.9.5.1 | GPO | NG Ensure Turn On Virtualization Based Security is set to Enabled"
  when:
    - win19cis_rule_18_9_5_1
    - "'(Skipped)' not in item"
  tags:
    - ngws-domaincontroller
    - ngws-memberserver
    - rule_18.9.5.1
    - patch
    - vbs
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard"
    $registryValueName = "EnableVirtualizationBasedSecurity"
    $type = "DWORD"
    $desiredValue = 1

    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    if ($currentValue -ne $desiredValue) {
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_ngws_dc_gpo_name ~ ( '(Skipped)' if not win19cis_ngws_dc_gpo else '' ) }}"
    - "{{ win19cis_ngws_ms_gpo_name ~ ( '(Skipped)' if not win19cis_ngws_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_5_1_results.stdout'
  register: rule_18_9_5_1_results

- name: "18.9.5.2 | GPO | NG Ensure Turn On Virtualization Based Security Select Platform Security Level is set to Secure Boot and DMA Protection"
  when: win19cis_rule_18_9_5_2
  tags:
    - ngws-domaincontroller
    - ngws-memberserver
    - rule_18.9.5.2
    - patch
    - vbs
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  block:
    - name: "18.9.5.2 | GPO | NG Ensure Turn On Virtualization Based Security Select Platform Security Level is set to Secure Boot and DMA Protection | Set Variable."
      when:
        - "'(Skipped)' not in item"
        - win19cis_virtualization_based_security_level == 1 or win19cis_virtualization_based_security_level == 3
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard"
        $registryValueName = "RequirePlatformSecurityFeatures"
        $type = "DWORD"
        $desiredValue = {{ win19cis_virtualization_based_security_level }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_ngws_dc_gpo_name ~ ( '(Skipped)' if not win19cis_ngws_dc_gpo else '' ) }}"
        - "{{ win19cis_ngws_ms_gpo_name ~ ( '(Skipped)' if not win19cis_ngws_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_9_5_2_results.stdout'
      register: rule_18_9_5_2_results

    - name: "18.9.5.2 | AUDIT | NG Ensure Turn On Virtualization Based Security Select Platform Security Level is set to Secure Boot and DMA Protection | Warning Check For Variable Standards."
      when:
        - win19cis_virtualization_based_security_level != 1
        - win19cis_virtualization_based_security_level != 3
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid setting for win19cis_virtualization_based_security_level. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "18.9.5.2 | AUDIT | NG Ensure Turn On Virtualization Based Security Select Platform Security Level is set to Secure Boot and DMA Protection. | Warn Count."
      vars:
        warn_control_id: '18.9.5.2'
      when:
        - win19cis_virtualization_based_security_level != 1
        - win19cis_virtualization_based_security_level != 3
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.9.5.3 | GPO | NG Ensure Turn On Virtualization Based Security Virtualization Based Protection of Code Integrity is set to Enabled with UEFI lock"
  when:
    - win19cis_rule_18_9_5_3
    - "'(Skipped)' not in item"
  tags:
    - ngws-domaincontroller
    - ngws-memberserver
    - rule_18.9.5.3
    - patch
    - vbs
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard"
    $registryValueName = "HypervisorEnforcedCodeIntegrity"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_ngws_dc_gpo_name ~ ( '(Skipped)' if not win19cis_ngws_dc_gpo else '' ) }}"
    - "{{ win19cis_ngws_ms_gpo_name ~ ( '(Skipped)' if not win19cis_ngws_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_5_3_results.stdout'
  register: rule_18_9_5_3_results

- name: "18.9.5.4 | GPO | NG Ensure Turn On Virtualization Based Security Require UEFI Memory Attributes Table is set to True checked"
  when:
    - win19cis_rule_18_9_5_4
    - "'(Skipped)' not in item"
  tags:
    - ngws-domaincontroller
    - ngws-memberserver
    - rule_18.9.5.4
    - patch
    - vbs
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard"
    $registryValueName = "HVCIMATRequired"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_ngws_dc_gpo_name ~ ( '(Skipped)' if not win19cis_ngws_dc_gpo else '' ) }}"
    - "{{ win19cis_ngws_ms_gpo_name ~ ( '(Skipped)' if not win19cis_ngws_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_5_4_results.stdout'
  register: rule_18_9_5_4_results

- name: "18.9.5.5 | GPO | NG Ensure Turn On Virtualization Based Security Credential Guard Configuration is set to Enabled with UEFI lock MS Only | Member Server"
  when:
    - win19cis_rule_18_9_5_5
    - "'(Skipped)' not in item"
  tags:
    - ngws-memberserver
    - rule_18.9.5.5
    - patch
    - vbs
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard"
    $registryValueName = "LsaCfgFlags"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_ngws_ms_gpo_name ~ ( '(Skipped)' if not win19cis_ngws_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_5_5_results.stdout'
  register: rule_18_9_5_5_results

- name: "18.9.5.6 | GPO | NG Ensure Turn On Virtualization Based Security Credential Guard Configuration is set to Disabled DC Only | Domain Controller"
  when:
    - win19cis_rule_18_9_5_6
    - "'(Skipped)' not in item"
  tags:
    - ngws-domaincontroller
    - rule_18.9.5.6
    - patch
    - vbs
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard"
    $registryValueName = "LsaCfgFlags"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_ngws_dc_gpo_name ~ ( '(Skipped)' if not win19cis_ngws_dc_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_5_6_results.stdout'
  register: rule_18_9_5_6_results

- name: "18.9.5.7 | GPO | NG Ensure Turn On Virtualization Based Security Secure Launch Configuration is set to Enabled"
  when:
    - win19cis_rule_18_9_5_7
    - "'(Skipped)' not in item"
  tags:
    - ngws-domaincontroller
    - ngws-memberserver
    - rule_18.9.5.7
    - patch
    - vbs
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard"
    $registryValueName = "ConfigureSystemGuardLaunch"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_ngws_dc_gpo_name ~ ( '(Skipped)' if not win19cis_ngws_dc_gpo else '' ) }}"
    - "{{ win19cis_ngws_ms_gpo_name ~ ( '(Skipped)' if not win19cis_ngws_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_5_7_results.stdout'
  register: rule_18_9_5_7_results

- name: "18.9.7.2 | GPO | Ensure Prevent device metadata retrieval from the Internet is set to Enabled"
  when:
    - win19cis_rule_18_9_7_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.7.2
    - patch
    - metadata
    - gpo
    - NIST800-171_3.4.8
    - NIST800-53_CM-7_5
    - NIST800-53_CM-10
    - NIST800-53_SI-16
    - NIST800-53R5_CM-7_5
    - NIST800-53R5_CM-10
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Device Metadata"
    $registryValueName = "PreventDeviceMetadataFromNetwork"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_7_2_results.stdout'
  register: rule_18_9_7_2_results

- name: "18.9.13.1 | GPO | Ensure Boot-Start Driver Initialization Policy is set to Enabled Good unknown and bad but critical"
  when:
    - win19cis_rule_18_9_13_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.13.1
    - patch
    - drivers
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\System\CurrentControlSet\Policies\EarlyLaunch"
    $registryValueName = "DriverLoadPolicy"
    $type = "DWORD"
    $desiredValue = 3

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_13_1_results.stdout'
  register: rule_18_9_13_1_results

- name: "18.9.19.2 | GPO | Ensure Configure registry policy processing Do not apply during periodic background processing is set to Enabled FALSE"
  when:
    - win19cis_rule_18_9_19_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.19.2
    - patch
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-171_3.13.1
    - NIST800-171_3.13.2
    - NIST800-53_CM-1
    - NIST800-53_CM-2
    - NIST800-53_AC-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53_SA-3
    - NIST800-53_SA-8
    - NIST800-53_SA-10
    - NIST800-53R5_CM-1
    - NIST800-53R5_CM-2
    - NIST800-53R5_AC-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
    - NIST800-53R5_SA-3
    - NIST800-53R5_SA-8
    - NIST800-53R5_SA-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Group Policy\{35378EAC-683F-11D2-A89A-00C04FBBCFA2}"
    $registryValueName = "NoBackgroundPolicy"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_19_2_results.stdout'
  register: rule_18_9_19_2_results

- name: "18.9.19.3 | GPO | Ensure Configure registry policy processing Process even if the Group Policy objects have not changed is set to Enabled TRUE"
  when:
    - win19cis_rule_18_9_19_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.19.3
    - patch
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-171_3.13.1
    - NIST800-171_3.13.2
    - NIST800-53_CM-1
    - NIST800-53_CM-2
    - NIST800-53_AC-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53_SA-3
    - NIST800-53_SA-8
    - NIST800-53_SA-10
    - NIST800-53R5_CM-1
    - NIST800-53R5_CM-2
    - NIST800-53R5_AC-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
    - NIST800-53R5_SA-3
    - NIST800-53R5_SA-8
    - NIST800-53R5_SA-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Group Policy\{35378EAC-683F-11D2-A89A-00C04FBBCFA2}"
    $registryValueName = "NoGPOListChanges"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_19_3_results.stdout'
  register: rule_18_9_19_3_results

- name: "18.9.19.4 | GPO | Ensure Configure security policy processing: Do not apply during periodic background processing is set to Enabled: FALSE"
  when:
    - win19cis_rule_18_9_19_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.19.4
    - patch
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-171_3.13.1
    - NIST800-171_3.13.2
    - NIST800-53_CM-1
    - NIST800-53_CM-2
    - NIST800-53_AC-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53_SA-3
    - NIST800-53_SA-8
    - NIST800-53_SA-10
    - NIST800-53R5_CM-1
    - NIST800-53R5_CM-2
    - NIST800-53R5_AC-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
    - NIST800-53R5_SA-3
    - NIST800-53R5_SA-8
    - NIST800-53R5_SA-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Group Policy\{827D319E-6EAC-11D2-A4EA-00C04F79F83A}"
    $registryValueName = "NoBackgroundPolicy"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_19_4_results.stdout'
  register: rule_18_9_19_4_results

- name: "18.9.19.5 | GPO | Ensure Configure security policy processing: Process even if the Group Policy objects have not changed' is set to Enabled: TRUE"
  when:
    - win19cis_rule_18_9_19_5
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.19.5
    - patch
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-171_3.13.1
    - NIST800-171_3.13.2
    - NIST800-53_CM-1
    - NIST800-53_CM-2
    - NIST800-53_AC-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53_SA-3
    - NIST800-53_SA-8
    - NIST800-53_SA-10
    - NIST800-53R5_CM-1
    - NIST800-53R5_CM-2
    - NIST800-53R5_AC-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
    - NIST800-53R5_SA-3
    - NIST800-53R5_SA-8
    - NIST800-53R5_SA-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Group Policy\{827D319E-6EAC-11D2-A4EA-00C04F79F83A}"
    $registryValueName = "NoGPOListChanges"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_19_5_results.stdout'
  register: rule_18_9_19_5_results

- name: "18.9.19.6 | GPO | Ensure Continue experiences on this device is set to Disabled"
  when:
    - win19cis_rule_18_9_19_6
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.19.6
    - patch
    - gpo
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\System"
    $registryValueName = "EnableCdp"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_19_6_results.stdout'
  register: rule_18_9_19_6_results

- name: "18.9.19.7 | GPO | Ensure Turn off background refresh of Group Policy is set to Disabled"
  when:
    - win19cis_rule_18_9_19_7
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.19.7
    - patch
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-171_3.13.1
    - NIST800-171_3.13.2
    - NIST800-53_CM-1
    - NIST800-53_CM-2
    - NIST800-53_AC-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53_SA-3
    - NIST800-53_SA-8
    - NIST800-53_SA-10
    - NIST800-53R5_CM-1
    - NIST800-53R5_CM-2
    - NIST800-53R5_AC-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
    - NIST800-53R5_SA-3
    - NIST800-53R5_SA-8
    - NIST800-53R5_SA-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System"
    $registryValueName = "DisableBkGndGroupPolicy"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_19_7_results.stdout'
  register: rule_18_9_19_7_results

- name: "18.9.20.1.1 | GPO | Ensure Turn off downloading of print drivers over HTTP is set to Enabled"
  when:
    - win19cis_rule_18_9_20_1_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.20.1.1
    - patch
    - drivers
    - printers
    - gpo
    - NIST800-171_3.4.8
    - NIST800-53_CM-7_5
    - NIST800-53_CM-10
    - NIST800-53R5_CM-7_5
    - NIST800-53R5_CM-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers"
    $registryValueName = "DisableWebPnPDownload"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_20_1_1_results.stdout'
  register: rule_18_9_20_1_1_results

- name: "18.9.20.1.2 | GPO | Ensure Turn off handwriting personalization data sharing is set to Enabled"
  when:
    - win19cis_rule_18_9_20_1_2
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.20.1.2
    - patch
    - handwriting
    - gpo
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\TabletPC"
    $registryValueName = "PreventHandwritingDataSharing"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_20_1_2_results.stdout'
  register: rule_18_9_20_1_2_results

- name: "18.9.20.1.3 | GPO | Ensure Turn off handwriting recognition error reporting is set to Enabled"
  when:
    - win19cis_rule_18_9_20_1_3
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18_9_20_1_3
    - patch
    - handwriting
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\HandwritingErrorReports"
    $registryValueName = "PreventHandwritingErrorReports"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_20_1_3_results.stdout'
  register: rule_18_9_20_1_3_results

- name: "18.9.20.1.4 | GPO | Ensure Turn off Internet Connection Wizard if URL connection is referring to Microsoft.com is set to Enabled"
  when:
    - win19cis_rule_18_9_20_1_4
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.20.1.4
    - patch
    - wizard
    - internetconnectionwizard
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Internet Connection Wizard"
    $registryValueName = "ExitOnMSICW"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_20_1_4_results.stdout'
  register: rule_18_9_20_1_4_results

- name: "18.9.20.1.5 | GPO | Ensure Turn off Internet download for Web publishing and online ordering wizards is set to Enabled"
  when:
    - win19cis_rule_18_9_20_1_5
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.20.1.5
    - patch
    - wizard
    - internetdownloadwizard
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
    $registryValueName = "NoWebServices"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_20_1_5_results.stdout'
  register: rule_18_9_20_1_5_results

- name: "18.9.20.1.6 | GPO | Ensure Turn off printing over HTTP is set to Enabled"
  when:
    - win19cis_rule_18_9_20_1_6
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.20.1.6
    - patch
    - printers
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers"
    $registryValueName = "DisableHTTPPrinting"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_20_1_6_results.stdout'
  register: rule_18_9_20_1_6_results

- name: "18.9.20.1.7 | GPO | Ensure Turn off Registration if URL connection is referring to Microsoft.com is set to Enabled"
  when:
    - win19cis_rule_18_9_20_1_7
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.20.1.7
    - patch
    - wizard
    - registration
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Registration Wizard Control"
    $registryValueName = "NoRegistration"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_20_1_7_results.stdout'
  register: rule_18_9_20_1_7_results

- name: "18.9.20.1.8 | GPO | Ensure Turn off Search Companion content file updates is set to Enabled"
  when:
    - win19cis_rule_18_9_20_1_8
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.20.1.8
    - patch
    - search
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\SearchCompanion"
    $registryValueName = "DisableContentFileUpdates"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_20_1_8_results.stdout'
  register: rule_18_9_20_1_8_results

- name: "18.9.20.1.9 | GPO | Ensure Turn off the Order Prints picture task is set to Enabled"
  when:
    - win19cis_rule_18_9_20_1_9
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.20.1.9
    - patch
    - printers
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
    $registryValueName = "NoOnlinePrintsWizard"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_20_1_9_results.stdout'
  register: rule_18_9_20_1_9_results

- name: "18.9.20.1.10 | GPO | Ensure Turn off the Publish to Web task for files and folders is set to Enabled"
  when:
    - win19cis_rule_18_9_20_1_10
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.20.1.10
    - patch
    - wizard
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
    $registryValueName = "NoPublishingWizard"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_20_1_10_results.stdout'
  register: rule_18_9_20_1_10_results

- name: "18.9.20.1.11 | GPO | Ensure Turn off the Windows Messenger Customer Experience Improvement Program is set to Enabled"
  when:
    - win19cis_rule_18_9_20_1_11
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.20.1.11
    - patch
    - wmcei
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Messenger\Client"
    $registryValueName = "CEIP"
    $type = "DWORD"
    $desiredValue = 2

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_20_1_11_results.stdout'
  register: rule_18_9_20_1_11_results

- name: "18.9.20.1.12 | GPO | Ensure Turn off Windows Customer Experience Improvement Program is set to Enabled"
  when:
    - win19cis_rule_18_9_20_1_12
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.20.1.12
    - patch
    - wmcei
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\SqmClient\Windows"
    $registryValueName = "CEIPEnable"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_20_1_12_results.stdout'
  register: rule_18_9_20_1_12_results

- name: "18.9.20.1.13 | GPO | Ensure Turn off Windows Error Reporting is set to Enabled"
  when: win19cis_rule_18_9_20_1_13
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.20.1.13
    - patch
    - errorreporting
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  block:
    - name: "18.9.20.1.13 | GPO | Ensure Turn off Windows Error Reporting is set to Enabled | Windows Error Reporting"
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Windows Error Reporting"
        $registryValueName = "Disabled"
        $type = "DWORD"
        $desiredValue = 1

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
        - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_9_20_1_13_1_results.stdout'
      register: rule_18_9_20_1_13_1_results

    - name: "18.9.20.1.13 | GPO | Ensure Turn off Windows Error Reporting is set to Enabled | Error Reporting"
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\PCHealth\ErrorReporting"
        $registryValueName = "DoReport"
        $type = "DWORD"
        $desiredValue = 0

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
        - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_9_20_1_13_2_results.stdout'
      register: rule_18_9_20_1_13_2_results

- name: "18.9.23.1 | GPO | Ensure Support device authentication using certificate is set to Enabled Automatic"
  when: win19cis_rule_18_9_23_1
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.23.1
    - patch
    - certificates
    - gpo
    - NIST800-53_IA-3_1
    - NIST800-53R5_IA-3_1
  block:
    - name: "18.9.23.1 | GPO | Ensure Support device authentication using certificate is set to Enabled Automatic | DevicePKInitBehavior"
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\kerberos\parameters"
        $registryValueName = "DevicePKInitBehavior"
        $type = "DWORD"
        $desiredValue = 0

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
        - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_9_23_1_1_results.stdout'
      register: rule_18_9_23_1_1_results

    - name: "18.9.23.1 | GPO | Ensure Support device authentication using certificate is set to Enabled Automatic | DevicePKInitEnabled"
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\kerberos\parameters"
        $registryValueName = "DevicePKInitEnabled"
        $type = "DWORD"
        $desiredValue = 1

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
        - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_9_23_1_2_results.stdout'
      register: rule_18_9_23_1_2_results

- name: "18.9.24.1 | GPO | Ensure Enumeration policy for external devices incompatible with Kernel DMA Protection is set to Enabled Block All"
  when:
    - win19cis_rule_18_9_24_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.24.1
    - patch
    - dma
    - gpo
    - NIST800-171_3.4.1
    - NIST800-53_CM-8
    - NIST800-53R5_CM-8
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Kernel DMA Protection"
    $registryValueName = "DeviceEnumerationPolicy"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_24_1_results.stdout'
  register: rule_18_9_24_1_results

- name: "18.9.25.1 | GPO | Ensure Configure password backup directory is set to Enabled: Active Directory or Enabled: Azure Active Directory"
  when: win19cis_rule_18_9_25_1
  tags:
    - level1-memberserver
    - rule_18.9.25.1
    - patch
    - laps
    - gpo
    - NIST800-171_3.8.9
    - NIST800-53_CP-9
    - NIST800-53R5_CP-9
  block:
    - name: "18.9.25.1 | GPO | Ensure 'Configure password backup directory' is set to 'Enabled: Active Directory' or 'Enabled: Azure Active Directory'. | Set Variable."
      when:
        - "'(Skipped)' not in item"
        - win19cis_laps_backupdirectory_value == 1 or win19cis_laps_backupdirectory_value == 2
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\LAPS"
        $registryValueName = "BackupDirectory"
        $type = "DWORD"
        $desiredValue = {{ win19cis_laps_backupdirectory_value }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_9_25_1_results.stdout'
      register: rule_18_9_25_1_results

    - name: "18.9.25.1 | AUDIT | Ensure 'Configure password backup directory' is set to 'Enabled: Active Directory' or 'Enabled: Azure Active Directory'. | Warning Check For Variable Standards."
      when:
        - win19cis_laps_backupdirectory_value != 1
        - win19cis_laps_backupdirectory_value != 2
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid setting for win19cis_laps_backupdirectory_value. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "18.9.25.1 | AUDIT | Ensure 'Configure password backup directory' is set to 'Enabled: Active Directory' or 'Enabled: Azure Active Directory'. | Warn Count."
      vars:
        warn_control_id: '18.9.25.1'
      when:
        - win19cis_laps_backupdirectory_value != 1
        - win19cis_laps_backupdirectory_value != 2
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.9.25.2 | GPO | Ensure Do not allow password expiration time longer than required by policy is set to Enabled"
  when:
    - win19cis_rule_18_9_25_2
    - "'(Skipped)' not in item"
  tags:
    - level1-memberserver
    - rule_18.9.25.2
    - patch
    - laps
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_IA-5_1_d
    - NIST800-53R5_IA-5_1_d
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\LAPS"
    $registryValueName = "PwdExpirationProtectionEnabled"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_25_2_results.stdout'
  register: rule_18_9_25_2_results

- name: "18.9.25.3 | GPO | Ensure Enable password encryption is set to Enabled"
  when:
    - win19cis_rule_18_9_25_3
    - "'(Skipped)' not in item"
  tags:
    - level1-memberserver
    - rule_18.9.25.3
    - patch
    - laps
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA-5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA-5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\LAPS"
    $registryValueName = "ADPasswordEncryptionEnabled"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_25_3_results.stdout'
  register: rule_18_9_25_3_results

- name: "18.9.25.4 | GPO | Ensure Password Settings: Password Complexity is set to 'Enabled: Large letters + small letters + numbers + special character'"
  when:
    - win19cis_rule_18_9_25_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.25.4
    - patch
    - laps
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_IA-5_1
    - NIST800-53R5_IA-5_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\LAPS"
    $registryValueName = "PasswordComplexity"
    $type = "DWORD"
    $desiredValue = 4

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_25_4_results.stdout'
  register: rule_18_9_25_4_results

- name: "18.9.25.5 | GPO | Ensure Password Settings: Password Length is set to Enabled: 15 or more"
  when:
    - win19cis_rule_18_9_25_5
  tags:
    - level1-memberserver
    - rule_18.9.25.5
    - patch
    - laps
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_IA-5_1
    - NIST800-53R5_IA-5_1
  block:
    - name: "18.9.25.5 | GPO | Ensure 'Password Settings: Password Length' is set to 'Enabled: 15 or more'. | Set Variable."
      when:
        - "'(Skipped)' not in item"
        - win19cis_laps_passwordlength_value >= 15
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\LAPS"
        $registryValueName = "PasswordLength"
        $type = "DWORD"
        $desiredValue = {{ win19cis_laps_passwordlength_value }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_9_25_5_results.stdout'
      register: rule_18_9_25_5_results

    - name: "18.9.25.5 | AUDIT | Ensure 'Password Settings: Password Length' is set to 'Enabled: 15 or more'. | Warning Check For Variable Standards."
      when: win19cis_laps_passwordlength_value < 15
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid laps password length for win19cis_laps_passwordlength_value. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "18.9.25.5 | AUDIT | Ensure Password Settings: Password Length is set to Enabled: 15 or more | Set Warn Count."
      vars:
        warn_control_id: '18.9.25.5'
      when: win19cis_laps_passwordlength_value < 15
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.9.25.6 | GPO | Ensure Password Settings: Password Age (Days) is set to Enabled: 30 or fewer"
  when: win19cis_rule_18_9_25_6
  tags:
    - level1-memberserver
    - rule_18.9.25.6
    - patch
    - laps
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_IA-5_1
    - NIST800-53R5_IA-5_1
  block:
    - name: "18.9.25.6 | GPO | Ensure 'Password Settings: Password Age (Days)' is set to 'Enabled: 30 or fewer'. | Set Variable."
      when:
        - "'(Skipped)' not in item"
        - win19cis_laps_passwordagedays_value <= 30
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\LAPS"
        $registryValueName = "PasswordAgeDays"
        $type = "DWORD"
        $desiredValue = {{ win19cis_laps_passwordagedays_value }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_9_25_6_results.stdout'
      register: rule_18_9_25_6_results

    - name: "18.9.25.6 | AUDIT | Ensure 'Password Settings: Password Age (Days)' is set to 'Enabled: 30 or fewer'. | Check Variable Standards."
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid laps Password Age (Days) for win19cis_laps_passwordagedays_value. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."
      when: win19cis_laps_passwordagedays_value > 30

    - name: "18.9.25.6 | AUDIT | Ensure 'Password Settings: Password Age (Days)' is set to 'Enabled: 30 or fewer'. | Set Warn Count."
      vars:
        warn_control_id: '18.9.25.6'
      when: win19cis_laps_passwordagedays_value > 30
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.9.25.7 | GPO | Ensure Post-authentication actions: Grace period (hours) is set to Enabled: 8 or fewer hours, but not 0"
  when: win19cis_rule_18_9_25_7
  tags:
    - level1-memberserver
    - rule_18.9.25.7
    - patch
    - laps
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_IA-5_1
    - NIST800-53R5_IA-5_1
  block:
    - name: "18.9.25.7 | GPO | Ensure 'Grace period (hours)' is set to 'Enabled: 8 or fewer hours, but not 0'. | Set Registry"
      when:
        - "'(Skipped)' not in item"
        - win19cis_laps_postauthenticationresetdelay_value <= 8
        - win19cis_laps_postauthenticationresetdelay_value > 0
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\LAPS"
        $registryValueName = "PostAuthenticationResetDelay"
        $type = "DWORD"
        $desiredValue = {{ win19cis_laps_postauthenticationresetdelay_value }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_9_25_7_results.stdout'
      register: rule_18_9_25_7_results

    - name: "18.9.25.7 | AUDIT | Ensure 'Grace period (hours)' is set to 'Enabled: 8 or fewer hours, but not 0'. | Warning Check For Variable Standards."
      when:
        - win19cis_laps_postauthenticationresetdelay_value > 8
        - win19cis_laps_postauthenticationresetdelay_value == 0
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid Post Authentication Reset Delay value (hours) for win19cis_laps_postauthenticationresetdelay_value. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "18.9.25.7 | AUDIT | Ensure 'Grace period (hours)' is set to 'Enabled: 8 or fewer hours, but not 0'. | Set Warn Count."
      vars:
        warn_control_id: '18.9.25.7'
      when:
        - win19cis_laps_postauthenticationresetdelay_value > 8
        - win19cis_laps_postauthenticationresetdelay_value == 0
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.9.25.8 | GPO | Ensure Post-authentication actions: Actions is set to Enabled: Reset the password and logoff the managed account or higher"
  when: win19cis_rule_18_9_25_8
  tags:
    - level1-memberserver
    - rule_18.9.25.8
    - patch
    - laps
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_IA-5_1
    - NIST800-53R5_IA-5_1
  block:
    - name: "18.9.25.8 | GPO | Ensure 'Actions' is set to 'Enabled: Reset password and logoff managed account or higher'. | Set Registry"
      when:
        - "'(Skipped)' not in item"
        - win19cis_laps_postauthenticationactions_value == 3
        - win19cis_laps_postauthenticationactions_value == 5
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\LAPS"
        $registryValueName = "PostAuthenticationActions"
        $type = "DWORD"
        $desiredValue = {{ win19cis_laps_postauthenticationactions_value }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_9_25_8_results.stdout'
      register: rule_18_9_25_8_results

    - name: "18.9.25.8 | AUDIT | Ensure 'Actions' is set to 'Enabled: Reset password and logoff managed account or higher'. | Warning Check For Variable Standards."
      when:
        - win19cis_laps_postauthenticationactions_value != 3
        - win19cis_laps_postauthenticationactions_value != 5
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid setting for win19cis_laps_postauthenticationactions_value. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "18.9.25.8 | AUDIT | Ensure 'Actions' is set to 'Enabled: Reset password and logoff managed account or higher'. | Set Warn Count."
      vars:
        warn_control_id: '18.9.25.8'
      when:
        - win19cis_laps_postauthenticationactions_value != 3
        - win19cis_laps_postauthenticationactions_value != 5
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.9.27.1 | GPO | Ensure Disallow copying of user input methods to the system account for sign-in is set to Enabled"
  when:
    - win19cis_rule_18_9_27_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.27.1
    - patch
    - gpo
    - NIST800-171_3.4.2
    - NIST800-53_CM-6b.
    - NIST800-53R5_CM-6b.
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Control Panel\International"
    $registryValueName = "BlockUserInputMethodsForSignIn"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_27_1_results.stdout'
  register: rule_18_9_27_1_results

- name: "18.9.28.1 | GPO | Ensure Block user from showing account details on sign-in is set to Enabled"
  when:
    - win19cis_rule_18_9_28_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.28.1
    - patch
    - accounts
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-171_3.13.1
    - NIST800-171_3.13.2
    - NIST800-53_CM-1
    - NIST800-53_CM-2
    - NIST800-53_AC-2
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53_CM-7_1
    - NIST800-53_CM-9
    - NIST800-53_SA-3
    - NIST800-53_SA-8
    - NIST800-53_SA-10
    - NIST800-53R5_CM-1
    - NIST800-53R5_CM-2
    - NIST800-53R5_AC-2
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
    - NIST800-53R5_CM-7_1
    - NIST800-53R5_CM-9
    - NIST800-53R5_SA-3
    - NIST800-53R5_SA-8
    - NIST800-53R5_SA-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\System"
    $registryValueName = "BlockUserFromShowingAccountDetailsOnSignin"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_28_1_results.stdout'
  register: rule_18_9_28_1_results

- name: "18.9.28.2 | GPO | Ensure Do not display network selection UI is set to Enabled"
  when:
    - win19cis_rule_18_9_28_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.28.2
    - patch
    - gpo
    - NIST800-171_3.1.7
    - NIST800-53_AC-6_10
    - NIST800-53R5_AC-6_10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\System"
    $registryValueName = "DontDisplayNetworkSelectionUI"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_28_2_results.stdout'
  register: rule_18_9_28_2_results

- name: "18.9.28.3 | GPO | Ensure Do not enumerate connected users on domain-joined computers is set to Enabled"
  when:
    - win19cis_rule_18_9_28_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.28.3
    - patch
    - enumerate
    - gpo
    - NIST800-171_3.1.7
    - NIST800-53_AC-6_10
    - NIST800-53R5_AC-6_10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\System"
    $registryValueName = "DontEnumerateConnectedUsers"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_28_3_results.stdout'
  register: rule_18_9_28_3_results

- name: "18.9.28.4 | GPO | Ensure Enumerate local users on domain-joined computers is set to Disabled MS only | Member Server"
  when:
    - win19cis_rule_18_9_28_4
    - "'(Skipped)' not in item"
  tags:
    - level1-memberserver
    - rule_18.9.28.4
    - patch
    - enumerate
    - gpo
    - NIST800-171_3.1.7
    - NIST800-53_AC-6_10
    - NIST800-53R5_AC-6_10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\System"
    $registryValueName = "EnumerateLocalUsers"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_28_4_results.stdout'
  register: rule_18_9_28_4_results

- name: "18.9.28.5 | GPO | Ensure Turn off app notifications on the lock screen is set to Enabled"
  when:
    - win19cis_rule_18_9_28_5
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.28.5
    - patch
    - notifications
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\System"
    $registryValueName = "DisableLockScreenAppNotifications"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_28_5_results.stdout'
  register: rule_18_9_28_5_results

- name: "18.9.28.6 | GPO | Ensure Turn off picture password sign-in is set to Enabled"
  when:
    - win19cis_rule_18_9_28_6
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.28.6
    - patch
    - logon
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\System"
    $registryValueName = "BlockDomainPicturePassword"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_28_6_results.stdout'
  register: rule_18_9_28_6_results

- name: "18.9.28.7 | GPO | Ensure Turn on convenience PIN sign-in is set to Disabled"
  when:
    - win19cis_rule_18_9_28_7
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.28.7
    - patch
    - pin
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\System"
    $registryValueName = "AllowDomainPINLogon"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_28_7_results.stdout'
  register: rule_18_9_28_7_results

- name: "18.9.31.1 | GPO | Ensure Allow Clipboard synchronization across devices is set to Disabled"
  when:
    - win19cis_rule_18_9_31_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.31.1
    - patch
    - clipboard
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\System"
    $registryValueName = "AllowCrossDeviceClipboard"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_31_1_results.stdout'
  register: rule_18_9_31_1_results

- name: "18.9.31.2 | GPO | Ensure Allow upload of User Activities is set to Disabled"
  when:
    - win19cis_rule_18_9_31_2
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.31.2
    - patch
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\System"
    $registryValueName = "UploadUserActivities"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_31_2_results.stdout'
  register: rule_18_9_31_2_results

- name: "18.9.33.6.1 | GPO | Ensure Allow network connectivity during connected-standby on battery is set to Disabled"
  when:
    - win19cis_rule_18_9_33_6_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.33.6.1
    - patch
    - power
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Power\PowerSettings\f15576e8-98b7-4186-b944-eafa664402d9"
    $registryValueName = "DCSettingIndex"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_33_6_1_results.stdout'
  register: rule_18_9_33_6_1_results

- name: "18.9.33.6.2 | GPO | Ensure Allow network connectivity during connected-standby plugged in is set to Disabled"
  when:
    - win19cis_rule_18_9_33_6_2
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.33.6.2
    - patch
    - power
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Power\PowerSettings\f15576e8-98b7-4186-b944-eafa664402d9"
    $registryValueName = "ACSettingIndex"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_33_6_2_results.stdout'
  register: rule_18_9_33_6_2_results

- name: "18.9.33.6.3 | GPO | Ensure Require a password when a computer wakes on battery is set to Enabled"
  when:
    - win19cis_rule_18_9_33_6_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.33.6.3
    - patch
    - power
    - logon
    - gpo
    - NIST800-171_3.1.10
    - NIST800-53_AC-11
    - NIST800-53R5_AC-11
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Power\PowerSettings\0e796bdb-100d-47d6-a2d5-f7d2daa51f51"
    $registryValueName = "DCSettingIndex"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_33_6_3_results.stdout'
  register: rule_18_9_33_6_3_results

- name: "18.9.33.6.4 | GPO | Ensure Require a password when a computer wakes plugged in is set to Enabled"
  when:
    - win19cis_rule_18_9_33_6_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.33.6.4
    - patch
    - logon
    - gpo
    - NIST800-171_3.1.10
    - NIST800-53_AC-11
    - NIST800-53R5_AC-11
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Power\PowerSettings\0e796bdb-100d-47d6-a2d5-f7d2daa51f51"
    $registryValueName = "ACSettingIndex"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_33_6_4_results.stdout'
  register: rule_18_9_33_6_4_results

- name: "18.9.35.1 | GPO | Ensure Configure Offer Remote Assistance is set to Disabled"
  when:
    - win19cis_rule_18_9_35_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.35.1
    - patch
    - cora
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
    $registryValueName = "fAllowUnsolicited"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_35_1_results.stdout'
  register: rule_18_9_35_1_results

- name: "18.9.35.2 | GPO | Ensure Configure Solicited Remote Assistance is set to Disabled"
  when:
    - win19cis_rule_18_9_35_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.35.2
    - patch
    - csra
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
    $registryValueName = "fAllowToGetHelp"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_35_2_results.stdout'
  register: rule_18_9_35_2_results

- name: "18.9.36.1 | GPO | Ensure Enable RPC Endpoint Mapper Client Authentication is set to Enabled MS only | Member Server"
  when:
    - win19cis_rule_18_9_36_1
    - "'(Skipped)' not in item"
  tags:
    - level1-memberserver
    - rule_18.9.36.1
    - patch
    - rpc
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Rpc"
    $registryValueName = "EnableAuthEpResolution"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_36_1_results.stdout'
  register: rule_18_9_36_1_results

- name: "18.9.36.2 | GPO | Ensure Restrict Unauthenticated RPC clients is set to Enabled Authenticated MS only | Member Server"
  when:
    - win19cis_rule_18_9_36_2
    - "'(Skipped)' not in item"
  tags:
    - level2-memberserver
    - rule_18.9.36.2
    - patch
    - rpc
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Rpc"
    $registryValueName = "RestrictRemoteClients"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_36_2_results.stdout'
  register: rule_18_9_36_2_results

- name: "18.9.47.5.1 | GPO | Ensure Microsoft Support Diagnostic Tool Turn on MSDT interactive communication with support provider is set to Disabled"
  when:
    - win19cis_rule_18_9_47_5_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.47.5.1
    - patch
    - msdt
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\ScriptedDiagnosticsProvider\Policy"
    $registryValueName = "DisableQueryRemoteServer"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_47_5_1_results.stdout'
  register: rule_18_9_47_5_1_results

- name: "18.9.47.11.1 | GPO | Ensure EnableDisable PerfTrack is set to Disabled"
  when:
    - win19cis_rule_18_9_47_11_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.47.11.1
    - patch
    - pertrack
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Wdi\{9C5A40DA-B965-4FC3-8781-88DD50A6299D}"
    $registryValueName = "ScenarioExecutionEnabled"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_47_11_1_results.stdout'
  register: rule_18_9_47_11_1_results

- name: "18.9.49.1 | GPO | Ensure Turn off the advertising ID is set to Enabled"
  when:
    - win19cis_rule_18_9_49_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.9.49.1
    - patch
    - advertising
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo"
    $registryValueName = "DisabledByGroupPolicy"
    $type = "DWORD"
    $desiredValue = 1

    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    if ($currentValue -ne $desiredValue) {
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_49_1_results.stdout'
  register: rule_18_9_49_1_results

- name: "18.9.51.1.1 | GPO | Ensure Enable Windows NTP Client is set to Enabled"
  when:
    - win19cis_rule_18_9_51_1_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.9.51.1.1
    - patch
    - ntp
    - gpo
    - NIST800-171_3.3.6
    - NIST800-171_3.3.7
    - NIST800-53_AU-7
    - NIST800-53_AU-8
    - NIST800-53R5_AU-7
    - NIST800-53R5_AU-8
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\W32Time\TimeProviders\NtpClient"
    $registryValueName = "Enabled"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_51_1_1_results.stdout'
  register: rule_18_9_51_1_1_results

- name: "18.9.51.1.2 | GPO | Ensure Enable Windows NTP Server is set to Disabled MS only | Member Server"
  when:
    - win19cis_rule_18_9_51_1_2
    - "'(Skipped)' not in item"
  tags:
    - level1-memberserver
    - rule_18.9.51.1.2
    - patch
    - ntp
    - gpo
    - NIST800-171_3.3.6
    - NIST800-171_3.3.7
    - NIST800-53_AU-7
    - NIST800-53_AU-8
    - NIST800-53R5_AU-7
    - NIST800-53R5_AU-8
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\W32Time\TimeProviders\NtpServer"
    $registryValueName = "Enabled"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_9_51_1_2_results.stdout'
  register: rule_18_9_51_1_2_results

- name: "18.10.3.1 | GPO | Ensure Allow a Windows app to share application data between users is set to Disabled"
  when:
    - win19cis_rule_18_10_3_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.3.1
    - patch
    - data
    - gpo
    - NIST800-171_3.3.1
    - NIST800-53_AC-3
    - NIST800-53R5_AC-3
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\AppModel\StateManager"
    $registryValueName = "AllowSharedLocalAppData"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_3_1_results.stdout'
  register: rule_18_10_3_1_results

- name: "18.10.5.1 | GPO | Ensure Allow Microsoft accounts to be optional is set to Enabled"
  when:
    - win19cis_rule_18_10_5_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.5.1
    - patch
    - accounts
    - gpo
    - NIST800-171_3.3.1
    - NIST800-53_AC-2_1
    - NIST800-53R5_AC-2_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
    $registryValueName = "MSAOptional"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_5_1_results.stdout'
  register: rule_18_10_5_1_results

- name: "18.10.7.1 | GPO | Ensure Disallow Autoplay for non-volume devices is set to Enabled"
  when:
    - win19cis_rule_18_10_7_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.7.1
    - patch
    - autoplay
    - gpo
    - NIST800-171_3.8.7
    - NIST800-53_MP-7
    - NIST800-53R5_MP-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Explorer"
    $registryValueName = "NoAutoplayfornonVolume"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_7_1_results.stdout'
  register: rule_18_10_7_1_results

- name: "18.10.7.2 | GPO | Ensure Set the default behavior for AutoRun is set to Enabled Do not execute any autorun commands"
  when:
    - win19cis_rule_18_10_7_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.7.2
    - patch
    - autorun
    - gpo
    - NIST800-171_3.8.7
    - NIST800-53_MP-7
    - NIST800-53R5_MP-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
    $registryValueName = "NoAutorun"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_7_2_results.stdout'
  register: rule_18_10_7_2_results

- name: "18.10.7.3 | GPO | Ensure Turn off Autoplay is set to Enabled All drives"
  when:
    - win19cis_rule_18_10_7_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.7.3
    - patch
    - autoplay
    - gpo
    - NIST800-171_3.8.7
    - NIST800-53_MP-7
    - NIST800-53R5_MP-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
    $registryValueName = "NoDriveTypeAutoRun"
    $type = "DWORD"
    $desiredValue = 255

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_7_3_results.stdout'
  register: rule_18_10_7_3_results

- name: "18.10.8.1.1 | GPO | Ensure Configure enhanced anti-spoofing is set to Enabled"
  when:
    - win19cis_rule_18_10_8_1_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.8.1.1
    - patch
    - antispoofing
    - gpo
    - NIST800-171_3.4.2
    - NIST800-53_CM-6b.
    - NIST800-53R5_CM-6b.
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Biometrics\FacialFeatures"
    $registryValueName = "EnhancedAntiSpoofing"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_8_1_1_results.stdout'
  register: rule_18_10_8_1_1_results

- name: "18.10.10.1 | GPO | Ensure Allow Use of Camera is set to Disabled"
  when:
    - win19cis_rule_18_10_10_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.10.1
    - patch
    - camera
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Camera"
    $registryValueName = "AllowCamera"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_10_1_results.stdout'
  register: rule_18_10_10_1_results

- name: "18.10.12.1 | GPO | Ensure Turn off cloud consumer account state content is set to Enabled"
  when:
    - win19cis_rule_18_10_12_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.12.1
    - patch
    - cloud
    - gpo
    - NIST800-171_3.1.1
    - NIST800-53_AC-2_1
    - NIST800-53R5_AC-2_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\CloudContent"
    $registryValueName = "DisableConsumerAccountStateContent"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_12_1_results.stdout'
  register: rule_18_10_12_1_results

- name: "18.10.12.2 | GPO | Ensure Turn off Microsoft consumer experiences is set to Enabled"
  when:
    - win19cis_rule_18_10_12_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.12.2
    - patch
    - cloud
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\CloudContent"
    $registryValueName = "DisableWindowsConsumerFeatures"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_12_2_results.stdout'
  register: rule_18_10_12_2_results

- name: "18.10.13.1 | GPO | Ensure Require pin for pairing is set to Enabled First Time OR Enabled Always"
  when: win19cis_rule_18_10_13_1
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.13.1
    - automated
    - patch
    - pin
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_IA-5c.
    - NIST800-53R5_IA-5c.
  block:
    - name: "18.10.13.1 | GPO | Ensure 'Require pin for pairing' is set to 'Enabled: First Time' or 'Enabled: Always'. | Set Variable."
      when:
        - "'(Skipped)' not in item"
        - win19cis_require_pin_for_pairing == 1 or win19cis_require_pin_for_pairing == 2
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Connect"
        $registryValueName = "RequirePinForPairing"
        $type = "DWORD"
        $desiredValue = {{ win19cis_require_pin_for_pairing }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_10_13_1_results.stdout'
      register: rule_18_10_13_1_results

    - name: "18.10.13.1 | AUDIT | Ensure 'Require pin for pairing' is set to 'Enabled: First Time' or 'Enabled: Always'. | Warning Check For Variable Standards."
      when:
        - win19cis_require_pin_for_pairing != 1
        - win19cis_require_pin_for_pairing != 2
      ansible.builtin.debug:
        msg:
          - "Warning! The setting for win19cis_require_pin_for_pairing is invalid. Please review"
          - "the configuration notes for this variable to ensure compliance with the required settings."

    - name: "18.10.13.1 | AUDIT | Ensure Require pin for pairing is set to Enabled First Time OR Enabled Always | Warn Count."
      vars:
        warn_control_id: '18.10.13.1'
      when:
        - win19cis_require_pin_for_pairing != 1
        - win19cis_require_pin_for_pairing != 2
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.10.14.1 | GPO | Ensure Do not display the password reveal button is set to Enabled"
  when:
    - win19cis_rule_18_10_14_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.14.1
    - patch
    - gui
    - gpo
    - NIST800-171_3.5.2
    - NIST800-53_IA-5_1
    - NIST800-53R5_IA-5_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\CredUI"
    $registryValueName = "DisablePasswordReveal"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_14_1_results.stdout'
  register: rule_18_10_14_1_results

- name: "18.10.14.2 | GPO | Ensure Enumerate administrator accounts on elevation is set to Disabled"
  when:
    - win19cis_rule_18_10_14_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.14.2
    - patch
    - accounts
    - gpo
    - NIST800-171_3.1.7
    - NIST800-53_AC-6_10
    - NIST800-53R5_AC-6_10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\CredUI"
    $registryValueName = "EnumerateAdministrators"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_14_2_results.stdout'
  register: rule_18_10_14_2_results

- name: "18.10.15.1 | GPO | Ensure Allow Diagnostic Data is set to Enabled: Diagnostic data off (not recommended) or Enabled: Send required diagnostic data"
  when: win19cis_rule_18_10_15_1
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.15.1
    - automated
    - patch
    - diagnostics
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  block:
    - name: "18.10.15.1 | GPO | Ensure 'Allow Diagnostic Data' is set to 'Enabled: Diagnostic data off (not recommended)' or 'Enabled: Send required diagnostic data'. | Set Variable."
      when:
        - "'(Skipped)' not in item"
        - win19cis_allow_telemetry == 0 or win19cis_allow_telemetry == 1
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\DataCollection"
        $registryValueName = "AllowTelemetry"
        $type = "DWORD"
        $desiredValue = {{ win19cis_allow_telemetry }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_10_15_1_results.stdout'
      register: rule_18_10_15_1_results

    - name: "18.10.15.1 | AUDIT | Ensure 'Allow Diagnostic Data' is set to 'Enabled: Diagnostic data off (not recommended)' or 'Enabled: Send required diagnostic data'. | Warning Check For Variable Standards."
      when:
        - win19cis_allow_telemetry != 0
        - win19cis_allow_telemetry != 1
      ansible.builtin.debug:
        msg:
          - "Warning! The setting for win19cis_allow_telemetry is invalid. Please review"
          - "the configuration notes for this variable to ensure compliance with the required settings."

    - name: "18.10.15.1 | AUDIT | Ensure Allow Diagnostic Data is set to Enabled: Diagnostic data off (not recommended) or Enabled: Send required diagnostic data | Warn Count."
      vars:
        warn_control_id: '18.10.15.1'
      when:
        - win19cis_allow_telemetry != 0
        - win19cis_allow_telemetry != 1
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.10.15.2 | GPO | Ensure Configure Authenticated Proxy usage for the Connected User Experience and Telemetry service is set to Enabled Disable Authenticated Proxy usage"
  when:
    - win19cis_rule_18_10_15_2
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.15.2
    - patch
    - datacollection
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\DataCollection"
    $registryValueName = "DisableEnterpriseAuthProxy"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_15_2_results.stdout'
  register: rule_18_10_15_2_results

- name: "18.10.15.3 | GPO | Ensure Disable OneSettings Downloads is set to Enabled"
  when:
    - win19cis_rule_18_10_15_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.15.3
    - patch
    - onesettings
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\DataCollection"
    $registryValueName = "DisableOneSettingsDownloads"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_15_3_results.stdout'
  register: rule_18_10_15_3_results

- name: "18.10.15.4 | GPO | Ensure Do not show feedback notifications is set to Enabled"
  when:
    - win19cis_rule_18_10_15_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.15.4
    - patch
    - datacollection
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\DataCollection"
    $registryValueName = "DoNotShowFeedbackNotifications"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_15_4_results.stdout'
  register: rule_18_10_15_4_results

- name: "18.10.15.5 | GPO | Ensure Enable OneSettings Auditing' is set to Enabled"
  when:
    - win19cis_rule_18_10_15_5
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.15.5
    - patch
    - datacollection
    - gpo
    - NIST800-171_3.3.1
    - NIST800-171_3.3.2
    - NIST800-171_3.3.6
    - NIST800-53_AU-3
    - NIST800-53_AU-3_1
    - NIST800-53_AU-7
    - NIST800-53_AU-12
    - NIST800-53R5_AU-3
    - NIST800-53R5_AU-3_1
    - NIST800-53R5_AU-7
    - NIST800-53R5_AU-12
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\DataCollection"
    $registryValueName = "EnableOneSettingsAuditing"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_15_5_results.stdout'
  register: rule_18_10_15_5_results

- name: "18.10.15.6 | GPO | Ensure Limit Diagnostic Log Collection is set to Enabled"
  when:
    - win19cis_rule_18_10_15_6
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.15.6
    - patch
    - datacollection
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\DataCollection"
    $registryValueName = "LimitDiagnosticLogCollection"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_15_6_results.stdout'
  register: rule_18_10_15_6_results

- name: "18.10.15.7 | GPO | Ensure Limit Dump Collection is set to Enabled"
  when:
    - win19cis_rule_18_10_15_7
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.15.7
    - patch
    - datacollection
    - gpo
    - NIST800-171_3.3.1
    - NIST800-171_3.3.2
    - NIST800-53_AU-2
    - NIST800-53R5_AU-2
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\DataCollection"
    $registryValueName = "LimitDumpCollection"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_15_7_results.stdout'
  register: rule_18_10_15_7_results

- name: "18.10.15.8 | GPO | Ensure Toggle user control over Insider builds is set to Disabled"
  when:
    - win19cis_rule_18_10_15_8
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.15.8
    - patch
    - previewbuilds
    - gpo
    - NIST800-171_3.4.1
    - NIST800-171_3.4.7
    - NIST800-171_3.4.9
    - NIST800-53_CM-7_2
    - NIST800-53_CM-8_3
    - NIST800-53_CM-10
    - NIST800-53_CM-11
    - NIST800-53R5_CM-7_2
    - NIST800-53R5_CM-8_3
    - NIST800-53R5_CM-10
    - NIST800-53R5_CM-11
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\PreviewBuilds"
    $registryValueName = "AllowBuildPreview"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_15_8_results.stdout'
  register: rule_18_10_15_8_results

- name: "18.10.17.1 | GPO | Ensure Enable App Installer is set to Disabled"
  when:
    - win19cis_rule_18_10_17_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.17.1
    - patch
    - appinstaller
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\AppInstaller"
    $registryValueName = "EnableAppInstaller"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_17_1_results.stdout'
  register: rule_18_10_17_1_results

- name: "18.10.17.2 | GPO | Ensure Enable App Installer Experimental Features is set to Disabled"
  when:
    - win19cis_rule_18_10_17_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.17.2
    - patch
    - appinstaller
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\AppInstaller"
    $registryValueName = "EnableExperimentalFeatures"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_17_2_results.stdout'
  register: rule_18_10_17_2_results

- name: "18.10.17.3 | GPO | Ensure Enable App Installer Hash Override is set to Disabled"
  when:
    - win19cis_rule_18_10_17_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.17.3
    - patch
    - appinstaller
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\AppInstaller"
    $registryValueName = "EnableHashOverride"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_17_3_results.stdout'
  register: rule_18_10_17_3_results

- name: "18.10.17.4 | GPO | Ensure Enable App Installer ms-appinstaller protocol is set to Disabled"
  when:
    - win19cis_rule_18_10_17_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.17.4
    - patch
    - appinstaller
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\AppInstaller"
    $registryValueName = "EnableMSAppInstallerProtocol"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_17_4_results.stdout'
  register: rule_18_10_17_4_results

- name: "18.10.25.1.1 | GPO | Ensure Application Control Event Log behavior when the log file reaches its maximum size is set to Disabled"
  when:
    - win19cis_rule_18_10_25_1_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.25.1.1
    - patch
    - eventlog
    - gpo
    - NIST800-53_AU-4
    - NIST800-53R5_AU-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\EventLog\Application"
    $registryValueName = "Retention"
    $type = "String"
    $desiredValue = "0"

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_25_1_1_results.stdout'
  register: rule_18_10_25_1_1_results

- name: "18.10.25.1.2 | GPO | Ensure Application Specify the maximum log file size KB is set to Enabled 32768 or greater"
  when: win19cis_rule_18_10_25_1_2
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.25.1.2
    - patch
    - eventlog
    - gpo
    - NIST800-53_AU-4
    - NIST800-53R5_AU-4
  block:
    - name: "18.10.25.1.2 | GPO | Ensure Application Specify the maximum log file size KB is set to Enabled 32768 or greater | Set 'Application Log' Maximum Log File Size to 32768 KB or greater."
      when:
        - win19cis_application_max_log_file_size >= 32768
        - "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Eventlog\Application"
        $registryValueName = "MaxSize"
        $type = "DWORD"
        $desiredValue = {{ win19cis_application_max_log_file_size }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_10_25_1_2_results.stdout'
      register: rule_18_10_25_1_2_results

    - name: "18.10.25.1.2 | AUDIT | Ensure Application Specify the maximum log file size KB is set to Enabled 32768 or greater | Warning Check for Application Log File Size Standards."
      when: win19cis_application_max_log_file_size < 32768
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid file size set for win19cis_application_max_log_file_size please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "18.10.25.1.2 | AUDIT | Ensure Application Specify the maximum log file size KB is set to Enabled 32768 or greater | Application Log File Size Warn Count."
      vars:
        warn_control_id: '18.10.25.1.2'
      when: win19cis_application_max_log_file_size < 32768
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.10.25.2.1 | GPO | Ensure Security Control Event Log behavior when the log file reaches its maximum size is set to Disabled"
  when:
    - win19cis_rule_18_10_25_2_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.25.2.1
    - patch
    - eventlog
    - gpo
    - NIST800-53_AU-4
    - NIST800-53R5_AU-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\EventLog\Security"
    $registryValueName = "Retention"
    $type = "String"
    $desiredValue = "0"

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_25_2_1_results.stdout'
  register: rule_18_10_25_2_1_results

- name: "18.10.25.2.2 | GPO | Ensure Security Specify the maximum log file size KB is set to Enabled 196608 or greater"
  when:
    - win19cis_rule_18_10_25_2_2
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.25.2.2
    - patch
    - eventlog
    - gpo
    - NIST800-53_AU-4
    - NIST800-53R5_AU-4
  block:
    - name: "18.10.25.2.2 | GPO | Ensure Security Specify the maximum log file size KB is set to Enabled 196608 or greater | Set 'Security Log' Maximum Log File Size to 196608 KB or greater."
      when:
        - win19cis_security_max_log_file_size >= 196608
        - "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Eventlog\Security"
        $registryValueName = "MaxSize"
        $type = "DWORD"
        $desiredValue = {{ win19cis_security_max_log_file_size }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_10_25_2_2_results.stdout'
      register: rule_18_10_25_2_2_results

    - name: "18.10.25.2.2 | AUDIT | Ensure Security Specify the maximum log file size KB is set to Enabled 196608 or greater | Warning Check for Security Log File Size Standards."
      when: win19cis_security_max_log_file_size < 196608
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid file size set for win19cis_security_max_log_file_size please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "18.10.25.2.2 | AUDIT | Ensure Security Specify the maximum log file size KB is set to Enabled 196608 or greater | Security Log File Size Warn Count."
      vars:
        warn_control_id: '18.10.25.2.2'
      when: win19cis_security_max_log_file_size < 196608
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.10.25.3.1 | GPO | Ensure Setup Control Event Log behavior when the log file reaches its maximum size is set to Disabled"
  when:
    - win19cis_rule_18_10_25_3_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.25.3.1
    - patch
    - eventlog
    - gpo
    - NIST800-53_AU-4
    - NIST800-53R5_AU-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\EventLog\Setup"
    $registryValueName = "Retention"
    $type = "String"
    $desiredValue = "0"

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_25_3_1_results.stdout'
  register: rule_18_10_25_3_1_results

- name: "18.10.25.3.2 | GPO | Ensure Setup Specify the maximum log file size KB is set to Enabled 32768 or greater"
  when:
    - win19cis_rule_18_10_25_3_2
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.25.3.2
    - patch
    - eventlog
    - gpo
    - NIST800-53_AU-4
    - NIST800-53R5_AU-4
  block:
    - name: "18.10.25.3.2 | GPO | Ensure Setup Specify the maximum log file size KB is set to Enabled 32768 or greater | Set 'Setup Log' Maximum Log File Size to 32768 KB or greater."
      when:
        - win19cis_setup_max_log_file_size >= 32768
        - "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Eventlog\Setup"
        $registryValueName = "MaxSize"
        $type = "DWORD"
        $desiredValue = {{ win19cis_setup_max_log_file_size }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_10_25_3_2_results.stdout'
      register: rule_18_10_25_3_2_results

    - name: "18.10.25.3.2 | AUDIT | Ensure Setup Specify the maximum log file size KB is set to Enabled 32768 or greater | Warning Check for Setup Log File Size Standards."
      when: win19cis_setup_max_log_file_size < 32768
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid file size set for win19cis_setup_max_log_file_size please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "18.10.25.3.2 | AUDIT | Ensure Setup Specify the maximum log file size KB is set to Enabled 32768 or greater | Setup Log File Size Warn Count."
      vars:
        warn_control_id: '18.10.25.3.2'
      when: win19cis_setup_max_log_file_size < 32768
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.10.25.4.1 | GPO | Ensure System Control Event Log behavior when the log file reaches its maximum size is set to Disabled"
  when:
    - win19cis_rule_18_10_25_4_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.25.4.1
    - patch
    - eventlog
    - gpo
    - NIST800-53_AU-4
    - NIST800-53R5_AU-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\EventLog\System"
    $registryValueName = "Retention"
    $type = "String"
    $desiredValue = "0"

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_25_4_1_results.stdout'
  register: rule_18_10_25_4_1_results

- name: "18.10.25.4.2 | GPO | Ensure System Specify the maximum log file size KB is set to Enabled 32768 or greater"
  when: win19cis_rule_18_10_25_4_2
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.25.4.2
    - patch
    - eventlog
    - gpo
    - NIST800-53_AU-4
    - NIST800-53R5_AU-4
  block:
    - name: "18.10.25.4.2 | GPO | Ensure System Specify the maximum log file size KB is set to Enabled 32768 or greater | Set 'System Log' Maximum Log File Size to 32768 KB or greater."
      when:
        - win19cis_system_max_log_file_size >= 32768
        - "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Eventlog\System"
        $registryValueName = "MaxSize"
        $type = "DWORD"
        $desiredValue = {{ win19cis_system_max_log_file_size }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_10_25_4_2_results.stdout'
      register: rule_18_10_25_4_2_results

    - name: "18.10.25.4.2 | AUDIT | Ensure System Specify the maximum log file size KB is set to Enabled 32768 or greater | Warning Check for System Log File Size Standards."
      when: win19cis_system_max_log_file_size < 32768
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid file size set for win19cis_system_max_log_file_size. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "18.10.25.4.2 | AUDIT | Ensure System Specify the maximum log file size KB is set to Enabled 32768 or greater | System Log File Size Warn Count."
      vars:
        warn_control_id: '18.10.25.4.2'
      when: win19cis_system_max_log_file_size < 32768
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.10.28.2 | GPO | Ensure Turn off Data Execution Prevention for Explorer is set to Disabled"
  when:
    - win19cis_rule_18_10_28_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.28.2
    - patch
    - dep
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Explorer"
    $registryValueName = "NoDataExecutionPrevention"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_28_2_results.stdout'
  register: rule_18_10_28_2_results

- name: "18.10.28.3 | GPO | Ensure Turn off heap termination on corruption is set to Disabled"
  when:
    - win19cis_rule_18_10_28_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.28.3
    - patch
    - heap
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Explorer"
    $registryValueName = "NoHeapTerminationOnCorruption"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_28_3_results.stdout'
  register: rule_18_10_28_3_results

- name: "18.10.28.4 | GPO | Ensure Turn off shell protocol protected mode is set to Disabled"
  when:
    - win19cis_rule_18_10_28_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.28.4
    - patch
    - shell
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
    $registryValueName = "PreXPSP2ShellProtocolBehavior"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_28_4_results.stdout'
  register: rule_18_10_28_4_results

- name: "18.10.36.1 | GPO | Ensure Turn off location is set to Enabled"
  when:
    - win19cis_rule_18_10_36_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.36.1
    - patch
    - location
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\LocationAndSensors"
    $registryValueName = "DisableLocation"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_36_1_results.stdout'
  register: rule_18_10_36_1_results

- name: "18.10.40.1 | GPO | Ensure Allow Message Service Cloud Sync is set to Disabled"
  when:
    - win19cis_rule_18_10_40_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.40.1
    - patch
    - msc
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Messaging"
    $registryValueName = "AllowMessageSync"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_40_1_results.stdout'
  register: rule_18_10_40_1_results

- name: "18.10.41.1 | GPO | Ensure Block all consumer Microsoft account user authentication is set to Enabled"
  when:
    - win19cis_rule_18_10_41_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.41.1
    - patch
    - account
    - gpo
    - NIST800-171_3.1.1
    - NIST800-53_AC-2_1
    - NIST800-53R5_AC-2_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\MicrosoftAccount"
    $registryValueName = "DisableUserAuth"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_41_1_results.stdout'
  register: rule_18_10_41_1_results

- name: "18.10.42.5.1 | GPO | Ensure Configure local setting override for reporting to Microsoft MAPS is set to Disabled"
  when:
    - win19cis_rule_18_10_42_5_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.42.5.1
    - patch
    - maps
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet"
    $registryValueName = "LocalSettingOverrideSpynetReporting"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_42_5_1_results.stdout'
  register: rule_18_10_42_5_1_results

- name: "18.10.42.5.2 | GPO | Ensure Join Microsoft MAPS is set to Disabled"
  when:
    - win19cis_rule_18_10_42_5_2
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.42.5.2
    - patch
    - maps
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender\Spynet"
    $registryValueName = "SpynetReporting"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_42_5_2_results.stdout'
  register: rule_18_10_42_5_2_results

- name: "18.10.42.6.1.1 | GPO | Ensure Configure Attack Surface Reduction rules is set to Enabled"
  when:
    - win19cis_rule_18_10_42_6_1_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.42.6.1.1
    - patch
    - defender
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\ASR"
    $registryValueName = "ExploitGuard_ASR_Rules"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_42_6_1_1_results.stdout'
  register: rule_18_10_42_6_1_1_results

- name: "18.10.42.6.1.2 | GPO | Ensure Configure Attack Surface Reduction rules Set the state for each ASR rule is configured"
  when:
    - win19cis_rule_18_10_42_6_1_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.42.6.1.2
    - patch
    - defender
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\ASR\Rules"
    $registryValueNames = @(
        "26190899-1602-49e8-8b27-eb1d0a1ce869",
        "3b576869-a4ec-4529-8536-b80a7769e899",
        "56a863a9-875e-4185-98a7-b882c64b5ce5",
        "5beb7efe-fd9a-4556-801d-275e5ffc04cc",
        "75668c1f-73b5-4cf0-bb93-3ecf5cb7cc84",
        "7674ba52-37eb-4a4f-a9a1-f0f9a1619a2c",
        "92e97fa1-2edf-4476-bdd6-9dd0b4dddc7b",
        "9e6c4e1f-7d60-472f-ba1a-a39ef669e4b2",
        "b2b3f03d-6a65-4f7b-a9c7-1c7ef74a9ba4",
        "be9ba2d9-53ea-4cdc-84e5-9b1eeee46550",
        "d3e037e1-3eb8-44c8-a917-57927947596d",
        "d4f940ab-401b-4efc-aadc-ad5f3c50688a",
        "e6db77e5-3df2-4cf1-b95a-636979351e5b"
    )
    $type = "String"
    $desiredValue = "1"

    foreach ($registryValueName in $registryValueNames) {
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        if ($currentValue -ne $desiredValue) {
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched $registryValueName"
        } else {
            Write-Output "No Change Needed for $registryValueName"
        }
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_42_6_1_2_results.stdout'
  register: rule_18_10_42_6_1_2_results

- name: "18.10.42.6.3.1 | GPO | Ensure Prevent users and apps from accessing dangerous websites is set to Enabled Block"
  when:
    - win19cis_rule_18_10_42_6_3_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.42.6.3.1
    - patch
    - defender
    - network_protection
    - gpo
    - NIST800-171_3.13.1
    - NIST800-53_SC-7_3
    - NIST800-53_SC-7_4
    - NIST800-53_SI-16
    - NIST800-53R5_SC-7_3
    - NIST800-53R5_SC-7_4
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender\Windows Defender Exploit Guard\Network Protection"
    $registryValueName = "EnableNetworkProtection"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_42_6_3_1_results.stdout'
  register: rule_18_10_42_6_3_1_results

- name: "18.10.42.7.1 | GPO | Ensure Enable file hash computation feature is set to Enabled"
  when:
    - win19cis_rule_18_10_42_7_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.42.7.1
    - patch
    - defender
    - gpo
    - NIST800-171_3.14.2
    - NIST800-171_3.14.4
    - NIST800-171_3.14.5
    - NIST800-53_SI-3
    - NIST800-53R5_SI-3
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender\MpEngine"
    $registryValueName = "EnableFileHashComputation"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_42_7_1_results.stdout'
  register: rule_18_10_42_7_1_results

- name: "18.10.42.10.1 | GPO | Ensure Scan all downloaded files and attachments is set to Enabled"
  when:
    - win19cis_rule_18_10_42_10_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.42.10.1
    - patch
    - defender
    - real_time_protection
    - gpo
    - NIST800-171_3.14.2
    - NIST800-171_3.14.4
    - NIST800-171_3.14.5
    - NIST800-53_SI-3
    - NIST800-53R5_SI-3
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection"
    $registryValueName = "DisableIOAVProtection"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_42_10_1_results.stdout'
  register: rule_18_10_42_10_1_results

- name: "18.10.42.10.2 | GPO | Ensure 'Turn off real-time protection' is set to 'Disabled'"
  when:
    - win19cis_rule_18_10_42_10_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.42.10.2
    - patch
    - defender
    - real_time_protection
    - gpo
    - NIST800-171_3.14.2
    - NIST800-171_3.14.4
    - NIST800-171_3.14.5
    - NIST800-53_SI-3
    - NIST800-53R5_SI-3
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection"
    $registryValueName = "DisableRealtimeMonitoring"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_42_10_2_results.stdout'
  register: rule_18_10_42_10_2_results

- name: "18.10.42.10.3 | GPO | Ensure Turn on behavior monitoring is set to Enabled"
  when:
    - win19cis_rule_18_10_42_10_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.42.10.3
    - patch
    - defender
    - real_time_protection
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection"
    $registryValueName = "DisableBehaviorMonitoring"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_42_10_3_results.stdout'
  register: rule_18_10_42_10_3_results

- name: "18.10.42.10.4 | GPO | Ensure 'Turn on script scanning' is set to 'Enabled'"
  when:
    - win19cis_rule_18_10_42_10_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.42.10.4
    - patch
    - defender
    - real_time_protection
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection"
    $registryValueName = "DisableScriptScanning"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_42_10_4_results.stdout'
  register: rule_18_10_42_10_4_results

- name: "18.10.42.12.1 | GPO | Ensure Configure Watson events is set to Disabled"
  when:
    - win19cis_rule_18_10_42_12_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.42.12.1
    - patch
    - defender
    - gpo
    - NIST800-171_3.12.3
    - NIST800-53_CA-7
    - NIST800-53R5_CA-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender\Reporting"
    $registryValueName = "DisableGenericRePorts"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_42_12_1_results.stdout'
  register: rule_18_10_42_12_1_results

- name: "18.10.42.13.1 | GPO | Ensure Scan packed executables is set to Enabled"
  when:
    - win19cis_rule_18_10_42_13_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.42.13.1
    - patch
    - defender
    - scan
    - gpo
    - NIST800-171_3.8.7
    - NIST800-171_3.14.2
    - NIST800-171_3.14.4
    - NIST800-171_3.14.5
    - NIST800-53_MP-7
    - NIST800-53_SI-3
    - NIST800-53R5_MP-7
    - NIST800-53R5_SI-3
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender\Scan"
    $registryValueName = "DisablePackedExeScanning"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_42_13_1_results.stdout'
  register: rule_18_10_42_13_1_results

- name: "18.10.42.13.2 | GPO | Ensure Scan removable drives is set to Enabled"
  when:
    - win19cis_rule_18_10_42_13_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.42.13.2
    - patch
    - defender
    - scan
    - gpo
    - NIST800-171_3.8.7
    - NIST800-171_3.14.2
    - NIST800-171_3.14.4
    - NIST800-171_3.14.5
    - NIST800-53_MP-7
    - NIST800-53_SI-3
    - NIST800-53R5_MP-7
    - NIST800-53R5_SI-3
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender\Scan"
    $registryValueName = "DisableRemovableDriveScanning"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_42_13_2_results.stdout'
  register: rule_18_10_42_13_2_results

- name: "18.10.42.13.3 | GPO | Ensure Turn on e-mail scanning is set to Enabled"
  when:
    - win19cis_rule_18_10_42_13_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.42.13.3
    - patch
    - defender
    - scan
    - gpo
    - NIST800-171_3.14.2
    - NIST800-171_3.14.4
    - NIST800-171_3.14.5
    - NIST800-53_SI-3
    - NIST800-53R5_SI-3
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender\Scan"
    $registryValueName = "DisableEmailScanning"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_42_13_3_results.stdout'
  register: rule_18_10_42_13_3_results

- name: "18.10.42.16 | GPO | Ensure Configure detection for potentially unwanted applications is set to Enabled: Block"
  when:
    - win19cis_rule_18_10_42_16
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.42.16
    - patch
    - defender
    - scan
    - gpo
    - NIST800-171_3.14.2
    - NIST800-171_3.14.4
    - NIST800-171_3.14.5
    - NIST800-53_SI-3
    - NIST800-53R5_SI-3
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender"
    $registryValueName = "PUAProtection"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_42_16_results.stdout'
  register: rule_18_10_42_16_results

- name: "18.10.42.17 | GPO | Ensure Turn off Microsoft Defender AntiVirus is set to Disabled"
  when:
    - win19cis_rule_18_10_42_17
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.42.17
    - patch
    - defender
    - scan
    - gpo
    - NIST800-171_3.14.2
    - NIST800-171_3.14.4
    - NIST800-171_3.14.5
    - NIST800-53_SI-3
    - NIST800-53R5_SI-3
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender"
    $registryValueName = "DisableAntiSpyware"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_42_17_results.stdout'
  register: rule_18_10_42_17_results

- name: "18.10.50.1 | GPO | Ensure Prevent the usage of OneDrive for file storage is set to Enabled"
  when:
    - win19cis_rule_18_10_50_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.50.1
    - patch
    - onedrive
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\OneDrive"
    $registryValueName = "DisableFileSyncNGSC"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_50_1_results.stdout'
  register: rule_18_10_50_1_results

- name: "18.10.55.1 | GPO | Ensure 'Turn off Push To Install service' is set to 'Enabled'"
  when:
    - win19cis_rule_18_10_55_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.55.1
    - patch
    - pushtoinstall
    - gpo
    - NIST800-171_3.4.8
    - NIST800-53_CM-7_5
    - NIST800-53_CM-10
    - NIST800-53R5_CM-7_5
    - NIST800-53R5_CM-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\PushToInstall"
    $registryValueName = "DisablePushToInstall"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_55_1_results.stdout'
  register: rule_18_10_55_1_results

- name: "18.10.56.2.2 | GPO | Ensure Do not allow passwords to be saved is set to Enabled"
  when:
    - win19cis_rule_18_10_56_2_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.56.2.2
    - patch
    - terminalservices
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
    $registryValueName = "DisablePasswordSaving"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_56_2_2_results.stdout'
  register: rule_18_10_56_2_2_results

- name: "18.10.56.3.2.1 | GPO | Ensure Restrict Remote Desktop Services users to a single Remote Desktop Services session is set to Enabled"
  when:
    - win19cis_rule_18_10_56_3_2_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.56.3.2.1
    - patch
    - terminalservices
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
    $registryValueName = "fSingleSessionPerUser"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_56_3_2_1_results.stdout'
  register: rule_18_10_56_3_2_1_results

- name: "18.10.56.3.3.1 | GPO | Ensure Do not allow COM port redirection is set to Enabled"
  when:
    - win19cis_rule_18_10_56_3_3_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.56.3.3.1
    - patch
    - terminalservices
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
    $registryValueName = "fDisableCcm"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_56_3_3_1_results.stdout'
  register: rule_18_10_56_3_3_1_results

- name: "18.10.56.3.3.2 | GPO | Ensure Do not allow drive redirection is set to Enabled"
  when:
    - win19cis_rule_18_10_56_3_3_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.56.3.3.2
    - patch
    - terminalservices
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
    $registryValueName = "fDisableCdm"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_56_3_3_2_results.stdout'
  register: rule_18_10_56_3_3_2_results

- name: "18.10.56.3.3.3 | GPO | Ensure Do not allow LPT port redirection is set to Enabled"
  when:
    - win19cis_rule_18_10_56_3_3_3
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.56.3.3.3
    - patch
    - terminalservices
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
    $registryValueName = "fDisableLPT"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_56_3_3_3_results.stdout'
  register: rule_18_10_56_3_3_3_results

- name: "18.10.56.3.3.4 | GPO | Ensure Do not allow supported Plug and Play device redirection is set to Enabled"
  when:
    - win19cis_rule_18_10_56_3_3_4
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.56.3.3.4
    - patch
    - terminalservices
    - gpo
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-7b.
    - NIST800-53R5_CM-7b.
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
    $registryValueName = "fDisablePNPRedir"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_56_3_3_4_results.stdout'
  register: rule_18_10_56_3_3_4_results

- name: "18.10.56.3.9.1 | GPO | Ensure Always prompt for password upon connection is set to Enabled"
  when:
    - win19cis_rule_18_10_56_3_9_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.56.3.9.1
    - patch
    - terminalservices
    - gpo
    - NIST800-171_3.1.1
    - NIST800-171_3.1.2
    - NIST800-171_3.5.1
    - NIST800-53_AC-17_6
    - NIST800-53_IA-2
    - NIST800-53R5_AC-17_6
    - NIST800-53R5_IA-2
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
    $registryValueName = "fPromptForPassword"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_56_3_9_1_results.stdout'
  register: rule_18_10_56_3_9_1_results

- name: "18.10.56.3.9.2 | GPO | Ensure Require secure RPC communication is set to Enabled"
  when:
    - win19cis_rule_18_10_56_3_9_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.56.3.9_2
    - patch
    - terminalservices
    - gpo
    - NIST800-171_3.3.1
    - NIST800-53_SC-7_8
    - NIST800-53R5_SC-7_8
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
    $registryValueName = "fEncryptRPCTraffic"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_56_3_9_2_results.stdout'
  register: rule_18_10_56_3_9_2_results

- name: "18.10.56.3.9.3 | GPO | Ensure Require use of specific security layer for remote RDP connections is set to Enabled SSL"
  when:
    - win19cis_rule_18_10_56_3_9_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.56.3.9.3
    - patch
    - terminalservices
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA-5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA-5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
    $registryValueName = "SecurityLayer"
    $type = "DWORD"
    $desiredValue = 2

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_56_3_9_3_results.stdout'
  register: rule_18_10_56_3_9_3_results

- name: "18.10.56.3.9.4 | GPO | Ensure Require user authentication for remote connections by using Network Level Authentication is set to Enabled"
  when:
    - win19cis_rule_18_10_56_3_9_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.56.3.9_4
    - patch
    - terminalservices
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA-5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA-5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
    $registryValueName = "UserAuthentication"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_56_3_9_4_results.stdout'
  register: rule_18_10_56_3_9_4_results

- name: "18.10.56.3.9.5 | GPO | Ensure Set client connection encryption level is set to Enabled High Level"
  when:
    - win19cis_rule_18_10_56_3_9_5
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.56.3.9.5
    - patch
    - terminalservices
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA-5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-8_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA-5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-8_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
    $registryValueName = "MinEncryptionLevel"
    $type = "DWORD"
    $desiredValue = 3

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_56_3_9_5_results.stdout'
  register: rule_18_10_56_3_9_5_results

- name: "18.10.56.3.10.1 | GPO | Ensure Set time limit for active but idle Remote Desktop Services sessions is set to Enabled 15 minutes or less"
  when: win19cis_rule_18_10_56_3_10_1
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10_56_3_10_1
    - patch
    - terminalservices
    - gpo
    - NIST800-171_3.1.10
    - NIST800-53_AC-11
    - NIST800-53R5_AC-11
  block:
    - name: "18.10.56.3.10.1 | GPO | Ensure Set time limit for active but idle Remote Desktop Services sessions is set to Enabled 15 minutes or less | Set 'Time Limit for Active but Idle RDP Sessions' to 15 minutes or less."
      when:
        - "'(Skipped)' not in item"
        - win19cis_idle_rdp_session_disconnect_time == 60000 or
          win19cis_idle_rdp_session_disconnect_time == 300000 or
          win19cis_idle_rdp_session_disconnect_time == 600000 or
          win19cis_idle_rdp_session_disconnect_time == 900000
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
        $registryValueName = "MaxIdleTime"
        $type = "DWORD"
        $desiredValue = {{ win19cis_idle_rdp_session_disconnect_time }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
        - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_10_56_3_10_1_results.stdout'
      register: rule_18_10_56_3_10_1_results

    - name: "18.10.56.3.10.1 | AUDIT | Ensure Set time limit for active but idle Remote Desktop Services sessions is set to Enabled 15 minutes or less | Warning Check for RDP Idle Session Timeout Standards."
      when:
        - win19cis_idle_rdp_session_disconnect_time == 0 or
          win19cis_idle_rdp_session_disconnect_time > 900000
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid time set for win19cis_idle_rdp_session_disconnect_time. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "18.10.56.3.10.1 | AUDIT | Ensure Set time limit for active but idle Remote Desktop Services sessions is set to Enabled 15 minutes or less | RDP Idle Session Timeout Warn Count."
      vars:
        warn_control_id: '18.10.56.3.10.1'
      when:
        - win19cis_idle_rdp_session_disconnect_time == 0 or
          win19cis_idle_rdp_session_disconnect_time > 900000
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.10.56.3.10.2 | GPO | Ensure Set time limit for disconnected sessions is set to Enabled 1 minute"
  when:
    - win19cis_rule_18_10_56_3_10_2
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.56.3.10.2
    - patch
    - terminalservices
    - gpo
    - NIST800-171_3.1.10
    - NIST800-53_AC-11
    - NIST800-53R5_AC-11
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
    $registryValueName = "MaxDisconnectionTime"
    $type = "DWORD"
    $desiredValue = 6000

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_56_3_10_2_results.stdout'
  register: rule_18_10_56_3_10_2_results

- name: "18.10.56.3.11.1 | GPO | Ensure Do not delete temp folders upon exit is set to Disabled"
  when:
    - win19cis_rule_18_10_56_3_11_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.56.3.11.1
    - patch
    - terminalservices
    - gpo
    - NIST800-53_AU-11
    - NIST800-53_SI-12
    - NIST800-53R5_AU-11
    - NIST800-53R5_SI-12
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
    $registryValueName = "DeleteTempDirsOnExit"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_56_3_11_1_results.stdout'
  register: rule_18_10_56_3_11_1_results

- name: "18.10.56.3.11.2 | GPO | Ensure Do not use temporary folders per session is set to Disabled"
  when:
    - win19cis_rule_18_10_56_3_11_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.56.3.11.2
    - patch
    - terminalservices
    - gpo
    - NIST800-53_AU-11
    - NIST800-53_SI-12
    - NIST800-53R5_AU-11
    - NIST800-53R5_SI-12
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
    $registryValueName = "PerSessionTempDir"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_56_3_11_2_results.stdout'
  register: rule_18_10_56_3_11_2_results

- name: "18.10.57.1 | GPO | Ensure Prevent downloading of enclosures is set to Enabled"
  when:
    - win19cis_rule_18_10_57_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.57.1
    - patch
    - enclosure
    - gpo
    - NIST800-171_3.4.9
    - NIST800-171_3.13.13
    - NIST800-53_CM-10
    - NIST800-53_CM-11
    - NIST800-53_SC-18
    - NIST800-53R5_CM-10
    - NIST800-53R5_CM-11
    - NIST800-53R5_SC-18
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Internet Explorer\Feeds"
    $registryValueName = "DisableEnclosureDownload"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_57_1_results.stdout'
  register: rule_18_10_57_1_results

- name: "18.10.58.2 | GPO | Ensure Allow Cloud Search is set to Enabled Disable Cloud Search"
  when:
    - win19cis_rule_18_10_58_2
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.58.2
    - patch
    - search
    - cloud
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Windows Search"
    $registryValueName = "AllowCloudSearch"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_58_2_results.stdout'
  register: rule_18_10_58_2_results

- name: "18.10.58.3 | GPO | Ensure Allow indexing of encrypted files is set to Disabled"
  when:
    - win19cis_rule_18_10_58_3
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.58.3
    - patch
    - search
    - encrypted
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Windows Search"
    $registryValueName = "AllowIndexingEncryptedStoresOrItems"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_58_3_results.stdout'
  register: rule_18_10_58_3_results

- name: "18.10.58.4 | GPO | Ensure Allow search highlights is set to Disabled"
  when:
    - win19cis_rule_18_10_58_4
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.58.4
    - patch
    - search
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Windows Search"
    $registryValueName = "EnableDynamicContentInWSB"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_58_4_results.stdout'
  register: rule_18_10_58_4_results

- name: "18.10.62.1 | GPO | Ensure Turn off KMS Client Online AVS Validation is set to Enabled"
  when:
    - win19cis_rule_18_10_62_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.62.1
    - patch
    - kms
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Currentversion\Software Protection Platform"
    $registryValueName = "NoGenTicket"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_62_1_results.stdout'
  register: rule_18_10_62_1_results

- name: "18.10.75.2.1 | GPO | Ensure Configure Windows Defender SmartScreen is set to Enabled Warn and prevent bypass"
  when:
    - win19cis_rule_18_10_75_2_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.75.2.1
    - patch
    - defender
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\System"
    $enableSmartScreenValueName = "EnableSmartScreen"
    $enableSmartScreenDesiredValue = 1
    $shellSmartScreenLevelValueName = "ShellSmartScreenLevel"
    $shellSmartScreenLevelDesiredValue = "Block"

    $currentEnableSmartScreenValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $enableSmartScreenValueName -ErrorAction SilentlyContinue).Value
    $currentShellSmartScreenLevelValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $shellSmartScreenLevelValueName -ErrorAction SilentlyContinue).Value

    if ($currentEnableSmartScreenValue -ne $enableSmartScreenDesiredValue) {
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $enableSmartScreenValueName -Type DWORD -Value $enableSmartScreenDesiredValue
        $status = "Patched"
    }

    if ($currentShellSmartScreenLevelValue -ne $shellSmartScreenLevelDesiredValue) {
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $shellSmartScreenLevelValueName -Type String -Value $shellSmartScreenLevelDesiredValue
        $status = "Patched"
    }

    if ($status -ne "Patched") {
        Write-Output "No Change Needed"
    } else {
        Write-Output $status
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_75_2_1_results.stdout'
  register: rule_18_10_75_2_1_results

- name: "18.10.79.1 | GPO | Ensure Allow suggested apps in Windows Ink Workspace is set to Disabled"
  when:
    - win19cis_rule_18_10_79_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.79.1
    - patch
    - wik
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\WindowsInkWorkspace"
    $registryValueName = "AllowSuggestedAppsInWindowsInkWorkspace"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_79_1_results.stdout'
  register: rule_18_10_79_1_results

- name: "18.10.79.2 | GPO | Ensure 'Allow suggested apps in Windows Ink Workspace' is set to 'Disabled'"
  when: win19cis_rule_18_10_79_2
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.79.2
    - automated
    - patch
    - gpo
    - NIST800-171_3.14.6
    - NIST800-171_3.14.7
    - NIST800-53_SI-4
    - NIST800-53R5_SI-4
  block:
    - name: "18.10.79.2 | GPO | Ensure 'Allow suggested apps in Windows Ink Workspace' is set to 'Disabled' | Set Variable."
      when:
        - "'(Skipped)' not in item"
        - win19cis_allow_windows_ink_workspace == 0 or win19cis_allow_windows_ink_workspace == 1
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\WindowsInkWorkspace"
        $registryValueName = "AllowWindowsInkWorkspace"
        $type = "DWORD"
        $desiredValue = {{ win19cis_allow_windows_ink_workspace }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_10_79_2_results.stdout'
      register: rule_18_10_79_2_results

    - name: "18.10.79.2 | AUDIT | Ensure 'Allow suggested apps in Windows Ink Workspace' is set to 'Disabled' | Warning Check For Variable Standards."
      when:
        - win19cis_allow_windows_ink_workspace != 0
        - win19cis_allow_windows_ink_workspace != 1
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid setting for win19cis_allow_windows_ink_workspace. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "18.10.79.2 | AUDIT | Ensure 'Allow suggested apps in Windows Ink Workspace' is set to 'Disabled' | Warn Count."
      vars:
        warn_control_id: '18.10.79.2'
      when:
        - win19cis_allow_windows_ink_workspace != 0
        - win19cis_allow_windows_ink_workspace != 1
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.10.80.1 | GPO | Ensure Allow user control over installs is set to Disabled"
  when:
    - win19cis_rule_18_10_80_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.80.1
    - patch
    - gpo
    - NIST800-171_3.1.7
    - NIST800-53_AC-6_10
    - NIST800-53R5_AC-6_10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer"
    $registryValueName = "EnableUserControl"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_80_1_results.stdout'
  register: rule_18_10_80_1_results

- name: "18.10.80.2 | GPO | Ensure 'Always install with elevated privileges' is set to 'Disabled'"
  when:
    - win19cis_rule_18_10_80_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.80.2
    - patch
    - gpo
    - NIST800-171_3.1.1
    - NIST800-53_AC-2_9
    - NIST800-53R5_AC-2_9
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer"
    $registryValueName = "AlwaysInstallElevated"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_80_2_results.stdout'
  register: rule_18_10_80_2_results

- name: "18.10.80.3 | GPO | Ensure Prevent Internet Explorer security prompt for Windows Installer scripts is set to Disabled"
  when:
    - win19cis_rule_18_10_80_3
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.80.3
    - patch
    - ie
    - gpo
    - NIST800-171_3.4.8
    - NIST800-53_CM-7_5
    - NIST800-53_CM-10
    - NIST800-53R5_CM-7_5
    - NIST800-53R5_CM-10
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer"
    $registryValueName = "SafeForScripting"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_80_3_results.stdout'
  register: rule_18_10_80_3_results

- name: "18.10.81.1 | GPO | Ensure 'Sign-in and lock last interactive user automatically after a restart' is set to 'Disabled'"
  when:
    - win19cis_rule_18_10_81_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.81.1
    - patch
    - logon
    - gpo
    - NIST800-171_3.1.10
    - NIST800-53_AC-11
    - NIST800-53R5_AC-11
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Microsoft\Windows\Currentversion\Policies\System"
    $registryValueName = "DisableAutomaticRestartSignOn"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_81_1_results.stdout'
  register: rule_18_10_81_1_results

- name: "18.10.86.1 | GPO | Ensure Turn on PowerShell Script Block Logging is set to Enabled"
  when:
    - win19cis_rule_18_10_86_1
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.86.1
    - patch
    - powershell
    - gpo
    - NIST800-171_3.3.1
    - NIST800-171_3.3.2
    - NIST800-53_AU-2
    - NIST800-53R5_AU-2
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"
    $registryValueName = "EnableScriptBlockLogging"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_86_1_results.stdout'
  register: rule_18_10_86_1_results

- name: "18.10.86.2 | GPO | Ensure Turn on PowerShell Transcription is set to Enabled"
  when:
    - win19cis_rule_18_10_86_2
    - "'(Skipped)' not in item"
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.86.2
    - patch
    - powershell
    - gpo
    - NIST800-171_3.3.1
    - NIST800-171_3.3.2
    - NIST800-53_AU-2
    - NIST800-53R5_AU-2
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Powershell\Transcription"
    $registryValueName = "EnableTranscripting"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_86_2_results.stdout'
  register: rule_18_10_86_2_results

- name: "18.10.88.1.1 | GPO | Ensure Allow Basic authentication is set to Disabled"
  when:
    - win19cis_rule_18_10_88_1_1
    - "'(Skipped)' not in item"
    - not win_skip_for_test
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.88.1.1
    - patch
    - winrm
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA_5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-9_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA_5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-9_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Winrm\Client"
    $registryValueName = "AllowBasic"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_88_1_1_results.stdout'
  register: rule_18_10_88_1_1_results

- name: "18.10.88.1.2 | GPO | Ensure Allow unencrypted traffic is set to Disabled"
  when:
    - win19cis_rule_18_10_88_1_2
    - "'(Skipped)' not in item"
    - not win_skip_for_test
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.88.1.2
    - patch
    - winrm
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA_5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-9_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA_5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-9_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Winrm\Client"
    $registryValueName = "AllowUnencryptedTraffic"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_88_1_2_results.stdout'
  register: rule_18_10_88_1_2_results

- name: "18.10.88.1.3 | GPO | Ensure Disallow Digest authentication is set to Enabled"
  when:
    - win19cis_rule_18_10_88_1_3
    - "'(Skipped)' not in item"
    - not win_skip_for_test
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.88.1.3
    - patch
    - winrm
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA_5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-9_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA_5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-9_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Winrm\Client"
    $registryValueName = "AllowDigest"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_88_1_3_results.stdout'
  register: rule_18_10_88_1_3_results

- name: "18.10.88.2.1 | GPO | Ensure Allow Basic authentication is set to Disabled"
  when:
    - win19cis_rule_18_10_88_2_1
    - "'(Skipped)' not in item"
    - not win_skip_for_test
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.88.2.1
    - patch
    - winrm
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA_5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-9_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA_5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-9_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Winrm\Service"
    $registryValueName = "AllowBasic"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_88_2_1_results.stdout'
  register: rule_18_10_88_2_1_results

- name: "18.10.88.2.2 | GPO | Ensure Allow remote server management through WinRM is set to Disabled"
  when:
    - win19cis_rule_18_10_88_2_2
    - "'(Skipped)' not in item"
    - not win_skip_for_test
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.88.2.2
    - patch
    - winrm
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Winrm\Service"
    $registryValueName = "AllowAutoConfig"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_88_2_2_results.stdout'
  register: rule_18_10_88_2_2_results

- name: "18.10.88.2.3 | GPO | Ensure Allow unencrypted traffic is set to Disabled"
  when:
    - win19cis_rule_18_10_88_2_3
    - "'(Skipped)' not in item"
    - not win_skip_for_test
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.88.2.3
    - patch
    - winrm
    - encryption
    - gpo
    - NIST800-171_3.1.13
    - NIST800-171_3.5.2
    - NIST800-171_3.13.8
    - NIST800-53_AC-17_2
    - NIST800-53_IA_5
    - NIST800-53_IA-5_1
    - NIST800-53_SC-8
    - NIST800-53_SC-9_1
    - NIST800-53R5_AC-17_2
    - NIST800-53R5_IA_5
    - NIST800-53R5_IA-5_1
    - NIST800-53R5_SC-8
    - NIST800-53R5_SC-9_1
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Winrm\Service"
    $registryValueName = "AllowUnencryptedTraffic"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_88_2_3_results.stdout'
  register: rule_18_10_88_2_3_results

- name: "18.10.88.2.4 | GPO | Ensure Disallow WinRM from storing RunAs credentials is set to Enabled"
  when:
    - win19cis_rule_18_10_88_2_4
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.88.2.4
    - patch
    - winrm
    - gpo
    - NIST800-171_3.13.2
    - NIST800-171_3.13.5
    - NIST800-53_SC-7_21
    - NIST800-53R5_SC-7_21
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Winrm\Service"
    $registryValueName = "DisableRunAs"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_88_2_4_results.stdout'
  register: rule_18_10_88_2_4_results

- name: "18.10.89.1 | GPO | Ensure Allow Remote Shell Access is set to Disabled"
  when:
    - win19cis_rule_18_10_89_1
    - "'(Skipped)' not in item"
    - not win_skip_for_test
  tags:
    - level2-domaincontroller
    - level2-memberserver
    - rule_18.10.89.1
    - patch
    - winrm
    - gpo
    - NIST800-171_3.4.2
    - NIST800-171_3.4.6
    - NIST800-171_3.4.7
    - NIST800-53_CM-6
    - NIST800-53_CM-7
    - NIST800-53R5_CM-6
    - NIST800-53R5_CM-7
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Winrm\Service\Winrs"
    $registryValueName = "AllowRemoteShellAccess"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l2_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l2_dc_gpo else '' ) }}"
    - "{{ win19cis_l2_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l2_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_89_1_results.stdout'
  register: rule_18_10_89_1_results

- name: "18.10.91.2.1 | GPO | Ensure Prevent users from modifying settings is set to Enabled"
  when:
    - win19cis_rule_18_10_91_2_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.91.2.1
    - patch
    - accounts
    - gpo
    - NIST800-53_SI-16
    - NIST800-53R5_SI-16
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender Security Center\App and Browser protection"
    $registryValueName = "DisallowExploitProtectionOverride"
    $type = "DWORD"
    $desiredValue = 1

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_91_2_1_results.stdout'
  register: rule_18_10_91_2_1_results

- name: "18.10.92.1.1 | GPO | Ensure No auto-restart with logged on users for scheduled automatic updates installations is set to Disabled"
  when:
    - win19cis_rule_18_10_92_1_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.92.1.1
    - patch
    - winupdate
    - gpo
    - NIST800-171_3.11.2
    - NIST800-171_3.11.3
    - NIST800-171_3.14.1
    - NIST800-53_RA-5
    - NIST800-53_SI-2
    - NIST800-53_SI-2_2
    - NIST800-53R5_RA-5
    - NIST800-53R5_SI-2
    - NIST800-53R5_SI-2_2
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Windowsupdate\Au"
    $registryValueName = "NoAutoRebootWithLoggedOnUsers"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_92_1_1_results.stdout'
  register: rule_18_10_92_1_1_results

- name: "18.10.92.2.1 | GPO | Ensure Configure Automatic Updates is set to Enabled"
  when:
    - win19cis_rule_18_10_92_2_1
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.92.2.1
    - patch
    - winupdate
    - gpo
    - NIST800-171_3.11.2
    - NIST800-171_3.11.3
    - NIST800-171_3.14.1
    - NIST800-53_RA-5
    - NIST800-53_SI-2
    - NIST800-53_SI-2_2
    - NIST800-53R5_RA-5
    - NIST800-53R5_SI-2
    - NIST800-53R5_SI-2_2
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Windowsupdate\Au"
    $registryValueName = "NoAutoUpdate"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_92_2_1_results.stdout'
  register: rule_18_10_92_2_1_results

- name: "18.10.92.2.2 | GPO | Ensure Configure Automatic Updates Scheduled install day is set to 0 - Every day"
  when:
    - win19cis_rule_18_10_92_2_2
    - "'(Skipped)' not in item"
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.92.2.2
    - patch
    - winupdate
    - gpo
    - NIST800-171_3.11.2
    - NIST800-171_3.11.3
    - NIST800-171_3.14.1
    - NIST800-53_RA-5
    - NIST800-53_SI-2
    - NIST800-53_SI-2_2
    - NIST800-53R5_RA-5
    - NIST800-53R5_SI-2
    - NIST800-53R5_SI-2_2
  ansible.windows.win_shell: |
    $gpoName = "{{ item }}"
    $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\Windowsupdate\Au"
    $registryValueName = "ScheduledInstallDay"
    $type = "DWORD"
    $desiredValue = 0

    # Get the current value of the registry key in the GPO
    $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

    # Check if the current value is equal to the desired value
    if ($currentValue -ne $desiredValue) {
        # If not, set the registry value to the desired value
        Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
        Write-Output "Patched"
    } else {
        Write-Output "No Change Needed"
    }
  loop:
    - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
    - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
  loop_control:
    label: "{{ item }}"
  changed_when: '"Patched" in rule_18_10_92_2_2_results.stdout'
  register: rule_18_10_92_2_2_results

- name: "18.10.92.4.1 | GPO | Ensure Manage preview builds is set to Enabled Disable preview builds"
  when: win19cis_rule_18_10_92_4_1
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.92.4.1
    - patch
    - winupdate
    - gpo
    - NIST800-171_3.4.8
    - NIST800-53_CM-7_5
    - NIST800-53_CM-10
    - NIST800-53R5_CM-7_5
    - NIST800-53R5_CM-10
  block:
    - name: "18.10.92.4.1 | GPO | Ensure Manage preview builds is set to Enabled Disable preview builds | Set 'Manage Preview Builds' to Enabled."
      when:
        - "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
        $registryValueName1 = "ManagePreviewBuilds"
        $type1 = "DWORD"
        $desiredValue1 = 1

        # Get the current value of the registry key in the GPO
        $currentValue1 = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName1 -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue1 -ne $desiredValue1) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName1 -Type $type1 -Value $desiredValue1
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_10_92_4_1_manage_results.stdout'
      register: rule_18_10_92_4_1_manage_results

    - name: "18.10.92.4.1 | GPO | Ensure Manage preview builds is set to Enabled Disable preview builds | Set 'Manage Preview Builds Policy Value' to Disabled."
      when:
        - "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
        $registryValueName2 = "ManagePreviewBuildsPolicyValue"
        $type2 = "DWORD"
        $desiredValue2 = 0

        # Get the current value of the registry key in the GPO
        $currentValue2 = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName2 -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue2 -ne $desiredValue2) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName2 -Type $type2 -Value $desiredValue2
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_10_92_4_1_policy_results.stdout'
      register: rule_18_10_92_4_1_policy_results

- name: "18.10.92.4.2 | GPO | Ensure 'Select when Preview Builds and Feature Updates are received' is set to 'Enabled: 180 or more days'"
  when: win19cis_rule_18_10_92_4_2
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.92.4.2
    - automated
    - patch
    - manage_updates_offered_from_windows_update
    - preview
    - gpo
    - NIST800-171_3.11.2
    - NIST800-171_3.11.3
    - NIST800-171_3.14.1
    - NIST800-53_RA-5
    - NIST800-53_SI-2
    - NIST800-53_SI-2_2
    - NIST800-53R5_RA-5
    - NIST800-53R5_SI-2
    - NIST800-53R5_SI-2_2
  block:
    - name: "18.10.92.4.2 | GPO | Ensure 'Select when Preview Builds and Feature Updates are received' is set to 'Enabled: 180 or more days | Set 'Defer Feature Updates' to Enabled."
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
        $registryValueName = "DeferFeatureUpdates"
        $type = "DWORD"
        $desiredValue = 1

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_10_92_4_2_defer_results.stdout'
      register: rule_18_10_92_4_2_defer_results

    - name: "18.10.92.4.2 | GPO | Ensure 'Select when Preview Builds and Feature Updates are received' is set to 'Enabled: 180 or more days | Set 'Defer Feature Updates Period In Days' to 180 or more."
      when:
        - win19cis_defer_feature_updates_period_in_days >= 180
        - "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
        $registryValueName = "DeferFeatureUpdatesPeriodInDays"
        $type = "DWORD"
        $desiredValue = {{ win19cis_defer_feature_updates_period_in_days }}

        # Get the current value of the registry key in the GPO
        $currentValue = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue -ne $desiredValue) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName -Type $type -Value $desiredValue
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_10_92_4_2_days_results.stdout'
      register: rule_18_10_92_4_2_days_results

    - name: "18.10.92.4.2 | AUDIT | Ensure 'Select when Preview Builds and Feature Updates are received' is set to 'Enabled: 180 or more days' | Variable Warning."
      when: win19cis_defer_feature_updates_period_in_days < 180
      ansible.builtin.debug:
        msg:
          - "Warning!! You have an invalid number of days for win19cis_defer_feature_updates_period_in_days. Please read"
          - "the notes for the variable and make the necessary change to the variable to be in compliance."

    - name: "18.10.92.4.2 | AUDIT | Ensure 'Select when Preview Builds and Feature Updates are received' is set to 'Enabled: 180 or more days | Warning Count."
      vars:
        warn_control_id: '18.10.92.4.2'
      when: win19cis_defer_feature_updates_period_in_days < 180
      ansible.builtin.import_tasks:
        file: warning_facts.yml

- name: "18.10.92.4.3 | GPO | Ensure Select when Quality Updates are received is set to Enabled 0 days"
  when: win19cis_rule_18_10_92_4_3
  tags:
    - level1-domaincontroller
    - level1-memberserver
    - rule_18.10.92.4.3
    - patch
    - winupdate
    - gpo
    - NIST800-171_3.11.2
    - NIST800-171_3.11.3
    - NIST800-171_3.14.1
    - NIST800-53_RA-5
    - NIST800-53_SI-2
    - NIST800-53_SI-2_2
    - NIST800-53R5_RA-5
    - NIST800-53R5_SI-2
    - NIST800-53R5_SI-2_2
  block:
    - name: "18.10.92.4.3 | GPO | Ensure Select when Quality Updates are received is set to Enabled 0 days | Set 'Defer Quality Updates' to Enabled."
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
        $registryValueName1 = "DeferQualityUpdates"
        $type1 = "DWORD"
        $desiredValue1 = 1

        # Get the current value of the registry key in the GPO
        $currentValue1 = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName1 -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue1 -ne $desiredValue1) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName1 -Type $type1 -Value $desiredValue1
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_10_92_4_3_defer_results.stdout'
      register: rule_18_10_92_4_3_defer_results

    - name: "18.10.92.4.3 | GPO | Ensure Select when Quality Updates are received is set to Enabled 0 days | Set 'Defer Quality Updates Period In Days' to 0 days."
      when: "'(Skipped)' not in item"
      ansible.windows.win_shell: |
        $gpoName = "{{ item }}"
        $registryKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
        $registryValueName2 = "DeferQualityUpdatesPeriodInDays"
        $type2 = "DWORD"
        $desiredValue2 = 0

        # Get the current value of the registry key in the GPO
        $currentValue2 = (Get-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName2 -ErrorAction SilentlyContinue).Value

        # Check if the current value is equal to the desired value
        if ($currentValue2 -ne $desiredValue2) {
            # If not, set the registry value to the desired value
            Set-GPRegistryValue -Name $gpoName -Key $registryKeyPath -ValueName $registryValueName2 -Type $type2 -Value $desiredValue2
            Write-Output "Patched"
        } else {
            Write-Output "No Change Needed"
        }
      loop:
        - "{{ win19cis_l1_dc_gpo_name ~ ( '(Skipped)' if not win19cis_l1_dc_gpo else '' ) }}"
        - "{{ win19cis_l1_ms_gpo_name ~ ( '(Skipped)' if not win19cis_l1_ms_gpo else '' ) }}"
      loop_control:
        label: "{{ item }}"
      changed_when: '"Patched" in rule_18_10_92_4_3_days_results.stdout'
      register: rule_18_10_92_4_3_days_results
